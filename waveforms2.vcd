$date
	Fri Apr 21 21:06:43 2023
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module DATAPATH_testbench $end
$var wire 64 ! Ra_out [63:0] $end
$var wire 64 " Dout [63:0] $end
$var reg 5 # C [4:0] $end
$var reg 1 $ CLK $end
$var reg 5 % Ra [4:0] $end
$var reg 5 & Rb [4:0] $end
$var reg 5 ' Rw [4:0] $end
$var reg 1 ( WE_MEM $end
$var reg 1 ) WE_RF $end
$scope module UUT $end
$var wire 5 * C [4:0] $end
$var wire 1 $ CLK $end
$var wire 1 + Cout $end
$var wire 64 , DEBUG_Dout [63:0] $end
$var wire 64 - DEBUG_Ra_out [63:0] $end
$var wire 64 . DEBUG_Rb_out [63:0] $end
$var wire 5 / Ra [4:0] $end
$var wire 5 0 Rb [4:0] $end
$var wire 5 1 Rw [4:0] $end
$var wire 1 ( WE_MEM $end
$var wire 1 ) WE_RF $end
$var wire 64 2 RF_out_b [63:0] $end
$var wire 64 3 RF_out_a [63:0] $end
$var wire 64 4 DM_out [63:0] $end
$var wire 5 5 DM_ADDR [4:0] $end
$scope module MEM $end
$var wire 1 $ CLK $end
$var wire 64 6 D_out [63:0] $end
$var wire 1 ( WE $end
$var wire 64 7 D_in [63:0] $end
$var wire 5 8 ADDR [4:0] $end
$upscope $end
$scope module SOM $end
$var wire 1 9 Cin $end
$var wire 1 + Cout $end
$var wire 5 : X [4:0] $end
$var wire 5 ; Y [4:0] $end
$var wire 1 < cout $end
$var wire 6 = cins [5:0] $end
$var wire 5 > S [4:0] $end
$var parameter 32 ? SIZE $end
$scope begin genblk1[0] $end
$var parameter 2 @ i $end
$scope module SOMA $end
$var wire 1 A Cin $end
$var wire 1 B Cout $end
$var wire 1 C S $end
$var wire 1 D X $end
$var wire 1 E Y $end
$var wire 1 F xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[1] $end
$var parameter 2 G i $end
$scope module SOMA $end
$var wire 1 H Cin $end
$var wire 1 I Cout $end
$var wire 1 J S $end
$var wire 1 K X $end
$var wire 1 L Y $end
$var wire 1 M xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[2] $end
$var parameter 3 N i $end
$scope module SOMA $end
$var wire 1 O Cin $end
$var wire 1 P Cout $end
$var wire 1 Q S $end
$var wire 1 R X $end
$var wire 1 S Y $end
$var wire 1 T xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[3] $end
$var parameter 3 U i $end
$scope module SOMA $end
$var wire 1 V Cin $end
$var wire 1 W Cout $end
$var wire 1 X S $end
$var wire 1 Y X $end
$var wire 1 Z Y $end
$var wire 1 [ xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[4] $end
$var parameter 4 \ i $end
$scope module SOMA $end
$var wire 1 ] Cin $end
$var wire 1 ^ Cout $end
$var wire 1 _ S $end
$var wire 1 ` X $end
$var wire 1 a Y $end
$var wire 1 b xor1 $end
$upscope $end
$upscope $end
$upscope $end
$scope module regfile $end
$var wire 1 $ CLK $end
$var wire 64 c Da [63:0] $end
$var wire 64 d Db [63:0] $end
$var wire 64 e Din [63:0] $end
$var wire 5 f Ra [4:0] $end
$var wire 5 g Rb [4:0] $end
$var wire 5 h Rw [4:0] $end
$var wire 1 ) WE $end
$var parameter 32 i N $end
$var parameter 32 j SIZE $end
$scope begin genblk1[1] $end
$var wire 1 k load_reg $end
$var parameter 2 l i $end
$scope module xN $end
$var wire 1 $ CLK $end
$var wire 64 m IN [63:0] $end
$var wire 1 n LOAD $end
$var parameter 32 o SIZE $end
$var reg 64 p OUT [63:0] $end
$upscope $end
$upscope $end
$scope begin genblk1[2] $end
$var wire 1 q load_reg $end
$var parameter 3 r i $end
$scope module xN $end
$var wire 1 $ CLK $end
$var wire 64 s IN [63:0] $end
$var wire 1 t LOAD $end
$var parameter 32 u SIZE $end
$var reg 64 v OUT [63:0] $end
$upscope $end
$upscope $end
$scope begin genblk1[3] $end
$var wire 1 w load_reg $end
$var parameter 3 x i $end
$scope module xN $end
$var wire 1 $ CLK $end
$var wire 64 y IN [63:0] $end
$var wire 1 z LOAD $end
$var parameter 32 { SIZE $end
$var reg 64 | OUT [63:0] $end
$upscope $end
$upscope $end
$scope begin genblk1[4] $end
$var wire 1 } load_reg $end
$var parameter 4 ~ i $end
$scope module xN $end
$var wire 1 $ CLK $end
$var wire 64 !" IN [63:0] $end
$var wire 1 "" LOAD $end
$var parameter 32 #" SIZE $end
$var reg 64 $" OUT [63:0] $end
$upscope $end
$upscope $end
$scope begin genblk1[5] $end
$var wire 1 %" load_reg $end
$var parameter 4 &" i $end
$scope module xN $end
$var wire 1 $ CLK $end
$var wire 64 '" IN [63:0] $end
$var wire 1 (" LOAD $end
$var parameter 32 )" SIZE $end
$var reg 64 *" OUT [63:0] $end
$upscope $end
$upscope $end
$scope begin genblk1[6] $end
$var wire 1 +" load_reg $end
$var parameter 4 ," i $end
$scope module xN $end
$var wire 1 $ CLK $end
$var wire 64 -" IN [63:0] $end
$var wire 1 ." LOAD $end
$var parameter 32 /" SIZE $end
$var reg 64 0" OUT [63:0] $end
$upscope $end
$upscope $end
$scope begin genblk1[7] $end
$var wire 1 1" load_reg $end
$var parameter 4 2" i $end
$scope module xN $end
$var wire 1 $ CLK $end
$var wire 64 3" IN [63:0] $end
$var wire 1 4" LOAD $end
$var parameter 32 5" SIZE $end
$var reg 64 6" OUT [63:0] $end
$upscope $end
$upscope $end
$scope begin genblk1[8] $end
$var wire 1 7" load_reg $end
$var parameter 5 8" i $end
$scope module xN $end
$var wire 1 $ CLK $end
$var wire 64 9" IN [63:0] $end
$var wire 1 :" LOAD $end
$var parameter 32 ;" SIZE $end
$var reg 64 <" OUT [63:0] $end
$upscope $end
$upscope $end
$scope begin genblk1[9] $end
$var wire 1 =" load_reg $end
$var parameter 5 >" i $end
$scope module xN $end
$var wire 1 $ CLK $end
$var wire 64 ?" IN [63:0] $end
$var wire 1 @" LOAD $end
$var parameter 32 A" SIZE $end
$var reg 64 B" OUT [63:0] $end
$upscope $end
$upscope $end
$scope begin genblk1[10] $end
$var wire 1 C" load_reg $end
$var parameter 5 D" i $end
$scope module xN $end
$var wire 1 $ CLK $end
$var wire 64 E" IN [63:0] $end
$var wire 1 F" LOAD $end
$var parameter 32 G" SIZE $end
$var reg 64 H" OUT [63:0] $end
$upscope $end
$upscope $end
$scope begin genblk1[11] $end
$var wire 1 I" load_reg $end
$var parameter 5 J" i $end
$scope module xN $end
$var wire 1 $ CLK $end
$var wire 64 K" IN [63:0] $end
$var wire 1 L" LOAD $end
$var parameter 32 M" SIZE $end
$var reg 64 N" OUT [63:0] $end
$upscope $end
$upscope $end
$scope begin genblk1[12] $end
$var wire 1 O" load_reg $end
$var parameter 5 P" i $end
$scope module xN $end
$var wire 1 $ CLK $end
$var wire 64 Q" IN [63:0] $end
$var wire 1 R" LOAD $end
$var parameter 32 S" SIZE $end
$var reg 64 T" OUT [63:0] $end
$upscope $end
$upscope $end
$scope begin genblk1[13] $end
$var wire 1 U" load_reg $end
$var parameter 5 V" i $end
$scope module xN $end
$var wire 1 $ CLK $end
$var wire 64 W" IN [63:0] $end
$var wire 1 X" LOAD $end
$var parameter 32 Y" SIZE $end
$var reg 64 Z" OUT [63:0] $end
$upscope $end
$upscope $end
$scope begin genblk1[14] $end
$var wire 1 [" load_reg $end
$var parameter 5 \" i $end
$scope module xN $end
$var wire 1 $ CLK $end
$var wire 64 ]" IN [63:0] $end
$var wire 1 ^" LOAD $end
$var parameter 32 _" SIZE $end
$var reg 64 `" OUT [63:0] $end
$upscope $end
$upscope $end
$scope begin genblk1[15] $end
$var wire 1 a" load_reg $end
$var parameter 5 b" i $end
$scope module xN $end
$var wire 1 $ CLK $end
$var wire 64 c" IN [63:0] $end
$var wire 1 d" LOAD $end
$var parameter 32 e" SIZE $end
$var reg 64 f" OUT [63:0] $end
$upscope $end
$upscope $end
$scope begin genblk1[16] $end
$var wire 1 g" load_reg $end
$var parameter 6 h" i $end
$scope module xN $end
$var wire 1 $ CLK $end
$var wire 64 i" IN [63:0] $end
$var wire 1 j" LOAD $end
$var parameter 32 k" SIZE $end
$var reg 64 l" OUT [63:0] $end
$upscope $end
$upscope $end
$scope begin genblk1[17] $end
$var wire 1 m" load_reg $end
$var parameter 6 n" i $end
$scope module xN $end
$var wire 1 $ CLK $end
$var wire 64 o" IN [63:0] $end
$var wire 1 p" LOAD $end
$var parameter 32 q" SIZE $end
$var reg 64 r" OUT [63:0] $end
$upscope $end
$upscope $end
$scope begin genblk1[18] $end
$var wire 1 s" load_reg $end
$var parameter 6 t" i $end
$scope module xN $end
$var wire 1 $ CLK $end
$var wire 64 u" IN [63:0] $end
$var wire 1 v" LOAD $end
$var parameter 32 w" SIZE $end
$var reg 64 x" OUT [63:0] $end
$upscope $end
$upscope $end
$scope begin genblk1[19] $end
$var wire 1 y" load_reg $end
$var parameter 6 z" i $end
$scope module xN $end
$var wire 1 $ CLK $end
$var wire 64 {" IN [63:0] $end
$var wire 1 |" LOAD $end
$var parameter 32 }" SIZE $end
$var reg 64 ~" OUT [63:0] $end
$upscope $end
$upscope $end
$scope begin genblk1[20] $end
$var wire 1 !# load_reg $end
$var parameter 6 "# i $end
$scope module xN $end
$var wire 1 $ CLK $end
$var wire 64 ## IN [63:0] $end
$var wire 1 $# LOAD $end
$var parameter 32 %# SIZE $end
$var reg 64 &# OUT [63:0] $end
$upscope $end
$upscope $end
$scope begin genblk1[21] $end
$var wire 1 '# load_reg $end
$var parameter 6 (# i $end
$scope module xN $end
$var wire 1 $ CLK $end
$var wire 64 )# IN [63:0] $end
$var wire 1 *# LOAD $end
$var parameter 32 +# SIZE $end
$var reg 64 ,# OUT [63:0] $end
$upscope $end
$upscope $end
$scope begin genblk1[22] $end
$var wire 1 -# load_reg $end
$var parameter 6 .# i $end
$scope module xN $end
$var wire 1 $ CLK $end
$var wire 64 /# IN [63:0] $end
$var wire 1 0# LOAD $end
$var parameter 32 1# SIZE $end
$var reg 64 2# OUT [63:0] $end
$upscope $end
$upscope $end
$scope begin genblk1[23] $end
$var wire 1 3# load_reg $end
$var parameter 6 4# i $end
$scope module xN $end
$var wire 1 $ CLK $end
$var wire 64 5# IN [63:0] $end
$var wire 1 6# LOAD $end
$var parameter 32 7# SIZE $end
$var reg 64 8# OUT [63:0] $end
$upscope $end
$upscope $end
$scope begin genblk1[24] $end
$var wire 1 9# load_reg $end
$var parameter 6 :# i $end
$scope module xN $end
$var wire 1 $ CLK $end
$var wire 64 ;# IN [63:0] $end
$var wire 1 <# LOAD $end
$var parameter 32 =# SIZE $end
$var reg 64 ># OUT [63:0] $end
$upscope $end
$upscope $end
$scope begin genblk1[25] $end
$var wire 1 ?# load_reg $end
$var parameter 6 @# i $end
$scope module xN $end
$var wire 1 $ CLK $end
$var wire 64 A# IN [63:0] $end
$var wire 1 B# LOAD $end
$var parameter 32 C# SIZE $end
$var reg 64 D# OUT [63:0] $end
$upscope $end
$upscope $end
$scope begin genblk1[26] $end
$var wire 1 E# load_reg $end
$var parameter 6 F# i $end
$scope module xN $end
$var wire 1 $ CLK $end
$var wire 64 G# IN [63:0] $end
$var wire 1 H# LOAD $end
$var parameter 32 I# SIZE $end
$var reg 64 J# OUT [63:0] $end
$upscope $end
$upscope $end
$scope begin genblk1[27] $end
$var wire 1 K# load_reg $end
$var parameter 6 L# i $end
$scope module xN $end
$var wire 1 $ CLK $end
$var wire 64 M# IN [63:0] $end
$var wire 1 N# LOAD $end
$var parameter 32 O# SIZE $end
$var reg 64 P# OUT [63:0] $end
$upscope $end
$upscope $end
$scope begin genblk1[28] $end
$var wire 1 Q# load_reg $end
$var parameter 6 R# i $end
$scope module xN $end
$var wire 1 $ CLK $end
$var wire 64 S# IN [63:0] $end
$var wire 1 T# LOAD $end
$var parameter 32 U# SIZE $end
$var reg 64 V# OUT [63:0] $end
$upscope $end
$upscope $end
$scope begin genblk1[29] $end
$var wire 1 W# load_reg $end
$var parameter 6 X# i $end
$scope module xN $end
$var wire 1 $ CLK $end
$var wire 64 Y# IN [63:0] $end
$var wire 1 Z# LOAD $end
$var parameter 32 [# SIZE $end
$var reg 64 \# OUT [63:0] $end
$upscope $end
$upscope $end
$scope begin genblk1[30] $end
$var wire 1 ]# load_reg $end
$var parameter 6 ^# i $end
$scope module xN $end
$var wire 1 $ CLK $end
$var wire 64 _# IN [63:0] $end
$var wire 1 `# LOAD $end
$var parameter 32 a# SIZE $end
$var reg 64 b# OUT [63:0] $end
$upscope $end
$upscope $end
$scope begin genblk1[31] $end
$var wire 1 c# load_reg $end
$var parameter 6 d# i $end
$scope module xN $end
$var wire 1 $ CLK $end
$var wire 64 e# IN [63:0] $end
$var wire 1 f# LOAD $end
$var parameter 32 g# SIZE $end
$var reg 64 h# OUT [63:0] $end
$upscope $end
$upscope $end
$scope module x0 $end
$var wire 1 $ CLK $end
$var wire 64 i# IN [63:0] $end
$var wire 1 j# LOAD $end
$var parameter 32 k# SIZE $end
$var reg 64 l# OUT [63:0] $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
b1000000 k#
b1000000 g#
b11111 d#
b1000000 a#
b11110 ^#
b1000000 [#
b11101 X#
b1000000 U#
b11100 R#
b1000000 O#
b11011 L#
b1000000 I#
b11010 F#
b1000000 C#
b11001 @#
b1000000 =#
b11000 :#
b1000000 7#
b10111 4#
b1000000 1#
b10110 .#
b1000000 +#
b10101 (#
b1000000 %#
b10100 "#
b1000000 }"
b10011 z"
b1000000 w"
b10010 t"
b1000000 q"
b10001 n"
b1000000 k"
b10000 h"
b1000000 e"
b1111 b"
b1000000 _"
b1110 \"
b1000000 Y"
b1101 V"
b1000000 S"
b1100 P"
b1000000 M"
b1011 J"
b1000000 G"
b1010 D"
b1000000 A"
b1001 >"
b1000000 ;"
b1000 8"
b1000000 5"
b111 2"
b1000000 /"
b110 ,"
b1000000 )"
b101 &"
b1000000 #"
b100 ~
b1000000 {
b11 x
b1000000 u
b10 r
b1000000 o
b1 l
b1000000 j
b100000 i
b100 \
b11 U
b10 N
b1 G
b0 @
b101 ?
$end
#0
$dumpvars
bx l#
1j#
b0 i#
bx h#
0f#
bx e#
0c#
bx b#
0`#
bx _#
0]#
bx \#
0Z#
bx Y#
0W#
bx V#
0T#
bx S#
0Q#
bx P#
0N#
bx M#
0K#
bx J#
0H#
bx G#
0E#
bx D#
0B#
bx A#
0?#
bx >#
0<#
bx ;#
09#
bx 8#
06#
bx 5#
03#
bx 2#
00#
bx /#
0-#
bx ,#
0*#
bx )#
0'#
bx &#
0$#
bx ##
0!#
bx ~"
0|"
bx {"
0y"
bx x"
0v"
bx u"
0s"
bx r"
0p"
bx o"
0m"
bx l"
0j"
bx i"
0g"
bx f"
0d"
bx c"
0a"
bx `"
0^"
bx ]"
0["
bx Z"
0X"
bx W"
0U"
bx T"
0R"
bx Q"
0O"
bx N"
0L"
bx K"
0I"
bx H"
0F"
bx E"
0C"
bx B"
0@"
bx ?"
0="
bx <"
0:"
bx 9"
07"
bx 6"
04"
bx 3"
01"
bx 0"
0."
bx -"
0+"
bx *"
0("
bx '"
0%"
bx $"
0""
bx !"
0}
bx |
0z
bx y
0w
bx v
0t
bx s
0q
bx p
1n
bx m
1k
b1 h
b0 g
bx f
bx e
bx d
bx c
xb
1a
x`
x_
x^
0]
x[
0Z
xY
xX
0W
0V
xT
0S
xR
xQ
0P
0O
xM
0L
xK
xJ
0I
0H
xF
0E
xD
xC
0B
0A
bx >
bx00000 =
x<
b10000 ;
bx :
09
bx 8
bx 7
bx 6
bx 5
bx 4
bx 3
bx 2
b1 1
b0 0
bx /
bx .
bx -
bx ,
z+
b10000 *
1)
0(
b1 '
b0 &
bx %
0$
b10000 #
bx "
bx !
$end
#5
0<
b1011011011 "
b1011011011 ,
b1011011011 4
b1011011011 6
b1011011011 e
b1011011011 m
b1011011011 s
b1011011011 y
b1011011011 !"
b1011011011 '"
b1011011011 -"
b1011011011 3"
b1011011011 9"
b1011011011 ?"
b1011011011 E"
b1011011011 K"
b1011011011 Q"
b1011011011 W"
b1011011011 ]"
b1011011011 c"
b1011011011 i"
b1011011011 o"
b1011011011 u"
b1011011011 {"
b1011011011 ##
b1011011011 )#
b1011011011 /#
b1011011011 5#
b1011011011 ;#
b1011011011 A#
b1011011011 G#
b1011011011 M#
b1011011011 S#
b1011011011 Y#
b1011011011 _#
b1011011011 e#
0C
0J
0Q
0X
b10000 5
b10000 8
b10000 >
1_
b0 =
0^
0F
0M
0T
0[
1b
0D
0K
0R
0Y
0`
b0 :
b0 l#
b0 .
b0 2
b0 d
1$
#10
0$
#15
b1011011011 p
1$
#20
bx "
bx ,
bx 4
bx 6
bx e
bx m
bx s
bx y
bx !"
bx '"
bx -"
bx 3"
bx 9"
bx ?"
bx E"
bx K"
bx Q"
bx W"
bx ]"
bx c"
bx i"
bx o"
bx u"
bx {"
bx ##
bx )#
bx /#
bx 5#
bx ;#
bx A#
bx G#
bx M#
bx S#
bx Y#
bx _#
bx e#
b10100 5
b10100 8
b10100 >
1Q
1T
1S
0n
0$
b10100 #
b10100 *
b10100 ;
b1011011011 !
b1011011011 -
b1011011011 3
b1011011011 7
b1011011011 c
b1 %
b1 /
b1 f
0)
1(
#25
b1011011011 "
b1011011011 ,
b1011011011 4
b1011011011 6
b1011011011 e
b1011011011 m
b1011011011 s
b1011011011 y
b1011011011 !"
b1011011011 '"
b1011011011 -"
b1011011011 3"
b1011011011 9"
b1011011011 ?"
b1011011011 E"
b1011011011 K"
b1011011011 Q"
b1011011011 W"
b1011011011 ]"
b1011011011 c"
b1011011011 i"
b1011011011 o"
b1011011011 u"
b1011011011 {"
b1011011011 ##
b1011011011 )#
b1011011011 /#
b1011011011 5#
b1011011011 ;#
b1011011011 A#
b1011011011 G#
b1011011011 M#
b1011011011 S#
b1011011011 Y#
b1011011011 _#
b1011011011 e#
1$
#30
0$
#35
1$
#40
0$
#45
1$
#50
0$
#55
1$
#60
0$
#65
1$
#70
0$
#75
1$
#80
0$
#85
1$
#90
0$
#95
1$
#100
0$
#105
1$
#110
0$
#115
1$
#120
0$
#125
1$
#130
0$
#135
1$
#140
0$
#145
1$
#150
0$
#155
1$
#160
0$
#165
1$
#170
0$
#175
1$
#180
0$
#185
1$
#190
0$
#195
1$
#200
0$
#205
1$
#210
0$
#215
1$
#220
0$
