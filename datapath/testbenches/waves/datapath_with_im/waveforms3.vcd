$date
	Mon May 08 20:24:57 2023
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module datapath_tb $end
$var reg 1 ! CLK $end
$var reg 1 " RF_din_sel $end
$var reg 1 # ULA_din2_sel $end
$var reg 1 $ WE_MEM $end
$var reg 1 % WE_RF $end
$var reg 1 & reset_pc $end
$var reg 1 ' sub $end
$scope module UUT $end
$var wire 1 ! CLK $end
$var wire 1 " RF_din_sel $end
$var wire 1 # ULA_din2_sel $end
$var wire 1 $ WE_MEM $end
$var wire 1 % WE_RF $end
$var wire 1 ( load_pc $end
$var wire 1 & reset_pc $end
$var wire 1 ' sub $end
$var wire 64 ) ula [63:0] $end
$var wire 5 * rs2 [4:0] $end
$var wire 5 + rs1 [4:0] $end
$var wire 5 , rd [4:0] $end
$var wire 32 - instruction_mem [31:0] $end
$var wire 32 . instruction [31:0] $end
$var wire 12 / imm [11:0] $end
$var wire 64 0 im_addr [63:0] $end
$var wire 12 1 extended_imm [11:0] $end
$var wire 64 2 ULA_Din2 [63:0] $end
$var wire 64 3 RF_Din [63:0] $end
$var wire 64 4 Dout_rs2 [63:0] $end
$var wire 64 5 Dout_rs1 [63:0] $end
$var wire 64 6 DM_out [63:0] $end
$scope module DM $end
$var wire 5 7 ADDR [4:0] $end
$var wire 1 ! CLK $end
$var wire 64 8 D_out [63:0] $end
$var wire 1 $ WE $end
$var wire 64 9 D_in [63:0] $end
$var parameter 32 : N $end
$var parameter 32 ; SIZE $end
$upscope $end
$scope module IM $end
$var wire 32 < OUTPUT [31:0] $end
$var wire 64 = ADDR [63:0] $end
$upscope $end
$scope module IR $end
$var wire 1 ! CLK $end
$var wire 32 > IN [31:0] $end
$var wire 1 ? LOAD $end
$var parameter 32 @ SIZE $end
$var reg 32 A OUT [31:0] $end
$upscope $end
$scope module PC $end
$var wire 1 ! CLK $end
$var wire 1 ( LOAD $end
$var wire 1 & RST $end
$var wire 12 B immediate [11:0] $end
$var wire 64 C pc_next [63:0] $end
$var wire 1 D pc_next_sel $end
$var wire 64 E next [63:0] $end
$var wire 64 F addr [63:0] $end
$scope module PC $end
$var wire 1 ! CLK $end
$var wire 1 ( LOAD $end
$var wire 1 & RST $end
$var wire 64 G IN [63:0] $end
$var parameter 32 H SIZE $end
$var reg 64 I OUT [63:0] $end
$upscope $end
$scope module adder $end
$var wire 1 J Cin $end
$var wire 1 K Cout $end
$var wire 64 L X [63:0] $end
$var wire 64 M Y [63:0] $end
$var wire 1 N cout $end
$var wire 65 O cins [64:0] $end
$var wire 64 P S [63:0] $end
$var parameter 32 Q SIZE $end
$scope begin genblk1[0] $end
$var parameter 2 R i $end
$scope module SOMA $end
$var wire 1 S Cin $end
$var wire 1 T Cout $end
$var wire 1 U S $end
$var wire 1 V X $end
$var wire 1 W Y $end
$var wire 1 X xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[1] $end
$var parameter 2 Y i $end
$scope module SOMA $end
$var wire 1 Z Cin $end
$var wire 1 [ Cout $end
$var wire 1 \ S $end
$var wire 1 ] X $end
$var wire 1 ^ Y $end
$var wire 1 _ xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[2] $end
$var parameter 3 ` i $end
$scope module SOMA $end
$var wire 1 a Cin $end
$var wire 1 b Cout $end
$var wire 1 c S $end
$var wire 1 d X $end
$var wire 1 e Y $end
$var wire 1 f xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[3] $end
$var parameter 3 g i $end
$scope module SOMA $end
$var wire 1 h Cin $end
$var wire 1 i Cout $end
$var wire 1 j S $end
$var wire 1 k X $end
$var wire 1 l Y $end
$var wire 1 m xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[4] $end
$var parameter 4 n i $end
$scope module SOMA $end
$var wire 1 o Cin $end
$var wire 1 p Cout $end
$var wire 1 q S $end
$var wire 1 r X $end
$var wire 1 s Y $end
$var wire 1 t xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[5] $end
$var parameter 4 u i $end
$scope module SOMA $end
$var wire 1 v Cin $end
$var wire 1 w Cout $end
$var wire 1 x S $end
$var wire 1 y X $end
$var wire 1 z Y $end
$var wire 1 { xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[6] $end
$var parameter 4 | i $end
$scope module SOMA $end
$var wire 1 } Cin $end
$var wire 1 ~ Cout $end
$var wire 1 !" S $end
$var wire 1 "" X $end
$var wire 1 #" Y $end
$var wire 1 $" xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[7] $end
$var parameter 4 %" i $end
$scope module SOMA $end
$var wire 1 &" Cin $end
$var wire 1 '" Cout $end
$var wire 1 (" S $end
$var wire 1 )" X $end
$var wire 1 *" Y $end
$var wire 1 +" xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[8] $end
$var parameter 5 ," i $end
$scope module SOMA $end
$var wire 1 -" Cin $end
$var wire 1 ." Cout $end
$var wire 1 /" S $end
$var wire 1 0" X $end
$var wire 1 1" Y $end
$var wire 1 2" xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[9] $end
$var parameter 5 3" i $end
$scope module SOMA $end
$var wire 1 4" Cin $end
$var wire 1 5" Cout $end
$var wire 1 6" S $end
$var wire 1 7" X $end
$var wire 1 8" Y $end
$var wire 1 9" xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[10] $end
$var parameter 5 :" i $end
$scope module SOMA $end
$var wire 1 ;" Cin $end
$var wire 1 <" Cout $end
$var wire 1 =" S $end
$var wire 1 >" X $end
$var wire 1 ?" Y $end
$var wire 1 @" xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[11] $end
$var parameter 5 A" i $end
$scope module SOMA $end
$var wire 1 B" Cin $end
$var wire 1 C" Cout $end
$var wire 1 D" S $end
$var wire 1 E" X $end
$var wire 1 F" Y $end
$var wire 1 G" xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[12] $end
$var parameter 5 H" i $end
$scope module SOMA $end
$var wire 1 I" Cin $end
$var wire 1 J" Cout $end
$var wire 1 K" S $end
$var wire 1 L" X $end
$var wire 1 M" Y $end
$var wire 1 N" xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[13] $end
$var parameter 5 O" i $end
$scope module SOMA $end
$var wire 1 P" Cin $end
$var wire 1 Q" Cout $end
$var wire 1 R" S $end
$var wire 1 S" X $end
$var wire 1 T" Y $end
$var wire 1 U" xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[14] $end
$var parameter 5 V" i $end
$scope module SOMA $end
$var wire 1 W" Cin $end
$var wire 1 X" Cout $end
$var wire 1 Y" S $end
$var wire 1 Z" X $end
$var wire 1 [" Y $end
$var wire 1 \" xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[15] $end
$var parameter 5 ]" i $end
$scope module SOMA $end
$var wire 1 ^" Cin $end
$var wire 1 _" Cout $end
$var wire 1 `" S $end
$var wire 1 a" X $end
$var wire 1 b" Y $end
$var wire 1 c" xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[16] $end
$var parameter 6 d" i $end
$scope module SOMA $end
$var wire 1 e" Cin $end
$var wire 1 f" Cout $end
$var wire 1 g" S $end
$var wire 1 h" X $end
$var wire 1 i" Y $end
$var wire 1 j" xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[17] $end
$var parameter 6 k" i $end
$scope module SOMA $end
$var wire 1 l" Cin $end
$var wire 1 m" Cout $end
$var wire 1 n" S $end
$var wire 1 o" X $end
$var wire 1 p" Y $end
$var wire 1 q" xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[18] $end
$var parameter 6 r" i $end
$scope module SOMA $end
$var wire 1 s" Cin $end
$var wire 1 t" Cout $end
$var wire 1 u" S $end
$var wire 1 v" X $end
$var wire 1 w" Y $end
$var wire 1 x" xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[19] $end
$var parameter 6 y" i $end
$scope module SOMA $end
$var wire 1 z" Cin $end
$var wire 1 {" Cout $end
$var wire 1 |" S $end
$var wire 1 }" X $end
$var wire 1 ~" Y $end
$var wire 1 !# xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[20] $end
$var parameter 6 "# i $end
$scope module SOMA $end
$var wire 1 ## Cin $end
$var wire 1 $# Cout $end
$var wire 1 %# S $end
$var wire 1 &# X $end
$var wire 1 '# Y $end
$var wire 1 (# xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[21] $end
$var parameter 6 )# i $end
$scope module SOMA $end
$var wire 1 *# Cin $end
$var wire 1 +# Cout $end
$var wire 1 ,# S $end
$var wire 1 -# X $end
$var wire 1 .# Y $end
$var wire 1 /# xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[22] $end
$var parameter 6 0# i $end
$scope module SOMA $end
$var wire 1 1# Cin $end
$var wire 1 2# Cout $end
$var wire 1 3# S $end
$var wire 1 4# X $end
$var wire 1 5# Y $end
$var wire 1 6# xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[23] $end
$var parameter 6 7# i $end
$scope module SOMA $end
$var wire 1 8# Cin $end
$var wire 1 9# Cout $end
$var wire 1 :# S $end
$var wire 1 ;# X $end
$var wire 1 <# Y $end
$var wire 1 =# xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[24] $end
$var parameter 6 ># i $end
$scope module SOMA $end
$var wire 1 ?# Cin $end
$var wire 1 @# Cout $end
$var wire 1 A# S $end
$var wire 1 B# X $end
$var wire 1 C# Y $end
$var wire 1 D# xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[25] $end
$var parameter 6 E# i $end
$scope module SOMA $end
$var wire 1 F# Cin $end
$var wire 1 G# Cout $end
$var wire 1 H# S $end
$var wire 1 I# X $end
$var wire 1 J# Y $end
$var wire 1 K# xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[26] $end
$var parameter 6 L# i $end
$scope module SOMA $end
$var wire 1 M# Cin $end
$var wire 1 N# Cout $end
$var wire 1 O# S $end
$var wire 1 P# X $end
$var wire 1 Q# Y $end
$var wire 1 R# xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[27] $end
$var parameter 6 S# i $end
$scope module SOMA $end
$var wire 1 T# Cin $end
$var wire 1 U# Cout $end
$var wire 1 V# S $end
$var wire 1 W# X $end
$var wire 1 X# Y $end
$var wire 1 Y# xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[28] $end
$var parameter 6 Z# i $end
$scope module SOMA $end
$var wire 1 [# Cin $end
$var wire 1 \# Cout $end
$var wire 1 ]# S $end
$var wire 1 ^# X $end
$var wire 1 _# Y $end
$var wire 1 `# xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[29] $end
$var parameter 6 a# i $end
$scope module SOMA $end
$var wire 1 b# Cin $end
$var wire 1 c# Cout $end
$var wire 1 d# S $end
$var wire 1 e# X $end
$var wire 1 f# Y $end
$var wire 1 g# xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[30] $end
$var parameter 6 h# i $end
$scope module SOMA $end
$var wire 1 i# Cin $end
$var wire 1 j# Cout $end
$var wire 1 k# S $end
$var wire 1 l# X $end
$var wire 1 m# Y $end
$var wire 1 n# xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[31] $end
$var parameter 6 o# i $end
$scope module SOMA $end
$var wire 1 p# Cin $end
$var wire 1 q# Cout $end
$var wire 1 r# S $end
$var wire 1 s# X $end
$var wire 1 t# Y $end
$var wire 1 u# xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[32] $end
$var parameter 7 v# i $end
$scope module SOMA $end
$var wire 1 w# Cin $end
$var wire 1 x# Cout $end
$var wire 1 y# S $end
$var wire 1 z# X $end
$var wire 1 {# Y $end
$var wire 1 |# xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[33] $end
$var parameter 7 }# i $end
$scope module SOMA $end
$var wire 1 ~# Cin $end
$var wire 1 !$ Cout $end
$var wire 1 "$ S $end
$var wire 1 #$ X $end
$var wire 1 $$ Y $end
$var wire 1 %$ xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[34] $end
$var parameter 7 &$ i $end
$scope module SOMA $end
$var wire 1 '$ Cin $end
$var wire 1 ($ Cout $end
$var wire 1 )$ S $end
$var wire 1 *$ X $end
$var wire 1 +$ Y $end
$var wire 1 ,$ xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[35] $end
$var parameter 7 -$ i $end
$scope module SOMA $end
$var wire 1 .$ Cin $end
$var wire 1 /$ Cout $end
$var wire 1 0$ S $end
$var wire 1 1$ X $end
$var wire 1 2$ Y $end
$var wire 1 3$ xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[36] $end
$var parameter 7 4$ i $end
$scope module SOMA $end
$var wire 1 5$ Cin $end
$var wire 1 6$ Cout $end
$var wire 1 7$ S $end
$var wire 1 8$ X $end
$var wire 1 9$ Y $end
$var wire 1 :$ xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[37] $end
$var parameter 7 ;$ i $end
$scope module SOMA $end
$var wire 1 <$ Cin $end
$var wire 1 =$ Cout $end
$var wire 1 >$ S $end
$var wire 1 ?$ X $end
$var wire 1 @$ Y $end
$var wire 1 A$ xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[38] $end
$var parameter 7 B$ i $end
$scope module SOMA $end
$var wire 1 C$ Cin $end
$var wire 1 D$ Cout $end
$var wire 1 E$ S $end
$var wire 1 F$ X $end
$var wire 1 G$ Y $end
$var wire 1 H$ xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[39] $end
$var parameter 7 I$ i $end
$scope module SOMA $end
$var wire 1 J$ Cin $end
$var wire 1 K$ Cout $end
$var wire 1 L$ S $end
$var wire 1 M$ X $end
$var wire 1 N$ Y $end
$var wire 1 O$ xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[40] $end
$var parameter 7 P$ i $end
$scope module SOMA $end
$var wire 1 Q$ Cin $end
$var wire 1 R$ Cout $end
$var wire 1 S$ S $end
$var wire 1 T$ X $end
$var wire 1 U$ Y $end
$var wire 1 V$ xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[41] $end
$var parameter 7 W$ i $end
$scope module SOMA $end
$var wire 1 X$ Cin $end
$var wire 1 Y$ Cout $end
$var wire 1 Z$ S $end
$var wire 1 [$ X $end
$var wire 1 \$ Y $end
$var wire 1 ]$ xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[42] $end
$var parameter 7 ^$ i $end
$scope module SOMA $end
$var wire 1 _$ Cin $end
$var wire 1 `$ Cout $end
$var wire 1 a$ S $end
$var wire 1 b$ X $end
$var wire 1 c$ Y $end
$var wire 1 d$ xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[43] $end
$var parameter 7 e$ i $end
$scope module SOMA $end
$var wire 1 f$ Cin $end
$var wire 1 g$ Cout $end
$var wire 1 h$ S $end
$var wire 1 i$ X $end
$var wire 1 j$ Y $end
$var wire 1 k$ xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[44] $end
$var parameter 7 l$ i $end
$scope module SOMA $end
$var wire 1 m$ Cin $end
$var wire 1 n$ Cout $end
$var wire 1 o$ S $end
$var wire 1 p$ X $end
$var wire 1 q$ Y $end
$var wire 1 r$ xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[45] $end
$var parameter 7 s$ i $end
$scope module SOMA $end
$var wire 1 t$ Cin $end
$var wire 1 u$ Cout $end
$var wire 1 v$ S $end
$var wire 1 w$ X $end
$var wire 1 x$ Y $end
$var wire 1 y$ xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[46] $end
$var parameter 7 z$ i $end
$scope module SOMA $end
$var wire 1 {$ Cin $end
$var wire 1 |$ Cout $end
$var wire 1 }$ S $end
$var wire 1 ~$ X $end
$var wire 1 !% Y $end
$var wire 1 "% xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[47] $end
$var parameter 7 #% i $end
$scope module SOMA $end
$var wire 1 $% Cin $end
$var wire 1 %% Cout $end
$var wire 1 &% S $end
$var wire 1 '% X $end
$var wire 1 (% Y $end
$var wire 1 )% xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[48] $end
$var parameter 7 *% i $end
$scope module SOMA $end
$var wire 1 +% Cin $end
$var wire 1 ,% Cout $end
$var wire 1 -% S $end
$var wire 1 .% X $end
$var wire 1 /% Y $end
$var wire 1 0% xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[49] $end
$var parameter 7 1% i $end
$scope module SOMA $end
$var wire 1 2% Cin $end
$var wire 1 3% Cout $end
$var wire 1 4% S $end
$var wire 1 5% X $end
$var wire 1 6% Y $end
$var wire 1 7% xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[50] $end
$var parameter 7 8% i $end
$scope module SOMA $end
$var wire 1 9% Cin $end
$var wire 1 :% Cout $end
$var wire 1 ;% S $end
$var wire 1 <% X $end
$var wire 1 =% Y $end
$var wire 1 >% xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[51] $end
$var parameter 7 ?% i $end
$scope module SOMA $end
$var wire 1 @% Cin $end
$var wire 1 A% Cout $end
$var wire 1 B% S $end
$var wire 1 C% X $end
$var wire 1 D% Y $end
$var wire 1 E% xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[52] $end
$var parameter 7 F% i $end
$scope module SOMA $end
$var wire 1 G% Cin $end
$var wire 1 H% Cout $end
$var wire 1 I% S $end
$var wire 1 J% X $end
$var wire 1 K% Y $end
$var wire 1 L% xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[53] $end
$var parameter 7 M% i $end
$scope module SOMA $end
$var wire 1 N% Cin $end
$var wire 1 O% Cout $end
$var wire 1 P% S $end
$var wire 1 Q% X $end
$var wire 1 R% Y $end
$var wire 1 S% xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[54] $end
$var parameter 7 T% i $end
$scope module SOMA $end
$var wire 1 U% Cin $end
$var wire 1 V% Cout $end
$var wire 1 W% S $end
$var wire 1 X% X $end
$var wire 1 Y% Y $end
$var wire 1 Z% xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[55] $end
$var parameter 7 [% i $end
$scope module SOMA $end
$var wire 1 \% Cin $end
$var wire 1 ]% Cout $end
$var wire 1 ^% S $end
$var wire 1 _% X $end
$var wire 1 `% Y $end
$var wire 1 a% xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[56] $end
$var parameter 7 b% i $end
$scope module SOMA $end
$var wire 1 c% Cin $end
$var wire 1 d% Cout $end
$var wire 1 e% S $end
$var wire 1 f% X $end
$var wire 1 g% Y $end
$var wire 1 h% xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[57] $end
$var parameter 7 i% i $end
$scope module SOMA $end
$var wire 1 j% Cin $end
$var wire 1 k% Cout $end
$var wire 1 l% S $end
$var wire 1 m% X $end
$var wire 1 n% Y $end
$var wire 1 o% xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[58] $end
$var parameter 7 p% i $end
$scope module SOMA $end
$var wire 1 q% Cin $end
$var wire 1 r% Cout $end
$var wire 1 s% S $end
$var wire 1 t% X $end
$var wire 1 u% Y $end
$var wire 1 v% xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[59] $end
$var parameter 7 w% i $end
$scope module SOMA $end
$var wire 1 x% Cin $end
$var wire 1 y% Cout $end
$var wire 1 z% S $end
$var wire 1 {% X $end
$var wire 1 |% Y $end
$var wire 1 }% xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[60] $end
$var parameter 7 ~% i $end
$scope module SOMA $end
$var wire 1 !& Cin $end
$var wire 1 "& Cout $end
$var wire 1 #& S $end
$var wire 1 $& X $end
$var wire 1 %& Y $end
$var wire 1 && xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[61] $end
$var parameter 7 '& i $end
$scope module SOMA $end
$var wire 1 (& Cin $end
$var wire 1 )& Cout $end
$var wire 1 *& S $end
$var wire 1 +& X $end
$var wire 1 ,& Y $end
$var wire 1 -& xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[62] $end
$var parameter 7 .& i $end
$scope module SOMA $end
$var wire 1 /& Cin $end
$var wire 1 0& Cout $end
$var wire 1 1& S $end
$var wire 1 2& X $end
$var wire 1 3& Y $end
$var wire 1 4& xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[63] $end
$var parameter 7 5& i $end
$scope module SOMA $end
$var wire 1 6& Cin $end
$var wire 1 7& Cout $end
$var wire 1 8& S $end
$var wire 1 9& X $end
$var wire 1 :& Y $end
$var wire 1 ;& xor1 $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope module RF $end
$var wire 1 ! CLK $end
$var wire 64 <& Da [63:0] $end
$var wire 64 =& Db [63:0] $end
$var wire 64 >& Din [63:0] $end
$var wire 5 ?& Ra [4:0] $end
$var wire 5 @& Rb [4:0] $end
$var wire 5 A& Rw [4:0] $end
$var wire 1 % WE $end
$var wire 32 B& loaders [31:0] $end
$var parameter 32 C& SIZE $end
$scope begin genblk1[1] $end
$var parameter 2 D& i $end
$scope module xN $end
$var wire 1 ! CLK $end
$var wire 64 E& IN [63:0] $end
$var wire 1 F& LOAD $end
$var parameter 32 G& SIZE $end
$var reg 64 H& OUT [63:0] $end
$upscope $end
$upscope $end
$scope begin genblk1[2] $end
$var parameter 3 I& i $end
$scope module xN $end
$var wire 1 ! CLK $end
$var wire 64 J& IN [63:0] $end
$var wire 1 K& LOAD $end
$var parameter 32 L& SIZE $end
$var reg 64 M& OUT [63:0] $end
$upscope $end
$upscope $end
$scope begin genblk1[3] $end
$var parameter 3 N& i $end
$scope module xN $end
$var wire 1 ! CLK $end
$var wire 64 O& IN [63:0] $end
$var wire 1 P& LOAD $end
$var parameter 32 Q& SIZE $end
$var reg 64 R& OUT [63:0] $end
$upscope $end
$upscope $end
$scope begin genblk1[4] $end
$var parameter 4 S& i $end
$scope module xN $end
$var wire 1 ! CLK $end
$var wire 64 T& IN [63:0] $end
$var wire 1 U& LOAD $end
$var parameter 32 V& SIZE $end
$var reg 64 W& OUT [63:0] $end
$upscope $end
$upscope $end
$scope begin genblk1[5] $end
$var parameter 4 X& i $end
$scope module xN $end
$var wire 1 ! CLK $end
$var wire 64 Y& IN [63:0] $end
$var wire 1 Z& LOAD $end
$var parameter 32 [& SIZE $end
$var reg 64 \& OUT [63:0] $end
$upscope $end
$upscope $end
$scope begin genblk1[6] $end
$var parameter 4 ]& i $end
$scope module xN $end
$var wire 1 ! CLK $end
$var wire 64 ^& IN [63:0] $end
$var wire 1 _& LOAD $end
$var parameter 32 `& SIZE $end
$var reg 64 a& OUT [63:0] $end
$upscope $end
$upscope $end
$scope begin genblk1[7] $end
$var parameter 4 b& i $end
$scope module xN $end
$var wire 1 ! CLK $end
$var wire 64 c& IN [63:0] $end
$var wire 1 d& LOAD $end
$var parameter 32 e& SIZE $end
$var reg 64 f& OUT [63:0] $end
$upscope $end
$upscope $end
$scope begin genblk1[8] $end
$var parameter 5 g& i $end
$scope module xN $end
$var wire 1 ! CLK $end
$var wire 64 h& IN [63:0] $end
$var wire 1 i& LOAD $end
$var parameter 32 j& SIZE $end
$var reg 64 k& OUT [63:0] $end
$upscope $end
$upscope $end
$scope begin genblk1[9] $end
$var parameter 5 l& i $end
$scope module xN $end
$var wire 1 ! CLK $end
$var wire 64 m& IN [63:0] $end
$var wire 1 n& LOAD $end
$var parameter 32 o& SIZE $end
$var reg 64 p& OUT [63:0] $end
$upscope $end
$upscope $end
$scope begin genblk1[10] $end
$var parameter 5 q& i $end
$scope module xN $end
$var wire 1 ! CLK $end
$var wire 64 r& IN [63:0] $end
$var wire 1 s& LOAD $end
$var parameter 32 t& SIZE $end
$var reg 64 u& OUT [63:0] $end
$upscope $end
$upscope $end
$scope begin genblk1[11] $end
$var parameter 5 v& i $end
$scope module xN $end
$var wire 1 ! CLK $end
$var wire 64 w& IN [63:0] $end
$var wire 1 x& LOAD $end
$var parameter 32 y& SIZE $end
$var reg 64 z& OUT [63:0] $end
$upscope $end
$upscope $end
$scope begin genblk1[12] $end
$var parameter 5 {& i $end
$scope module xN $end
$var wire 1 ! CLK $end
$var wire 64 |& IN [63:0] $end
$var wire 1 }& LOAD $end
$var parameter 32 ~& SIZE $end
$var reg 64 !' OUT [63:0] $end
$upscope $end
$upscope $end
$scope begin genblk1[13] $end
$var parameter 5 "' i $end
$scope module xN $end
$var wire 1 ! CLK $end
$var wire 64 #' IN [63:0] $end
$var wire 1 $' LOAD $end
$var parameter 32 %' SIZE $end
$var reg 64 &' OUT [63:0] $end
$upscope $end
$upscope $end
$scope begin genblk1[14] $end
$var parameter 5 '' i $end
$scope module xN $end
$var wire 1 ! CLK $end
$var wire 64 (' IN [63:0] $end
$var wire 1 )' LOAD $end
$var parameter 32 *' SIZE $end
$var reg 64 +' OUT [63:0] $end
$upscope $end
$upscope $end
$scope begin genblk1[15] $end
$var parameter 5 ,' i $end
$scope module xN $end
$var wire 1 ! CLK $end
$var wire 64 -' IN [63:0] $end
$var wire 1 .' LOAD $end
$var parameter 32 /' SIZE $end
$var reg 64 0' OUT [63:0] $end
$upscope $end
$upscope $end
$scope begin genblk1[16] $end
$var parameter 6 1' i $end
$scope module xN $end
$var wire 1 ! CLK $end
$var wire 64 2' IN [63:0] $end
$var wire 1 3' LOAD $end
$var parameter 32 4' SIZE $end
$var reg 64 5' OUT [63:0] $end
$upscope $end
$upscope $end
$scope begin genblk1[17] $end
$var parameter 6 6' i $end
$scope module xN $end
$var wire 1 ! CLK $end
$var wire 64 7' IN [63:0] $end
$var wire 1 8' LOAD $end
$var parameter 32 9' SIZE $end
$var reg 64 :' OUT [63:0] $end
$upscope $end
$upscope $end
$scope begin genblk1[18] $end
$var parameter 6 ;' i $end
$scope module xN $end
$var wire 1 ! CLK $end
$var wire 64 <' IN [63:0] $end
$var wire 1 =' LOAD $end
$var parameter 32 >' SIZE $end
$var reg 64 ?' OUT [63:0] $end
$upscope $end
$upscope $end
$scope begin genblk1[19] $end
$var parameter 6 @' i $end
$scope module xN $end
$var wire 1 ! CLK $end
$var wire 64 A' IN [63:0] $end
$var wire 1 B' LOAD $end
$var parameter 32 C' SIZE $end
$var reg 64 D' OUT [63:0] $end
$upscope $end
$upscope $end
$scope begin genblk1[20] $end
$var parameter 6 E' i $end
$scope module xN $end
$var wire 1 ! CLK $end
$var wire 64 F' IN [63:0] $end
$var wire 1 G' LOAD $end
$var parameter 32 H' SIZE $end
$var reg 64 I' OUT [63:0] $end
$upscope $end
$upscope $end
$scope begin genblk1[21] $end
$var parameter 6 J' i $end
$scope module xN $end
$var wire 1 ! CLK $end
$var wire 64 K' IN [63:0] $end
$var wire 1 L' LOAD $end
$var parameter 32 M' SIZE $end
$var reg 64 N' OUT [63:0] $end
$upscope $end
$upscope $end
$scope begin genblk1[22] $end
$var parameter 6 O' i $end
$scope module xN $end
$var wire 1 ! CLK $end
$var wire 64 P' IN [63:0] $end
$var wire 1 Q' LOAD $end
$var parameter 32 R' SIZE $end
$var reg 64 S' OUT [63:0] $end
$upscope $end
$upscope $end
$scope begin genblk1[23] $end
$var parameter 6 T' i $end
$scope module xN $end
$var wire 1 ! CLK $end
$var wire 64 U' IN [63:0] $end
$var wire 1 V' LOAD $end
$var parameter 32 W' SIZE $end
$var reg 64 X' OUT [63:0] $end
$upscope $end
$upscope $end
$scope begin genblk1[24] $end
$var parameter 6 Y' i $end
$scope module xN $end
$var wire 1 ! CLK $end
$var wire 64 Z' IN [63:0] $end
$var wire 1 [' LOAD $end
$var parameter 32 \' SIZE $end
$var reg 64 ]' OUT [63:0] $end
$upscope $end
$upscope $end
$scope begin genblk1[25] $end
$var parameter 6 ^' i $end
$scope module xN $end
$var wire 1 ! CLK $end
$var wire 64 _' IN [63:0] $end
$var wire 1 `' LOAD $end
$var parameter 32 a' SIZE $end
$var reg 64 b' OUT [63:0] $end
$upscope $end
$upscope $end
$scope begin genblk1[26] $end
$var parameter 6 c' i $end
$scope module xN $end
$var wire 1 ! CLK $end
$var wire 64 d' IN [63:0] $end
$var wire 1 e' LOAD $end
$var parameter 32 f' SIZE $end
$var reg 64 g' OUT [63:0] $end
$upscope $end
$upscope $end
$scope begin genblk1[27] $end
$var parameter 6 h' i $end
$scope module xN $end
$var wire 1 ! CLK $end
$var wire 64 i' IN [63:0] $end
$var wire 1 j' LOAD $end
$var parameter 32 k' SIZE $end
$var reg 64 l' OUT [63:0] $end
$upscope $end
$upscope $end
$scope begin genblk1[28] $end
$var parameter 6 m' i $end
$scope module xN $end
$var wire 1 ! CLK $end
$var wire 64 n' IN [63:0] $end
$var wire 1 o' LOAD $end
$var parameter 32 p' SIZE $end
$var reg 64 q' OUT [63:0] $end
$upscope $end
$upscope $end
$scope begin genblk1[29] $end
$var parameter 6 r' i $end
$scope module xN $end
$var wire 1 ! CLK $end
$var wire 64 s' IN [63:0] $end
$var wire 1 t' LOAD $end
$var parameter 32 u' SIZE $end
$var reg 64 v' OUT [63:0] $end
$upscope $end
$upscope $end
$scope begin genblk1[30] $end
$var parameter 6 w' i $end
$scope module xN $end
$var wire 1 ! CLK $end
$var wire 64 x' IN [63:0] $end
$var wire 1 y' LOAD $end
$var parameter 32 z' SIZE $end
$var reg 64 {' OUT [63:0] $end
$upscope $end
$upscope $end
$scope begin genblk1[31] $end
$var parameter 6 |' i $end
$scope module xN $end
$var wire 1 ! CLK $end
$var wire 64 }' IN [63:0] $end
$var wire 1 ~' LOAD $end
$var parameter 32 !( SIZE $end
$var reg 64 "( OUT [63:0] $end
$upscope $end
$upscope $end
$scope module LOAD_DECODER $end
$var wire 1 % EN $end
$var wire 5 #( IN [4:0] $end
$var wire 32 $( OUT [31:0] $end
$var wire 4 %( EN1 [3:0] $end
$scope module DEC2_4 $end
$var wire 1 % EN $end
$var wire 2 &( IN [1:0] $end
$var wire 4 '( OUT [3:0] $end
$upscope $end
$scope module DEC3_8__1 $end
$var wire 1 (( EN $end
$var wire 3 )( IN [2:0] $end
$var wire 8 *( OUT [7:0] $end
$upscope $end
$scope module DEC3_8__2 $end
$var wire 1 +( EN $end
$var wire 3 ,( IN [2:0] $end
$var wire 8 -( OUT [7:0] $end
$upscope $end
$scope module DEC3_8__3 $end
$var wire 1 .( EN $end
$var wire 3 /( IN [2:0] $end
$var wire 8 0( OUT [7:0] $end
$upscope $end
$scope module DEC3_8__4 $end
$var wire 1 1( EN $end
$var wire 3 2( IN [2:0] $end
$var wire 8 3( OUT [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module ULA $end
$var wire 64 4( s1 [63:0] $end
$var wire 64 5( s2 [63:0] $end
$var wire 1 ' sub $end
$var wire 64 6( res [63:0] $end
$var parameter 32 7( SIZE $end
$scope module adder $end
$var wire 1 ' Cin $end
$var wire 1 8( Cout $end
$var wire 64 9( X [63:0] $end
$var wire 64 :( Y [63:0] $end
$var wire 1 ;( cout $end
$var wire 65 <( cins [64:0] $end
$var wire 64 =( S [63:0] $end
$var parameter 32 >( SIZE $end
$scope begin genblk1[0] $end
$var parameter 2 ?( i $end
$scope module SOMA $end
$var wire 1 @( Cin $end
$var wire 1 A( Cout $end
$var wire 1 B( S $end
$var wire 1 C( X $end
$var wire 1 D( Y $end
$var wire 1 E( xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[1] $end
$var parameter 2 F( i $end
$scope module SOMA $end
$var wire 1 G( Cin $end
$var wire 1 H( Cout $end
$var wire 1 I( S $end
$var wire 1 J( X $end
$var wire 1 K( Y $end
$var wire 1 L( xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[2] $end
$var parameter 3 M( i $end
$scope module SOMA $end
$var wire 1 N( Cin $end
$var wire 1 O( Cout $end
$var wire 1 P( S $end
$var wire 1 Q( X $end
$var wire 1 R( Y $end
$var wire 1 S( xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[3] $end
$var parameter 3 T( i $end
$scope module SOMA $end
$var wire 1 U( Cin $end
$var wire 1 V( Cout $end
$var wire 1 W( S $end
$var wire 1 X( X $end
$var wire 1 Y( Y $end
$var wire 1 Z( xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[4] $end
$var parameter 4 [( i $end
$scope module SOMA $end
$var wire 1 \( Cin $end
$var wire 1 ]( Cout $end
$var wire 1 ^( S $end
$var wire 1 _( X $end
$var wire 1 `( Y $end
$var wire 1 a( xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[5] $end
$var parameter 4 b( i $end
$scope module SOMA $end
$var wire 1 c( Cin $end
$var wire 1 d( Cout $end
$var wire 1 e( S $end
$var wire 1 f( X $end
$var wire 1 g( Y $end
$var wire 1 h( xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[6] $end
$var parameter 4 i( i $end
$scope module SOMA $end
$var wire 1 j( Cin $end
$var wire 1 k( Cout $end
$var wire 1 l( S $end
$var wire 1 m( X $end
$var wire 1 n( Y $end
$var wire 1 o( xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[7] $end
$var parameter 4 p( i $end
$scope module SOMA $end
$var wire 1 q( Cin $end
$var wire 1 r( Cout $end
$var wire 1 s( S $end
$var wire 1 t( X $end
$var wire 1 u( Y $end
$var wire 1 v( xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[8] $end
$var parameter 5 w( i $end
$scope module SOMA $end
$var wire 1 x( Cin $end
$var wire 1 y( Cout $end
$var wire 1 z( S $end
$var wire 1 {( X $end
$var wire 1 |( Y $end
$var wire 1 }( xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[9] $end
$var parameter 5 ~( i $end
$scope module SOMA $end
$var wire 1 !) Cin $end
$var wire 1 ") Cout $end
$var wire 1 #) S $end
$var wire 1 $) X $end
$var wire 1 %) Y $end
$var wire 1 &) xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[10] $end
$var parameter 5 ') i $end
$scope module SOMA $end
$var wire 1 () Cin $end
$var wire 1 )) Cout $end
$var wire 1 *) S $end
$var wire 1 +) X $end
$var wire 1 ,) Y $end
$var wire 1 -) xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[11] $end
$var parameter 5 .) i $end
$scope module SOMA $end
$var wire 1 /) Cin $end
$var wire 1 0) Cout $end
$var wire 1 1) S $end
$var wire 1 2) X $end
$var wire 1 3) Y $end
$var wire 1 4) xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[12] $end
$var parameter 5 5) i $end
$scope module SOMA $end
$var wire 1 6) Cin $end
$var wire 1 7) Cout $end
$var wire 1 8) S $end
$var wire 1 9) X $end
$var wire 1 :) Y $end
$var wire 1 ;) xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[13] $end
$var parameter 5 <) i $end
$scope module SOMA $end
$var wire 1 =) Cin $end
$var wire 1 >) Cout $end
$var wire 1 ?) S $end
$var wire 1 @) X $end
$var wire 1 A) Y $end
$var wire 1 B) xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[14] $end
$var parameter 5 C) i $end
$scope module SOMA $end
$var wire 1 D) Cin $end
$var wire 1 E) Cout $end
$var wire 1 F) S $end
$var wire 1 G) X $end
$var wire 1 H) Y $end
$var wire 1 I) xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[15] $end
$var parameter 5 J) i $end
$scope module SOMA $end
$var wire 1 K) Cin $end
$var wire 1 L) Cout $end
$var wire 1 M) S $end
$var wire 1 N) X $end
$var wire 1 O) Y $end
$var wire 1 P) xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[16] $end
$var parameter 6 Q) i $end
$scope module SOMA $end
$var wire 1 R) Cin $end
$var wire 1 S) Cout $end
$var wire 1 T) S $end
$var wire 1 U) X $end
$var wire 1 V) Y $end
$var wire 1 W) xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[17] $end
$var parameter 6 X) i $end
$scope module SOMA $end
$var wire 1 Y) Cin $end
$var wire 1 Z) Cout $end
$var wire 1 [) S $end
$var wire 1 \) X $end
$var wire 1 ]) Y $end
$var wire 1 ^) xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[18] $end
$var parameter 6 _) i $end
$scope module SOMA $end
$var wire 1 `) Cin $end
$var wire 1 a) Cout $end
$var wire 1 b) S $end
$var wire 1 c) X $end
$var wire 1 d) Y $end
$var wire 1 e) xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[19] $end
$var parameter 6 f) i $end
$scope module SOMA $end
$var wire 1 g) Cin $end
$var wire 1 h) Cout $end
$var wire 1 i) S $end
$var wire 1 j) X $end
$var wire 1 k) Y $end
$var wire 1 l) xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[20] $end
$var parameter 6 m) i $end
$scope module SOMA $end
$var wire 1 n) Cin $end
$var wire 1 o) Cout $end
$var wire 1 p) S $end
$var wire 1 q) X $end
$var wire 1 r) Y $end
$var wire 1 s) xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[21] $end
$var parameter 6 t) i $end
$scope module SOMA $end
$var wire 1 u) Cin $end
$var wire 1 v) Cout $end
$var wire 1 w) S $end
$var wire 1 x) X $end
$var wire 1 y) Y $end
$var wire 1 z) xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[22] $end
$var parameter 6 {) i $end
$scope module SOMA $end
$var wire 1 |) Cin $end
$var wire 1 }) Cout $end
$var wire 1 ~) S $end
$var wire 1 !* X $end
$var wire 1 "* Y $end
$var wire 1 #* xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[23] $end
$var parameter 6 $* i $end
$scope module SOMA $end
$var wire 1 %* Cin $end
$var wire 1 &* Cout $end
$var wire 1 '* S $end
$var wire 1 (* X $end
$var wire 1 )* Y $end
$var wire 1 ** xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[24] $end
$var parameter 6 +* i $end
$scope module SOMA $end
$var wire 1 ,* Cin $end
$var wire 1 -* Cout $end
$var wire 1 .* S $end
$var wire 1 /* X $end
$var wire 1 0* Y $end
$var wire 1 1* xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[25] $end
$var parameter 6 2* i $end
$scope module SOMA $end
$var wire 1 3* Cin $end
$var wire 1 4* Cout $end
$var wire 1 5* S $end
$var wire 1 6* X $end
$var wire 1 7* Y $end
$var wire 1 8* xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[26] $end
$var parameter 6 9* i $end
$scope module SOMA $end
$var wire 1 :* Cin $end
$var wire 1 ;* Cout $end
$var wire 1 <* S $end
$var wire 1 =* X $end
$var wire 1 >* Y $end
$var wire 1 ?* xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[27] $end
$var parameter 6 @* i $end
$scope module SOMA $end
$var wire 1 A* Cin $end
$var wire 1 B* Cout $end
$var wire 1 C* S $end
$var wire 1 D* X $end
$var wire 1 E* Y $end
$var wire 1 F* xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[28] $end
$var parameter 6 G* i $end
$scope module SOMA $end
$var wire 1 H* Cin $end
$var wire 1 I* Cout $end
$var wire 1 J* S $end
$var wire 1 K* X $end
$var wire 1 L* Y $end
$var wire 1 M* xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[29] $end
$var parameter 6 N* i $end
$scope module SOMA $end
$var wire 1 O* Cin $end
$var wire 1 P* Cout $end
$var wire 1 Q* S $end
$var wire 1 R* X $end
$var wire 1 S* Y $end
$var wire 1 T* xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[30] $end
$var parameter 6 U* i $end
$scope module SOMA $end
$var wire 1 V* Cin $end
$var wire 1 W* Cout $end
$var wire 1 X* S $end
$var wire 1 Y* X $end
$var wire 1 Z* Y $end
$var wire 1 [* xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[31] $end
$var parameter 6 \* i $end
$scope module SOMA $end
$var wire 1 ]* Cin $end
$var wire 1 ^* Cout $end
$var wire 1 _* S $end
$var wire 1 `* X $end
$var wire 1 a* Y $end
$var wire 1 b* xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[32] $end
$var parameter 7 c* i $end
$scope module SOMA $end
$var wire 1 d* Cin $end
$var wire 1 e* Cout $end
$var wire 1 f* S $end
$var wire 1 g* X $end
$var wire 1 h* Y $end
$var wire 1 i* xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[33] $end
$var parameter 7 j* i $end
$scope module SOMA $end
$var wire 1 k* Cin $end
$var wire 1 l* Cout $end
$var wire 1 m* S $end
$var wire 1 n* X $end
$var wire 1 o* Y $end
$var wire 1 p* xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[34] $end
$var parameter 7 q* i $end
$scope module SOMA $end
$var wire 1 r* Cin $end
$var wire 1 s* Cout $end
$var wire 1 t* S $end
$var wire 1 u* X $end
$var wire 1 v* Y $end
$var wire 1 w* xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[35] $end
$var parameter 7 x* i $end
$scope module SOMA $end
$var wire 1 y* Cin $end
$var wire 1 z* Cout $end
$var wire 1 {* S $end
$var wire 1 |* X $end
$var wire 1 }* Y $end
$var wire 1 ~* xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[36] $end
$var parameter 7 !+ i $end
$scope module SOMA $end
$var wire 1 "+ Cin $end
$var wire 1 #+ Cout $end
$var wire 1 $+ S $end
$var wire 1 %+ X $end
$var wire 1 &+ Y $end
$var wire 1 '+ xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[37] $end
$var parameter 7 (+ i $end
$scope module SOMA $end
$var wire 1 )+ Cin $end
$var wire 1 *+ Cout $end
$var wire 1 ++ S $end
$var wire 1 ,+ X $end
$var wire 1 -+ Y $end
$var wire 1 .+ xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[38] $end
$var parameter 7 /+ i $end
$scope module SOMA $end
$var wire 1 0+ Cin $end
$var wire 1 1+ Cout $end
$var wire 1 2+ S $end
$var wire 1 3+ X $end
$var wire 1 4+ Y $end
$var wire 1 5+ xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[39] $end
$var parameter 7 6+ i $end
$scope module SOMA $end
$var wire 1 7+ Cin $end
$var wire 1 8+ Cout $end
$var wire 1 9+ S $end
$var wire 1 :+ X $end
$var wire 1 ;+ Y $end
$var wire 1 <+ xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[40] $end
$var parameter 7 =+ i $end
$scope module SOMA $end
$var wire 1 >+ Cin $end
$var wire 1 ?+ Cout $end
$var wire 1 @+ S $end
$var wire 1 A+ X $end
$var wire 1 B+ Y $end
$var wire 1 C+ xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[41] $end
$var parameter 7 D+ i $end
$scope module SOMA $end
$var wire 1 E+ Cin $end
$var wire 1 F+ Cout $end
$var wire 1 G+ S $end
$var wire 1 H+ X $end
$var wire 1 I+ Y $end
$var wire 1 J+ xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[42] $end
$var parameter 7 K+ i $end
$scope module SOMA $end
$var wire 1 L+ Cin $end
$var wire 1 M+ Cout $end
$var wire 1 N+ S $end
$var wire 1 O+ X $end
$var wire 1 P+ Y $end
$var wire 1 Q+ xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[43] $end
$var parameter 7 R+ i $end
$scope module SOMA $end
$var wire 1 S+ Cin $end
$var wire 1 T+ Cout $end
$var wire 1 U+ S $end
$var wire 1 V+ X $end
$var wire 1 W+ Y $end
$var wire 1 X+ xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[44] $end
$var parameter 7 Y+ i $end
$scope module SOMA $end
$var wire 1 Z+ Cin $end
$var wire 1 [+ Cout $end
$var wire 1 \+ S $end
$var wire 1 ]+ X $end
$var wire 1 ^+ Y $end
$var wire 1 _+ xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[45] $end
$var parameter 7 `+ i $end
$scope module SOMA $end
$var wire 1 a+ Cin $end
$var wire 1 b+ Cout $end
$var wire 1 c+ S $end
$var wire 1 d+ X $end
$var wire 1 e+ Y $end
$var wire 1 f+ xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[46] $end
$var parameter 7 g+ i $end
$scope module SOMA $end
$var wire 1 h+ Cin $end
$var wire 1 i+ Cout $end
$var wire 1 j+ S $end
$var wire 1 k+ X $end
$var wire 1 l+ Y $end
$var wire 1 m+ xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[47] $end
$var parameter 7 n+ i $end
$scope module SOMA $end
$var wire 1 o+ Cin $end
$var wire 1 p+ Cout $end
$var wire 1 q+ S $end
$var wire 1 r+ X $end
$var wire 1 s+ Y $end
$var wire 1 t+ xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[48] $end
$var parameter 7 u+ i $end
$scope module SOMA $end
$var wire 1 v+ Cin $end
$var wire 1 w+ Cout $end
$var wire 1 x+ S $end
$var wire 1 y+ X $end
$var wire 1 z+ Y $end
$var wire 1 {+ xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[49] $end
$var parameter 7 |+ i $end
$scope module SOMA $end
$var wire 1 }+ Cin $end
$var wire 1 ~+ Cout $end
$var wire 1 !, S $end
$var wire 1 ", X $end
$var wire 1 #, Y $end
$var wire 1 $, xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[50] $end
$var parameter 7 %, i $end
$scope module SOMA $end
$var wire 1 &, Cin $end
$var wire 1 ', Cout $end
$var wire 1 (, S $end
$var wire 1 ), X $end
$var wire 1 *, Y $end
$var wire 1 +, xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[51] $end
$var parameter 7 ,, i $end
$scope module SOMA $end
$var wire 1 -, Cin $end
$var wire 1 ., Cout $end
$var wire 1 /, S $end
$var wire 1 0, X $end
$var wire 1 1, Y $end
$var wire 1 2, xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[52] $end
$var parameter 7 3, i $end
$scope module SOMA $end
$var wire 1 4, Cin $end
$var wire 1 5, Cout $end
$var wire 1 6, S $end
$var wire 1 7, X $end
$var wire 1 8, Y $end
$var wire 1 9, xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[53] $end
$var parameter 7 :, i $end
$scope module SOMA $end
$var wire 1 ;, Cin $end
$var wire 1 <, Cout $end
$var wire 1 =, S $end
$var wire 1 >, X $end
$var wire 1 ?, Y $end
$var wire 1 @, xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[54] $end
$var parameter 7 A, i $end
$scope module SOMA $end
$var wire 1 B, Cin $end
$var wire 1 C, Cout $end
$var wire 1 D, S $end
$var wire 1 E, X $end
$var wire 1 F, Y $end
$var wire 1 G, xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[55] $end
$var parameter 7 H, i $end
$scope module SOMA $end
$var wire 1 I, Cin $end
$var wire 1 J, Cout $end
$var wire 1 K, S $end
$var wire 1 L, X $end
$var wire 1 M, Y $end
$var wire 1 N, xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[56] $end
$var parameter 7 O, i $end
$scope module SOMA $end
$var wire 1 P, Cin $end
$var wire 1 Q, Cout $end
$var wire 1 R, S $end
$var wire 1 S, X $end
$var wire 1 T, Y $end
$var wire 1 U, xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[57] $end
$var parameter 7 V, i $end
$scope module SOMA $end
$var wire 1 W, Cin $end
$var wire 1 X, Cout $end
$var wire 1 Y, S $end
$var wire 1 Z, X $end
$var wire 1 [, Y $end
$var wire 1 \, xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[58] $end
$var parameter 7 ], i $end
$scope module SOMA $end
$var wire 1 ^, Cin $end
$var wire 1 _, Cout $end
$var wire 1 `, S $end
$var wire 1 a, X $end
$var wire 1 b, Y $end
$var wire 1 c, xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[59] $end
$var parameter 7 d, i $end
$scope module SOMA $end
$var wire 1 e, Cin $end
$var wire 1 f, Cout $end
$var wire 1 g, S $end
$var wire 1 h, X $end
$var wire 1 i, Y $end
$var wire 1 j, xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[60] $end
$var parameter 7 k, i $end
$scope module SOMA $end
$var wire 1 l, Cin $end
$var wire 1 m, Cout $end
$var wire 1 n, S $end
$var wire 1 o, X $end
$var wire 1 p, Y $end
$var wire 1 q, xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[61] $end
$var parameter 7 r, i $end
$scope module SOMA $end
$var wire 1 s, Cin $end
$var wire 1 t, Cout $end
$var wire 1 u, S $end
$var wire 1 v, X $end
$var wire 1 w, Y $end
$var wire 1 x, xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[62] $end
$var parameter 7 y, i $end
$scope module SOMA $end
$var wire 1 z, Cin $end
$var wire 1 {, Cout $end
$var wire 1 |, S $end
$var wire 1 }, X $end
$var wire 1 ~, Y $end
$var wire 1 !- xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[63] $end
$var parameter 7 "- i $end
$scope module SOMA $end
$var wire 1 #- Cin $end
$var wire 1 $- Cout $end
$var wire 1 %- S $end
$var wire 1 &- X $end
$var wire 1 '- Y $end
$var wire 1 (- xor1 $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
b111111 "-
b111110 y,
b111101 r,
b111100 k,
b111011 d,
b111010 ],
b111001 V,
b111000 O,
b110111 H,
b110110 A,
b110101 :,
b110100 3,
b110011 ,,
b110010 %,
b110001 |+
b110000 u+
b101111 n+
b101110 g+
b101101 `+
b101100 Y+
b101011 R+
b101010 K+
b101001 D+
b101000 =+
b100111 6+
b100110 /+
b100101 (+
b100100 !+
b100011 x*
b100010 q*
b100001 j*
b100000 c*
b11111 \*
b11110 U*
b11101 N*
b11100 G*
b11011 @*
b11010 9*
b11001 2*
b11000 +*
b10111 $*
b10110 {)
b10101 t)
b10100 m)
b10011 f)
b10010 _)
b10001 X)
b10000 Q)
b1111 J)
b1110 C)
b1101 <)
b1100 5)
b1011 .)
b1010 ')
b1001 ~(
b1000 w(
b111 p(
b110 i(
b101 b(
b100 [(
b11 T(
b10 M(
b1 F(
b0 ?(
b1000000 >(
b1000000 7(
b1000000 !(
b11111 |'
b1000000 z'
b11110 w'
b1000000 u'
b11101 r'
b1000000 p'
b11100 m'
b1000000 k'
b11011 h'
b1000000 f'
b11010 c'
b1000000 a'
b11001 ^'
b1000000 \'
b11000 Y'
b1000000 W'
b10111 T'
b1000000 R'
b10110 O'
b1000000 M'
b10101 J'
b1000000 H'
b10100 E'
b1000000 C'
b10011 @'
b1000000 >'
b10010 ;'
b1000000 9'
b10001 6'
b1000000 4'
b10000 1'
b1000000 /'
b1111 ,'
b1000000 *'
b1110 ''
b1000000 %'
b1101 "'
b1000000 ~&
b1100 {&
b1000000 y&
b1011 v&
b1000000 t&
b1010 q&
b1000000 o&
b1001 l&
b1000000 j&
b1000 g&
b1000000 e&
b111 b&
b1000000 `&
b110 ]&
b1000000 [&
b101 X&
b1000000 V&
b100 S&
b1000000 Q&
b11 N&
b1000000 L&
b10 I&
b1000000 G&
b1 D&
b1000000 C&
b111111 5&
b111110 .&
b111101 '&
b111100 ~%
b111011 w%
b111010 p%
b111001 i%
b111000 b%
b110111 [%
b110110 T%
b110101 M%
b110100 F%
b110011 ?%
b110010 8%
b110001 1%
b110000 *%
b101111 #%
b101110 z$
b101101 s$
b101100 l$
b101011 e$
b101010 ^$
b101001 W$
b101000 P$
b100111 I$
b100110 B$
b100101 ;$
b100100 4$
b100011 -$
b100010 &$
b100001 }#
b100000 v#
b11111 o#
b11110 h#
b11101 a#
b11100 Z#
b11011 S#
b11010 L#
b11001 E#
b11000 >#
b10111 7#
b10110 0#
b10101 )#
b10100 "#
b10011 y"
b10010 r"
b10001 k"
b10000 d"
b1111 ]"
b1110 V"
b1101 O"
b1100 H"
b1011 A"
b1010 :"
b1001 3"
b1000 ,"
b111 %"
b110 |
b101 u
b100 n
b11 g
b10 `
b1 Y
b0 R
b1000000 Q
b1000000 H
b100000 @
b1000000 ;
b100000 :
$end
#0
$dumpvars
x(-
x'-
x&-
x%-
x$-
x#-
x!-
x~,
x},
x|,
x{,
xz,
xx,
xw,
xv,
xu,
xt,
xs,
xq,
xp,
xo,
xn,
xm,
xl,
xj,
xi,
xh,
xg,
xf,
xe,
xc,
xb,
xa,
x`,
x_,
x^,
x\,
x[,
xZ,
xY,
xX,
xW,
xU,
xT,
xS,
xR,
xQ,
xP,
xN,
xM,
xL,
xK,
xJ,
xI,
xG,
xF,
xE,
xD,
xC,
xB,
x@,
x?,
x>,
x=,
x<,
x;,
x9,
x8,
x7,
x6,
x5,
x4,
x2,
x1,
x0,
x/,
x.,
x-,
x+,
x*,
x),
x(,
x',
x&,
x$,
x#,
x",
x!,
x~+
x}+
x{+
xz+
xy+
xx+
xw+
xv+
xt+
xs+
xr+
xq+
xp+
xo+
xm+
xl+
xk+
xj+
xi+
xh+
xf+
xe+
xd+
xc+
xb+
xa+
x_+
x^+
x]+
x\+
x[+
xZ+
xX+
xW+
xV+
xU+
xT+
xS+
xQ+
xP+
xO+
xN+
xM+
xL+
xJ+
xI+
xH+
xG+
xF+
xE+
xC+
xB+
xA+
x@+
x?+
x>+
x<+
x;+
x:+
x9+
x8+
x7+
x5+
x4+
x3+
x2+
x1+
x0+
x.+
x-+
x,+
x++
x*+
x)+
x'+
x&+
x%+
x$+
x#+
x"+
x~*
x}*
x|*
x{*
xz*
xy*
xw*
xv*
xu*
xt*
xs*
xr*
xp*
xo*
xn*
xm*
xl*
xk*
xi*
xh*
xg*
xf*
xe*
xd*
xb*
xa*
x`*
x_*
x^*
x]*
x[*
xZ*
xY*
xX*
xW*
xV*
xT*
xS*
xR*
xQ*
xP*
xO*
xM*
xL*
xK*
xJ*
xI*
xH*
xF*
xE*
xD*
xC*
xB*
xA*
x?*
x>*
x=*
x<*
x;*
x:*
x8*
x7*
x6*
x5*
x4*
x3*
x1*
x0*
x/*
x.*
x-*
x,*
x**
x)*
x(*
x'*
x&*
x%*
x#*
x"*
x!*
x~)
x})
x|)
xz)
xy)
xx)
xw)
xv)
xu)
xs)
xr)
xq)
xp)
xo)
xn)
xl)
xk)
xj)
xi)
xh)
xg)
xe)
xd)
xc)
xb)
xa)
x`)
x^)
x])
x\)
x[)
xZ)
xY)
xW)
xV)
xU)
xT)
xS)
xR)
xP)
xO)
xN)
xM)
xL)
xK)
xI)
xH)
xG)
xF)
xE)
xD)
xB)
xA)
x@)
x?)
x>)
x=)
x;)
x:)
x9)
x8)
x7)
x6)
x4)
x3)
x2)
x1)
x0)
x/)
x-)
x,)
x+)
x*)
x))
x()
x&)
x%)
x$)
x#)
x")
x!)
x}(
x|(
x{(
xz(
xy(
xx(
xv(
xu(
xt(
xs(
xr(
xq(
xo(
xn(
xm(
xl(
xk(
xj(
xh(
xg(
xf(
xe(
xd(
xc(
xa(
x`(
x_(
x^(
x](
x\(
xZ(
xY(
xX(
xW(
xV(
xU(
xS(
xR(
xQ(
xP(
xO(
xN(
xL(
xK(
xJ(
xI(
xH(
xG(
xE(
xD(
xC(
xB(
xA(
x@(
bx =(
bx <(
x;(
bx :(
bx 9(
z8(
bx 6(
bx 5(
bx 4(
bx 3(
bx 2(
x1(
bx 0(
bx /(
x.(
bx -(
bx ,(
x+(
bx *(
bx )(
x((
bx '(
bx &(
bx %(
bx $(
bx #(
bx "(
x~'
bx }'
bx {'
xy'
bx x'
bx v'
xt'
bx s'
bx q'
xo'
bx n'
bx l'
xj'
bx i'
bx g'
xe'
bx d'
bx b'
x`'
bx _'
bx ]'
x['
bx Z'
bx X'
xV'
bx U'
bx S'
xQ'
bx P'
bx N'
xL'
bx K'
bx I'
xG'
bx F'
bx D'
xB'
bx A'
bx ?'
x='
bx <'
bx :'
x8'
bx 7'
bx 5'
x3'
bx 2'
bx 0'
x.'
bx -'
bx +'
x)'
bx ('
bx &'
x$'
bx #'
bx !'
x}&
bx |&
bx z&
xx&
bx w&
bx u&
xs&
bx r&
bx p&
xn&
bx m&
bx k&
xi&
bx h&
bx f&
xd&
bx c&
bx a&
x_&
bx ^&
bx \&
xZ&
bx Y&
bx W&
xU&
bx T&
bx R&
xP&
bx O&
bx M&
xK&
bx J&
bx H&
xF&
bx E&
bx B&
bx A&
bx @&
bx ?&
bx >&
bx =&
bx <&
0;&
0:&
09&
08&
07&
06&
04&
03&
02&
01&
00&
0/&
0-&
0,&
0+&
0*&
0)&
0(&
0&&
0%&
0$&
0#&
0"&
0!&
0}%
0|%
0{%
0z%
0y%
0x%
0v%
0u%
0t%
0s%
0r%
0q%
0o%
0n%
0m%
0l%
0k%
0j%
0h%
0g%
0f%
0e%
0d%
0c%
0a%
0`%
0_%
0^%
0]%
0\%
0Z%
0Y%
0X%
0W%
0V%
0U%
0S%
0R%
0Q%
0P%
0O%
0N%
0L%
0K%
0J%
0I%
0H%
0G%
0E%
0D%
0C%
0B%
0A%
0@%
0>%
0=%
0<%
0;%
0:%
09%
07%
06%
05%
04%
03%
02%
00%
0/%
0.%
0-%
0,%
0+%
0)%
0(%
0'%
0&%
0%%
0$%
0"%
0!%
0~$
0}$
0|$
0{$
0y$
0x$
0w$
0v$
0u$
0t$
0r$
0q$
0p$
0o$
0n$
0m$
0k$
0j$
0i$
0h$
0g$
0f$
0d$
0c$
0b$
0a$
0`$
0_$
0]$
0\$
0[$
0Z$
0Y$
0X$
0V$
0U$
0T$
0S$
0R$
0Q$
0O$
0N$
0M$
0L$
0K$
0J$
0H$
0G$
0F$
0E$
0D$
0C$
0A$
0@$
0?$
0>$
0=$
0<$
0:$
09$
08$
07$
06$
05$
03$
02$
01$
00$
0/$
0.$
0,$
0+$
0*$
0)$
0($
0'$
0%$
0$$
0#$
0"$
0!$
0~#
0|#
0{#
0z#
0y#
0x#
0w#
0u#
0t#
0s#
0r#
0q#
0p#
0n#
0m#
0l#
0k#
0j#
0i#
0g#
0f#
0e#
0d#
0c#
0b#
0`#
0_#
0^#
0]#
0\#
0[#
0Y#
0X#
0W#
0V#
0U#
0T#
0R#
0Q#
0P#
0O#
0N#
0M#
0K#
0J#
0I#
0H#
0G#
0F#
0D#
0C#
0B#
0A#
0@#
0?#
0=#
0<#
0;#
0:#
09#
08#
06#
05#
04#
03#
02#
01#
0/#
0.#
0-#
0,#
0+#
0*#
0(#
0'#
0&#
0%#
0$#
0##
0!#
0~"
0}"
0|"
0{"
0z"
0x"
0w"
0v"
0u"
0t"
0s"
0q"
0p"
0o"
0n"
0m"
0l"
0j"
0i"
0h"
0g"
0f"
0e"
0c"
0b"
0a"
0`"
0_"
0^"
0\"
0["
0Z"
0Y"
0X"
0W"
0U"
0T"
0S"
0R"
0Q"
0P"
0N"
0M"
0L"
0K"
0J"
0I"
0G"
0F"
0E"
0D"
0C"
0B"
0@"
0?"
0>"
0="
0<"
0;"
09"
08"
07"
06"
05"
04"
02"
01"
00"
0/"
0."
0-"
0+"
0*"
0)"
0("
0'"
0&"
0$"
0#"
0""
0!"
0~
0}
0{
0z
0y
0x
0w
0v
0t
0s
0r
0q
0p
0o
0m
0l
0k
0j
0i
0h
0f
0e
0d
0c
0b
0a
0_
0^
0]
0\
0[
0Z
1X
1W
0V
1U
0T
0S
b1 P
b0 O
0N
b1 M
b0 L
zK
0J
b0 I
b1 G
b0 F
b1 E
0D
b1 C
bx B
bx A
1?
b1000000000010000010000011 >
b0 =
b1000000000010000010000011 <
bx 9
bx 8
bx 7
bx 6
bx 5
bx 4
bx 3
bx 2
bx 1
b0 0
bx /
bx .
b1000000000010000010000011 -
bx ,
bx +
bx *
bx )
1(
x'
1&
x%
x$
x#
x"
0!
$end
#5
08'
0n&
0`'
0t'
0L'
0$'
0Z&
0+(
0['
0e'
0j'
0o'
0y'
0~'
03'
0='
0B'
0G'
0Q'
0V'
0i&
0s&
0x&
0}&
0)'
0.'
0K&
0P&
0U&
0_&
0d&
0.(
0((
b0 *(
b0 -(
b0 0(
b0x0 B&
b0x0 $(
b0x0 3(
b0x %(
b0x '(
b10000 1
b10000 B
b0 &(
b1 )(
b1 ,(
b1 /(
b1 2(
0C(
0J(
0Q(
0X(
0_(
0f(
0m(
0t(
0{(
0$)
0+)
02)
09)
0@)
0G)
0N)
0U)
0\)
0c)
0j)
0q)
0x)
0!*
0(*
0/*
06*
0=*
0D*
0K*
0R*
0Y*
0`*
0g*
0n*
0u*
0|*
0%+
0,+
03+
0:+
0A+
0H+
0O+
0V+
0]+
0d+
0k+
0r+
0y+
0",
0),
00,
07,
0>,
0E,
0L,
0S,
0Z,
0a,
0h,
0o,
0v,
0},
0&-
b10000 /
b1 ,
b1 A&
b1 #(
b0 5
b0 <&
b0 4(
b0 9(
b0 +
b0 ?&
b10000 *
b10000 @&
b1000000000010000010000011 .
b1000000000010000010000011 A
1!
#10
1\
1Z
b10 E
b10 G
b10 P
0U
b10 O
1T
0X
1V
b1010100000010000100000011 -
b1010100000010000100000011 <
b1010100000010000100000011 >
b1 0
b1 =
b1 F
b1 I
b1 L
0e(
b1011011011 3
b1011011011 >&
b1011011011 E&
b1011011011 J&
b1011011011 O&
b1011011011 T&
b1011011011 Y&
b1011011011 ^&
b1011011011 c&
b1011011011 h&
b1011011011 m&
b1011011011 r&
b1011011011 w&
b1011011011 |&
b1011011011 #'
b1011011011 ('
b1011011011 -'
b1011011011 2'
b1011011011 7'
b1011011011 <'
b1011011011 A'
b1011011011 F'
b1011011011 K'
b1011011011 P'
b1011011011 U'
b1011011011 Z'
b1011011011 _'
b1011011011 d'
b1011011011 i'
b1011011011 n'
b1011011011 s'
b1011011011 x'
b1011011011 }'
0c(
b1011011011 6
b1011011011 8
0](
1F&
0P(
0W(
1^(
0l(
0s(
0z(
0#)
0*)
01)
08)
0?)
0F)
0M)
0T)
0[)
0b)
0i)
0p)
0w)
0~)
0'*
0.*
05*
0<*
0C*
0J*
0Q*
0X*
0_*
0f*
0m*
0t*
0{*
0$+
0++
02+
09+
0@+
0G+
0N+
0U+
0\+
0c+
0j+
0q+
0x+
0!,
0(,
0/,
06,
0=,
0D,
0K,
0R,
0Y,
0`,
0g,
0n,
0u,
0|,
0%-
b10 B&
b10 $(
b10 3(
0N(
0U(
0\(
0j(
0q(
0x(
0!)
0()
0/)
06)
0=)
0D)
0K)
0R)
0Y)
0`)
0g)
0n)
0u)
0|)
0%*
0,*
03*
0:*
0A*
0H*
0O*
0V*
0]*
0d*
0k*
0r*
0y*
0"+
0)+
00+
07+
0>+
0E+
0L+
0S+
0Z+
0a+
0h+
0o+
0v+
0}+
0&,
0-,
04,
0;,
0B,
0I,
0P,
0W,
0^,
0e,
0l,
0s,
0z,
0#-
0;(
b10000 7
0H(
0O(
0V(
0d(
0k(
0r(
0y(
0")
0))
00)
07)
0>)
0E)
0L)
0S)
0Z)
0a)
0h)
0o)
0v)
0})
0&*
0-*
04*
0;*
0B*
0I*
0P*
0W*
0^*
0e*
0l*
0s*
0z*
0#+
0*+
01+
08+
0?+
0F+
0M+
0T+
0[+
0b+
0i+
0p+
0w+
0~+
0',
0.,
05,
0<,
0C,
0J,
0Q,
0X,
0_,
0f,
0m,
0t,
0{,
0$-
0B(
b10000 )
b10000 6(
b10000 =(
0I(
0G(
11(
0E(
0L(
0S(
0Z(
1a(
0h(
0o(
0v(
0}(
0&)
0-)
04)
0;)
0B)
0I)
0P)
0W)
0^)
0e)
0l)
0s)
0z)
0#*
0**
01*
08*
0?*
0F*
0M*
0T*
0[*
0b*
0i*
0p*
0w*
0~*
0'+
0.+
05+
0<+
0C+
0J+
0Q+
0X+
0_+
0f+
0m+
0t+
0{+
0$,
0+,
02,
09,
0@,
0G,
0N,
0U,
0\,
0c,
0j,
0q,
0x,
0!-
0(-
0A(
b1 %(
b1 '(
0D(
0K(
0R(
0Y(
1`(
0g(
0n(
0u(
0|(
0%)
0,)
03)
0:)
0A)
0H)
0O)
0V)
0])
0d)
0k)
0r)
0y)
0"*
0)*
00*
07*
0>*
0E*
0L*
0S*
0Z*
0a*
0h*
0o*
0v*
0}*
0&+
0-+
04+
0;+
0B+
0I+
0P+
0W+
0^+
0e+
0l+
0s+
0z+
0#,
0*,
01,
08,
0?,
0F,
0M,
0T,
0[,
0b,
0i,
0p,
0w,
0~,
0'-
b10000 :(
0@(
b10000 2
b10000 5(
0!
0$
1%
b0 <(
0'
0"
1#
0&
#15
b100111000 3
b100111000 >&
b100111000 E&
b100111000 J&
b100111000 O&
b100111000 T&
b100111000 Y&
b100111000 ^&
b100111000 c&
b100111000 h&
b100111000 m&
b100111000 r&
b100111000 w&
b100111000 |&
b100111000 #'
b100111000 ('
b100111000 -'
b100111000 2'
b100111000 7'
b100111000 <'
b100111000 A'
b100111000 F'
b100111000 K'
b100111000 P'
b100111000 U'
b100111000 Z'
b100111000 _'
b100111000 d'
b100111000 i'
b100111000 n'
b100111000 s'
b100111000 x'
b100111000 }'
b100111000 6
b100111000 8
b10101 7
1B(
b10101 )
b10101 6(
b10101 =(
1P(
1E(
1S(
1K&
1D(
1R(
0F&
b10101 :(
b100 B&
b100 $(
b100 3(
b10101 2
b10101 5(
b10101 1
b10101 B
b10 )(
b10 ,(
b10 /(
b10 2(
b10101 /
b10 ,
b10 A&
b10 #(
b10101 *
b10101 @&
b1010100000010000100000011 .
b1010100000010000100000011 A
b1011011011 H&
1!
#20
0c
0a
0Z
0[
1U
b0 O
0T
b11 E
b11 G
b11 P
1\
1X
1_
0V
1]
b1000001000000110110011 -
b1000001000000110110011 <
b1000001000000110110011 >
b10 0
b10 =
b10 F
b10 I
b10 L
0!
#25
1N(
1P(
1H(
0S(
0K&
bx 3
bx >&
bx E&
bx J&
bx O&
bx T&
bx Y&
bx ^&
bx c&
bx h&
bx m&
bx r&
bx w&
bx |&
bx #'
bx ('
bx -'
bx 2'
bx 7'
bx <'
bx A'
bx F'
bx K'
bx P'
bx U'
bx Z'
bx _'
bx d'
bx i'
bx n'
bx s'
bx x'
bx }'
0e(
0D(
1K(
0R(
0`(
1P&
0G(
bx 6
bx 8
b11101 7
0c(
b10 :(
b1000 B&
b1000 $(
b1000 3(
1B(
0A(
0I(
1W(
1^(
b100 <(
0](
1l(
1s(
b1011011101 )
b1011011101 6(
b1011011101 =(
1#)
b10 2
b10 5(
1E(
0L(
1Z(
1a(
1o(
1v(
1&)
b10 1
b10 B
b11 )(
b11 ,(
b11 /(
b11 2(
1C(
1J(
1X(
1_(
1m(
1t(
1$)
b10 /
b11 ,
b11 A&
b11 #(
b1011011011 5
b1011011011 <&
b1011011011 4(
b1011011011 9(
b1 +
b1 ?&
b100111000 4
b100111000 9
b100111000 =&
b10 *
b10 @&
b100111000 M&
b1000001000000110110011 .
b1000001000000110110011 A
1!
#30
1c
1a
1[
0\
1Z
b100 E
b100 G
b100 P
0U
b110 O
1T
0X
1V
b1000000000100010000001000110011 -
b1000000000100010000001000110011 <
b1000000000100010000001000110011 >
b11 0
b11 =
b11 F
b11 I
b11 L
1*)
1()
1")
0#)
1!)
1y(
1x(
1r(
0s(
1q(
1k(
0l(
1j(
1d(
0P(
0N(
1\(
b10011 7
1c(
1I(
0H(
0W(
1V(
1^(
b11111110000 <(
1](
0e(
b10000010011 )
b10000010011 6(
b10000010011 =(
0z(
1L(
0Z(
0a(
1h(
1}(
0K(
1Y(
1`(
1g(
1|(
b100111000 :(
b10000010011 3
b10000010011 >&
b10000010011 E&
b10000010011 J&
b10000010011 O&
b10000010011 T&
b10000010011 Y&
b10000010011 ^&
b10000010011 c&
b10000010011 h&
b10000010011 m&
b10000010011 r&
b10000010011 w&
b10000010011 |&
b10000010011 #'
b10000010011 ('
b10000010011 -'
b10000010011 2'
b10000010011 7'
b10000010011 <'
b10000010011 A'
b10000010011 F'
b10000010011 K'
b10000010011 P'
b10000010011 U'
b10000010011 Z'
b10000010011 _'
b10000010011 d'
b10000010011 i'
b10000010011 n'
b10000010011 s'
b10000010011 x'
b10000010011 }'
b100111000 2
b100111000 5(
0!
1"
0#
#35
1U&
1*)
1j(
1q(
1x(
1!)
1()
0P&
bx 6
bx 8
b10011 7
1d(
1k(
1r(
1y(
b10000010011 3
b10000010011 >&
b10000010011 E&
b10000010011 J&
b10000010011 O&
b10000010011 T&
b10000010011 Y&
b10000010011 ^&
b10000010011 c&
b10000010011 h&
b10000010011 m&
b10000010011 r&
b10000010011 w&
b10000010011 |&
b10000010011 #'
b10000010011 ('
b10000010011 -'
b10000010011 2'
b10000010011 7'
b10000010011 <'
b10000010011 A'
b10000010011 F'
b10000010011 K'
b10000010011 P'
b10000010011 U'
b10000010011 Z'
b10000010011 _'
b10000010011 d'
b10000010011 i'
b10000010011 n'
b10000010011 s'
b10000010011 x'
b10000010011 }'
b11111110000 <(
1")
b10000 B&
b10000 $(
b10000 3(
1B(
1I(
0e(
0l(
0s(
0z(
b10000010011 )
b10000010011 6(
b10000010011 =(
0#)
1D(
1K(
0g(
1n(
1u(
0|(
1%)
1E(
1L(
1h(
1o(
1v(
1}(
1&)
b1011011011 :(
b10000000001 1
b10000000001 B
b100 )(
b100 ,(
b100 /(
b100 2(
0C(
0J(
1f(
0m(
0t(
1{(
0$)
b1011011011 2
b1011011011 5(
b10000000001 /
b100 ,
b100 A&
b100 #(
b100111000 5
b100111000 <&
b100111000 4(
b100111000 9(
b10 +
b10 ?&
b1011011011 4
b1011011011 9
b1011011011 =&
b1 *
b1 @&
b1000000000100010000001000110011 .
b1000000000100010000001000110011 A
b10000010011 R&
1!
#40
0j
0a
0h
0Z
0[
0b
1U
b0 O
0T
0\
b101 E
b101 G
b101 P
1c
1X
0_
1f
0V
0]
1d
b10000000010100100100011 -
b10000000010100100100011 <
b10000000010100100100011 >
b100 0
b100 =
b100 F
b100 I
b100 L
0;(
0$-
0#-
0{,
0z,
0t,
0s,
0m,
0l,
0f,
0e,
0_,
0^,
0X,
0W,
0Q,
0P,
0J,
0I,
0C,
0B,
0<,
0;,
05,
04,
0.,
0-,
0',
0&,
0~+
0}+
0w+
0v+
0p+
0o+
0i+
0h+
0b+
0a+
0[+
0Z+
0T+
0S+
0M+
0L+
0F+
0E+
0?+
0>+
08+
07+
01+
00+
0*+
0)+
0#+
0"+
0z*
0y*
0s*
0r*
0l*
0k*
0e*
0d*
0^*
0]*
0W*
0V*
0P*
0O*
0I*
0H*
0B*
0A*
0;*
0:*
04*
03*
0-*
0,*
0&*
0%*
0})
0|)
0v)
0u)
0o)
0n)
0h)
0g)
0a)
0`)
0Z)
0Y)
0S)
0R)
0L)
0K)
0E)
0D)
0>)
0=)
07)
06)
00)
0I(
0q(
0x(
0()
0/)
0\(
0c(
0k(
0r(
0")
0))
1P(
1W(
0V(
1^(
0](
0e(
1l(
0s(
0z(
1#)
1*)
11)
18)
1?)
1F)
1M)
1T)
1[)
1b)
1i)
1p)
1w)
1~)
1'*
1.*
15*
1<*
1C*
1J*
1Q*
1X*
1_*
1f*
1m*
1t*
1{*
1$+
1++
12+
19+
1@+
1G+
1N+
1U+
1\+
1c+
1j+
1q+
1x+
1!,
1(,
1/,
16,
1=,
1D,
1K,
1R,
1Y,
1`,
1g,
1n,
1u,
1|,
1%-
0G(
0E(
0L(
1S(
1Z(
1a(
0h(
0o(
0v(
0}(
0&)
1-)
14)
1;)
1B)
1I)
1P)
1W)
1^)
1e)
1l)
1s)
1z)
1#*
1**
11*
18*
1?*
1F*
1M*
1T*
1[*
1b*
1i*
1p*
1w*
1~*
1'+
1.+
15+
1<+
1C+
1J+
1Q+
1X+
1_+
1f+
1m+
1t+
1{+
1$,
1+,
12,
19,
1@,
1G,
1N,
1U,
1\,
1c,
1j,
1q,
1x,
1!-
1(-
b11101 7
b1111111111111111111111111111111111111111111111111111111001011101 3
b1111111111111111111111111111111111111111111111111111111001011101 >&
b1111111111111111111111111111111111111111111111111111111001011101 E&
b1111111111111111111111111111111111111111111111111111111001011101 J&
b1111111111111111111111111111111111111111111111111111111001011101 O&
b1111111111111111111111111111111111111111111111111111111001011101 T&
b1111111111111111111111111111111111111111111111111111111001011101 Y&
b1111111111111111111111111111111111111111111111111111111001011101 ^&
b1111111111111111111111111111111111111111111111111111111001011101 c&
b1111111111111111111111111111111111111111111111111111111001011101 h&
b1111111111111111111111111111111111111111111111111111111001011101 m&
b1111111111111111111111111111111111111111111111111111111001011101 r&
b1111111111111111111111111111111111111111111111111111111001011101 w&
b1111111111111111111111111111111111111111111111111111111001011101 |&
b1111111111111111111111111111111111111111111111111111111001011101 #'
b1111111111111111111111111111111111111111111111111111111001011101 ('
b1111111111111111111111111111111111111111111111111111111001011101 -'
b1111111111111111111111111111111111111111111111111111111001011101 2'
b1111111111111111111111111111111111111111111111111111111001011101 7'
b1111111111111111111111111111111111111111111111111111111001011101 <'
b1111111111111111111111111111111111111111111111111111111001011101 A'
b1111111111111111111111111111111111111111111111111111111001011101 F'
b1111111111111111111111111111111111111111111111111111111001011101 K'
b1111111111111111111111111111111111111111111111111111111001011101 P'
b1111111111111111111111111111111111111111111111111111111001011101 U'
b1111111111111111111111111111111111111111111111111111111001011101 Z'
b1111111111111111111111111111111111111111111111111111111001011101 _'
b1111111111111111111111111111111111111111111111111111111001011101 d'
b1111111111111111111111111111111111111111111111111111111001011101 i'
b1111111111111111111111111111111111111111111111111111111001011101 n'
b1111111111111111111111111111111111111111111111111111111001011101 s'
b1111111111111111111111111111111111111111111111111111111001011101 x'
b1111111111111111111111111111111111111111111111111111111001011101 }'
0A(
0D(
0K(
1R(
0Y(
0`(
1g(
0n(
0u(
1|(
0%)
1,)
13)
1:)
1A)
1H)
1O)
1V)
1])
1d)
1k)
1r)
1y)
1"*
1)*
10*
17*
1>*
1E*
1L*
1S*
1Z*
1a*
1h*
1o*
1v*
1}*
1&+
1-+
14+
1;+
1B+
1I+
1P+
1W+
1^+
1e+
1l+
1s+
1z+
1#,
1*,
11,
18,
1?,
1F,
1M,
1T,
1[,
1b,
1i,
1p,
1w,
1~,
1'-
b1111111111111111111111111111111111111111111111111111111001011101 )
b1111111111111111111111111111111111111111111111111111111001011101 6(
b1111111111111111111111111111111111111111111111111111111001011101 =(
1B(
b1111111111111111111111111111111111111111111111111111110100100100 :(
1@(
0!
b1001000001 <(
1'
#45
1='
b100 -(
0K&
01(
0U&
1+(
0_&
0l(
0#)
1I(
0P(
1s(
0*)
01)
08)
0?)
0F)
0M)
0T)
0[)
0b)
0i)
0p)
0w)
0~)
0'*
0.*
05*
0<*
0C*
0J*
0Q*
0X*
0_*
0f*
0m*
0t*
0{*
0$+
0++
02+
09+
0@+
0G+
0N+
0U+
0\+
0c+
0j+
0q+
0x+
0!,
0(,
0/,
06,
0=,
0D,
0K,
0R,
0Y,
0`,
0g,
0n,
0u,
0|,
0%-
b100 %(
b100 '(
b1000000000000000000 B&
b1000000000000000000 $(
b0 3(
b11 7
0j(
b110100011 3
b110100011 >&
b110100011 E&
b110100011 J&
b110100011 O&
b110100011 T&
b110100011 Y&
b110100011 ^&
b110100011 c&
b110100011 h&
b110100011 m&
b110100011 r&
b110100011 w&
b110100011 |&
b110100011 #'
b110100011 ('
b110100011 -'
b110100011 2'
b110100011 7'
b110100011 <'
b110100011 A'
b110100011 F'
b110100011 K'
b110100011 P'
b110100011 U'
b110100011 Z'
b110100011 _'
b110100011 d'
b110100011 i'
b110100011 n'
b110100011 s'
b110100011 x'
b110100011 }'
0!)
1L(
0S(
1v(
0-)
04)
0;)
0B)
0I)
0P)
0W)
0^)
0e)
0l)
0s)
0z)
0#*
0**
01*
08*
0?*
0F*
0M*
0T*
0[*
0b*
0i*
0p*
0w*
0~*
0'+
0.+
05+
0<+
0C+
0J+
0Q+
0X+
0_+
0f+
0m+
0t+
0{+
0$,
0+,
02,
09,
0@,
0G,
0N,
0U,
0\,
0c,
0j,
0q,
0x,
0!-
0(-
0W(
0^(
1e(
0d(
b110100011 )
b110100011 6(
b110100011 =(
1z(
b1 <(
0y(
1K(
0R(
1u(
0,)
03)
0:)
0A)
0H)
0O)
0V)
0])
0d)
0k)
0r)
0y)
0"*
0)*
00*
07*
0>*
0E*
0L*
0S*
0Z*
0a*
0h*
0o*
0v*
0}*
0&+
0-+
04+
0;+
0B+
0I+
0P+
0W+
0^+
0e+
0l+
0s+
0z+
0#,
0*,
01,
08,
0?,
0F,
0M,
0T,
0[,
0b,
0i,
0p,
0w,
0~,
0'-
0Z(
0a(
1h(
1}(
b110100010 :(
b10010 1
b10010 B
b10 &(
b10 )(
b10 ,(
b10 /(
b10 2(
0X(
0_(
0f(
0{(
b1111111111111111111111111111111111111111111111111111111001011101 2
b1111111111111111111111111111111111111111111111111111111001011101 5(
b10010 /
b10010 ,
b10010 A&
b10010 #(
b0 5
b0 <&
b0 4(
b0 9(
b0 +
b0 ?&
b1111111111111111111111111111111111111111111111111111111001011101 4
b1111111111111111111111111111111111111111111111111111111001011101 9
b1111111111111111111111111111111111111111111111111111111001011101 =&
b100 *
b100 @&
b1111111111111111111111111111111111111111111111111111111001011101 W&
b10000000010100100100011 .
b10000000010100100100011 A
1!
#50
1\
1Z
b110 E
b110 G
b110 P
0U
b10 O
1T
0X
1V
b11001000100000001010010011 -
b11001000100000001010010011 <
b11001000100000001010010011 >
b101 0
b101 =
b101 F
b101 I
b101 L
0='
b0 B&
b0 $(
b0 -(
1^(
0e(
0s(
0z(
0+(
1a(
0h(
0v(
0}(
b10010 7
b0 %(
b0 '(
1`(
0g(
0u(
0|(
b10010 )
b10010 6(
b10010 =(
0B(
b10010 :(
0@(
bx 3
bx >&
bx E&
bx J&
bx O&
bx T&
bx Y&
bx ^&
bx c&
bx h&
bx m&
bx r&
bx w&
bx |&
bx #'
bx ('
bx -'
bx 2'
bx 7'
bx <'
bx A'
bx F'
bx K'
bx P'
bx U'
bx Z'
bx _'
bx d'
bx i'
bx n'
bx s'
bx x'
bx }'
b10010 2
b10010 5(
0!
1$
0%
b0 <(
0'
0"
1#
#55
1s(
1q(
1k(
1j(
1d(
1h(
0e(
1g(
b1111 7
1c(
b110010 :(
1B(
1P(
1W(
0^(
b11100000 <(
1](
0l(
1#)
1*)
11)
18)
1?)
1F)
1M)
1T)
1[)
1b)
1i)
1p)
1w)
1~)
1'*
1.*
15*
1<*
1C*
1J*
1Q*
1X*
1_*
1f*
1m*
1t*
1{*
1$+
1++
12+
19+
1@+
1G+
1N+
1U+
1\+
1c+
1j+
1q+
1x+
1!,
1(,
1/,
16,
1=,
1D,
1K,
1R,
1Y,
1`,
1g,
1n,
1u,
1|,
b1111111111111111111111111111111111111111111111111111111010001111 )
b1111111111111111111111111111111111111111111111111111111010001111 6(
b1111111111111111111111111111111111111111111111111111111010001111 =(
1%-
b110010 2
b110010 5(
1E(
1S(
1Z(
0a(
1o(
1&)
1-)
14)
1;)
1B)
1I)
1P)
1W)
1^)
1e)
1l)
1s)
1z)
1#*
1**
11*
18*
1?*
1F*
1M*
1T*
1[*
1b*
1i*
1p*
1w*
1~*
1'+
1.+
15+
1<+
1C+
1J+
1Q+
1X+
1_+
1f+
1m+
1t+
1{+
1$,
1+,
12,
19,
1@,
1G,
1N,
1U,
1\,
1c,
1j,
1q,
1x,
1!-
1(-
b110010 1
b110010 B
b0 &(
b101 )(
b101 ,(
b101 /(
b101 2(
1C(
1Q(
1X(
1_(
1m(
1$)
1+)
12)
19)
1@)
1G)
1N)
1U)
1\)
1c)
1j)
1q)
1x)
1!*
1(*
1/*
16*
1=*
1D*
1K*
1R*
1Y*
1`*
1g*
1n*
1u*
1|*
1%+
1,+
13+
1:+
1A+
1H+
1O+
1V+
1]+
1d+
1k+
1r+
1y+
1",
1),
10,
17,
1>,
1E,
1L,
1S,
1Z,
1a,
1h,
1o,
1v,
1},
1&-
b110010 /
b101 ,
b101 A&
b101 #(
b1111111111111111111111111111111111111111111111111111111001011101 5
b1111111111111111111111111111111111111111111111111111111001011101 <&
b1111111111111111111111111111111111111111111111111111111001011101 4(
b1111111111111111111111111111111111111111111111111111111001011101 9(
b100 +
b100 ?&
bx 4
bx 9
bx =&
b10010 *
b10010 @&
bx 3
bx >&
bx E&
bx J&
bx O&
bx T&
bx Y&
bx ^&
bx c&
bx h&
bx m&
bx r&
bx w&
bx |&
bx #'
bx ('
bx -'
bx 2'
bx 7'
bx <'
bx A'
bx F'
bx K'
bx P'
bx U'
bx Z'
bx _'
bx d'
bx i'
bx n'
bx s'
bx x'
bx }'
b11001000100000001010010011 .
b11001000100000001010010011 A
bx 6
bx 8
1!
#60
0j
0h
0b
1c
0a
0Z
0[
1U
b0 O
0T
b111 E
b111 G
b111 P
1\
1X
1_
0V
1]
b1001000000010001100000011 -
b1001000000010001100000011 <
b1001000000010001100000011 >
b110 0
b110 =
b110 F
b110 I
b110 L
1Z&
b100000 B&
b100000 $(
b100000 3(
11(
b1 %(
b1 '(
b1111111111111111111111111111111111111111111111111111111010001111 3
b1111111111111111111111111111111111111111111111111111111010001111 >&
b1111111111111111111111111111111111111111111111111111111010001111 E&
b1111111111111111111111111111111111111111111111111111111010001111 J&
b1111111111111111111111111111111111111111111111111111111010001111 O&
b1111111111111111111111111111111111111111111111111111111010001111 T&
b1111111111111111111111111111111111111111111111111111111010001111 Y&
b1111111111111111111111111111111111111111111111111111111010001111 ^&
b1111111111111111111111111111111111111111111111111111111010001111 c&
b1111111111111111111111111111111111111111111111111111111010001111 h&
b1111111111111111111111111111111111111111111111111111111010001111 m&
b1111111111111111111111111111111111111111111111111111111010001111 r&
b1111111111111111111111111111111111111111111111111111111010001111 w&
b1111111111111111111111111111111111111111111111111111111010001111 |&
b1111111111111111111111111111111111111111111111111111111010001111 #'
b1111111111111111111111111111111111111111111111111111111010001111 ('
b1111111111111111111111111111111111111111111111111111111010001111 -'
b1111111111111111111111111111111111111111111111111111111010001111 2'
b1111111111111111111111111111111111111111111111111111111010001111 7'
b1111111111111111111111111111111111111111111111111111111010001111 <'
b1111111111111111111111111111111111111111111111111111111010001111 A'
b1111111111111111111111111111111111111111111111111111111010001111 F'
b1111111111111111111111111111111111111111111111111111111010001111 K'
b1111111111111111111111111111111111111111111111111111111010001111 P'
b1111111111111111111111111111111111111111111111111111111010001111 U'
b1111111111111111111111111111111111111111111111111111111010001111 Z'
b1111111111111111111111111111111111111111111111111111111010001111 _'
b1111111111111111111111111111111111111111111111111111111010001111 d'
b1111111111111111111111111111111111111111111111111111111010001111 i'
b1111111111111111111111111111111111111111111111111111111010001111 n'
b1111111111111111111111111111111111111111111111111111111010001111 s'
b1111111111111111111111111111111111111111111111111111111010001111 x'
b1111111111111111111111111111111111111111111111111111111010001111 }'
0!
0$
1%
1"
#65
0j(
0d(
0s(
0h(
0U&
1_&
0e(
0q(
0g(
0Z&
b1111111111111111111111111111111111111111111111111111111001011101 6
b1111111111111111111111111111111111111111111111111111111001011101 8
b10010 7
0c(
0k(
b10010 3
b10010 >&
b10010 E&
b10010 J&
b10010 O&
b10010 T&
b10010 Y&
b10010 ^&
b10010 c&
b10010 h&
b10010 m&
b10010 r&
b10010 w&
b10010 |&
b10010 #'
b10010 ('
b10010 -'
b10010 2'
b10010 7'
b10010 <'
b10010 A'
b10010 F'
b10010 K'
b10010 P'
b10010 U'
b10010 Z'
b10010 _'
b10010 d'
b10010 i'
b10010 n'
b10010 s'
b10010 x'
b10010 }'
b10010 :(
b1000000 B&
b1000000 $(
b1000000 3(
0B(
0P(
0W(
1^(
b0 <(
0](
0l(
0#)
0*)
01)
08)
0?)
0F)
0M)
0T)
0[)
0b)
0i)
0p)
0w)
0~)
0'*
0.*
05*
0<*
0C*
0J*
0Q*
0X*
0_*
0f*
0m*
0t*
0{*
0$+
0++
02+
09+
0@+
0G+
0N+
0U+
0\+
0c+
0j+
0q+
0x+
0!,
0(,
0/,
06,
0=,
0D,
0K,
0R,
0Y,
0`,
0g,
0n,
0u,
0|,
b10010 )
b10010 6(
b10010 =(
0%-
b10010 2
b10010 5(
0E(
0S(
0Z(
1a(
0o(
0&)
0-)
04)
0;)
0B)
0I)
0P)
0W)
0^)
0e)
0l)
0s)
0z)
0#*
0**
01*
08*
0?*
0F*
0M*
0T*
0[*
0b*
0i*
0p*
0w*
0~*
0'+
0.+
05+
0<+
0C+
0J+
0Q+
0X+
0_+
0f+
0m+
0t+
0{+
0$,
0+,
02,
09,
0@,
0G,
0N,
0U,
0\,
0c,
0j,
0q,
0x,
0!-
0(-
b10010 1
b10010 B
b110 )(
b110 ,(
b110 /(
b110 2(
0C(
0Q(
0X(
0_(
0m(
0$)
0+)
02)
09)
0@)
0G)
0N)
0U)
0\)
0c)
0j)
0q)
0x)
0!*
0(*
0/*
06*
0=*
0D*
0K*
0R*
0Y*
0`*
0g*
0n*
0u*
0|*
0%+
0,+
03+
0:+
0A+
0H+
0O+
0V+
0]+
0d+
0k+
0r+
0y+
0",
0),
00,
07,
0>,
0E,
0L,
0S,
0Z,
0a,
0h,
0o,
0v,
0},
0&-
b10010 /
b110 ,
b110 A&
b110 #(
b0 5
b0 <&
b0 4(
b0 9(
b0 +
b0 ?&
b1111111111111111111111111111111111111111111111111111111010001111 \&
b1001000000010001100000011 .
b1001000000010001100000011 A
1!
#70
1j
1h
1b
0c
1a
1[
0\
1Z
b1000 E
b1000 G
b1000 P
0U
b1110 O
1T
0X
1V
bx -
bx <
bx >
b111 0
b111 =
b111 F
b111 I
b111 L
b1111111111111111111111111111111111111111111111111111111001011101 3
b1111111111111111111111111111111111111111111111111111111001011101 >&
b1111111111111111111111111111111111111111111111111111111001011101 E&
b1111111111111111111111111111111111111111111111111111111001011101 J&
b1111111111111111111111111111111111111111111111111111111001011101 O&
b1111111111111111111111111111111111111111111111111111111001011101 T&
b1111111111111111111111111111111111111111111111111111111001011101 Y&
b1111111111111111111111111111111111111111111111111111111001011101 ^&
b1111111111111111111111111111111111111111111111111111111001011101 c&
b1111111111111111111111111111111111111111111111111111111001011101 h&
b1111111111111111111111111111111111111111111111111111111001011101 m&
b1111111111111111111111111111111111111111111111111111111001011101 r&
b1111111111111111111111111111111111111111111111111111111001011101 w&
b1111111111111111111111111111111111111111111111111111111001011101 |&
b1111111111111111111111111111111111111111111111111111111001011101 #'
b1111111111111111111111111111111111111111111111111111111001011101 ('
b1111111111111111111111111111111111111111111111111111111001011101 -'
b1111111111111111111111111111111111111111111111111111111001011101 2'
b1111111111111111111111111111111111111111111111111111111001011101 7'
b1111111111111111111111111111111111111111111111111111111001011101 <'
b1111111111111111111111111111111111111111111111111111111001011101 A'
b1111111111111111111111111111111111111111111111111111111001011101 F'
b1111111111111111111111111111111111111111111111111111111001011101 K'
b1111111111111111111111111111111111111111111111111111111001011101 P'
b1111111111111111111111111111111111111111111111111111111001011101 U'
b1111111111111111111111111111111111111111111111111111111001011101 Z'
b1111111111111111111111111111111111111111111111111111111001011101 _'
b1111111111111111111111111111111111111111111111111111111001011101 d'
b1111111111111111111111111111111111111111111111111111111001011101 i'
b1111111111111111111111111111111111111111111111111111111001011101 n'
b1111111111111111111111111111111111111111111111111111111001011101 s'
b1111111111111111111111111111111111111111111111111111111001011101 x'
b1111111111111111111111111111111111111111111111111111111001011101 }'
0!
0"
#75
x;(
x$-
x#-
x{,
xz,
xt,
xs,
xm,
xl,
xf,
xe,
x_,
x^,
xX,
xW,
xQ,
xP,
xJ,
xI,
xC,
xB,
x<,
x;,
x5,
x4,
x.,
x-,
x',
x&,
x~+
x}+
xw+
xv+
xp+
xo+
xi+
xh+
xb+
xa+
x[+
xZ+
xT+
xS+
xM+
xL+
xF+
xE+
x?+
x>+
x8+
x7+
x1+
x0+
x*+
x)+
x#+
x"+
xz*
xy*
xs*
xr*
xl*
xk*
xe*
xd*
x^*
x]*
xW*
xV*
xP*
xO*
xI*
xH*
xB*
xA*
x;*
x:*
x4*
x3*
x-*
x,*
x&*
x%*
x})
x|)
xv)
xu)
xo)
xn)
xh)
xg)
xa)
x`)
xZ)
xY)
xS)
xR)
xL)
xK)
xE)
xD)
x>)
x=)
x7)
x3'
x8'
x='
xB'
xG'
xL'
xQ'
xV'
x['
x`'
xe'
xj'
xo'
xt'
xy'
x~'
xi&
xn&
xs&
xx&
x}&
x$'
x)'
x.'
bx -(
bx *(
xG(
x\(
xq(
xx(
x!)
x()
x/)
x6)
bx 0(
xF&
xK&
xP&
xU(
xj(
xA(
xV(
xk(
xr(
xy(
x")
x))
x0)
xU&
xZ&
xO(
xd(
x1(
x+(
x((
x_&
bx 3
bx >&
bx E&
bx J&
bx O&
bx T&
bx Y&
bx ^&
bx c&
bx h&
bx m&
bx r&
bx w&
bx |&
bx #'
bx ('
bx -'
bx 2'
bx 7'
bx <'
bx A'
bx F'
bx K'
bx P'
bx U'
bx Z'
bx _'
bx d'
bx i'
bx n'
bx s'
bx x'
bx }'
xD(
xK(
xR(
xY(
x`(
xg(
xn(
xu(
x|(
x%)
x,)
x3)
x.(
xd&
xN(
bx 6
bx 8
bx 7
xc(
b0xxxxxxxxxxxx :(
bx %(
bx '(
bx B&
bx $(
bx 3(
xB(
xI(
xH(
xP(
xW(
x^(
bx0 <(
x](
xe(
xl(
xs(
xz(
x#)
x*)
x1)
x8)
x?)
xF)
xM)
xT)
x[)
xb)
xi)
xp)
xw)
x~)
x'*
x.*
x5*
x<*
xC*
xJ*
xQ*
xX*
x_*
xf*
xm*
xt*
x{*
x$+
x++
x2+
x9+
x@+
xG+
xN+
xU+
x\+
xc+
xj+
xq+
xx+
x!,
x(,
x/,
x6,
x=,
xD,
xK,
xR,
xY,
x`,
xg,
xn,
xu,
x|,
bx )
bx 6(
bx =(
x%-
b0xxxxxxxxxxxx 2
b0xxxxxxxxxxxx 5(
xE(
xL(
xS(
xZ(
xa(
xh(
xo(
xv(
x}(
x&)
x-)
x4)
x;)
xB)
xI)
xP)
xW)
x^)
xe)
xl)
xs)
xz)
x#*
x**
x1*
x8*
x?*
xF*
xM*
xT*
x[*
xb*
xi*
xp*
xw*
x~*
x'+
x.+
x5+
x<+
xC+
xJ+
xQ+
xX+
x_+
xf+
xm+
xt+
x{+
x$,
x+,
x2,
x9,
x@,
xG,
xN,
xU,
x\,
xc,
xj,
xq,
xx,
x!-
x(-
bx 1
bx B
bx &(
bx )(
bx ,(
bx /(
bx 2(
xC(
xJ(
xQ(
xX(
x_(
xf(
xm(
xt(
x{(
x$)
x+)
x2)
x9)
x@)
xG)
xN)
xU)
x\)
xc)
xj)
xq)
xx)
x!*
x(*
x/*
x6*
x=*
xD*
xK*
xR*
xY*
x`*
xg*
xn*
xu*
x|*
x%+
x,+
x3+
x:+
xA+
xH+
xO+
xV+
x]+
xd+
xk+
xr+
xy+
x",
x),
x0,
x7,
x>,
xE,
xL,
xS,
xZ,
xa,
xh,
xo,
xv,
x},
x&-
bx /
bx ,
bx A&
bx #(
bx 5
bx <&
bx 4(
bx 9(
bx +
bx ?&
bx *
bx @&
bx .
bx A
b1111111111111111111111111111111111111111111111111111111001011101 a&
1!
#80
0q
0a
0h
0o
0Z
0[
0b
0i
1U
b0 O
0T
0\
0c
b1001 E
b1001 G
b1001 P
1j
1X
0_
0f
1m
0V
0]
0d
1k
b1000 0
b1000 =
b1000 F
b1000 I
b1000 L
0!
