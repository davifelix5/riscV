$date
	Mon May  8 10:54:04 2023
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module datapath_with_instructions_tb $end
$var reg 1 ! CLK $end
$var reg 1 " RF_din_sel $end
$var reg 1 # ULA_din2_sel $end
$var reg 1 $ WE_MEM $end
$var reg 1 % WE_RF $end
$var reg 1 & reset_pc $end
$var reg 1 ' sub $end
$scope module UUT $end
$var wire 1 ! CLK $end
$var wire 1 " RF_din_sel $end
$var wire 1 # ULA_din2_sel $end
$var wire 1 $ WE_MEM $end
$var wire 1 % WE_RF $end
$var wire 1 ( load_pc $end
$var wire 1 & reset_pc $end
$var wire 1 ' sub $end
$var wire 5 ) rs2 [4:0] $end
$var wire 5 * rs1 [4:0] $end
$var wire 5 + rd [4:0] $end
$var wire 32 , instruction_mem [31:0] $end
$var wire 32 - instruction [31:0] $end
$var wire 12 . imm [11:0] $end
$var wire 64 / im_addr [63:0] $end
$var wire 12 0 extended_imm [11:0] $end
$scope module DP $end
$var wire 1 ! CLK $end
$var wire 1 " RF_din_sel $end
$var wire 1 # ULA_din2_sel $end
$var wire 1 $ WE_MEM $end
$var wire 1 % WE_RF $end
$var wire 12 1 immediate [11:0] $end
$var wire 5 2 rd [4:0] $end
$var wire 5 3 rs1 [4:0] $end
$var wire 5 4 rs2 [4:0] $end
$var wire 1 ' sub $end
$var wire 64 5 ula [63:0] $end
$var wire 64 6 ULA_Din2 [63:0] $end
$var wire 64 7 RF_Din [63:0] $end
$var wire 64 8 Dout_rs2 [63:0] $end
$var wire 64 9 Dout_rs1 [63:0] $end
$var wire 64 : DM_out [63:0] $end
$scope module ULA $end
$var wire 64 ; s2 [63:0] $end
$var wire 1 ' sub $end
$var wire 64 < s1 [63:0] $end
$var wire 64 = res [63:0] $end
$scope module adder $end
$var wire 1 ' Cin $end
$var wire 1 > Cout $end
$var wire 64 ? Y [63:0] $end
$var wire 1 @ cout $end
$var wire 65 A cins [64:0] $end
$var wire 64 B X [63:0] $end
$var wire 64 C S [63:0] $end
$scope begin genblk1[0] $end
$scope module SOMA $end
$var wire 1 D Cin $end
$var wire 1 E Cout $end
$var wire 1 F S $end
$var wire 1 G X $end
$var wire 1 H Y $end
$var wire 1 I xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[1] $end
$scope module SOMA $end
$var wire 1 J Cin $end
$var wire 1 K Cout $end
$var wire 1 L S $end
$var wire 1 M X $end
$var wire 1 N Y $end
$var wire 1 O xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[2] $end
$scope module SOMA $end
$var wire 1 P Cin $end
$var wire 1 Q Cout $end
$var wire 1 R S $end
$var wire 1 S X $end
$var wire 1 T Y $end
$var wire 1 U xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[3] $end
$scope module SOMA $end
$var wire 1 V Cin $end
$var wire 1 W Cout $end
$var wire 1 X S $end
$var wire 1 Y X $end
$var wire 1 Z Y $end
$var wire 1 [ xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[4] $end
$scope module SOMA $end
$var wire 1 \ Cin $end
$var wire 1 ] Cout $end
$var wire 1 ^ S $end
$var wire 1 _ X $end
$var wire 1 ` Y $end
$var wire 1 a xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[5] $end
$scope module SOMA $end
$var wire 1 b Cin $end
$var wire 1 c Cout $end
$var wire 1 d S $end
$var wire 1 e X $end
$var wire 1 f Y $end
$var wire 1 g xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[6] $end
$scope module SOMA $end
$var wire 1 h Cin $end
$var wire 1 i Cout $end
$var wire 1 j S $end
$var wire 1 k X $end
$var wire 1 l Y $end
$var wire 1 m xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[7] $end
$scope module SOMA $end
$var wire 1 n Cin $end
$var wire 1 o Cout $end
$var wire 1 p S $end
$var wire 1 q X $end
$var wire 1 r Y $end
$var wire 1 s xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[8] $end
$scope module SOMA $end
$var wire 1 t Cin $end
$var wire 1 u Cout $end
$var wire 1 v S $end
$var wire 1 w X $end
$var wire 1 x Y $end
$var wire 1 y xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[9] $end
$scope module SOMA $end
$var wire 1 z Cin $end
$var wire 1 { Cout $end
$var wire 1 | S $end
$var wire 1 } X $end
$var wire 1 ~ Y $end
$var wire 1 !" xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[10] $end
$scope module SOMA $end
$var wire 1 "" Cin $end
$var wire 1 #" Cout $end
$var wire 1 $" S $end
$var wire 1 %" X $end
$var wire 1 &" Y $end
$var wire 1 '" xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[11] $end
$scope module SOMA $end
$var wire 1 (" Cin $end
$var wire 1 )" Cout $end
$var wire 1 *" S $end
$var wire 1 +" X $end
$var wire 1 ," Y $end
$var wire 1 -" xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[12] $end
$scope module SOMA $end
$var wire 1 ." Cin $end
$var wire 1 /" Cout $end
$var wire 1 0" S $end
$var wire 1 1" X $end
$var wire 1 2" Y $end
$var wire 1 3" xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[13] $end
$scope module SOMA $end
$var wire 1 4" Cin $end
$var wire 1 5" Cout $end
$var wire 1 6" S $end
$var wire 1 7" X $end
$var wire 1 8" Y $end
$var wire 1 9" xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[14] $end
$scope module SOMA $end
$var wire 1 :" Cin $end
$var wire 1 ;" Cout $end
$var wire 1 <" S $end
$var wire 1 =" X $end
$var wire 1 >" Y $end
$var wire 1 ?" xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[15] $end
$scope module SOMA $end
$var wire 1 @" Cin $end
$var wire 1 A" Cout $end
$var wire 1 B" S $end
$var wire 1 C" X $end
$var wire 1 D" Y $end
$var wire 1 E" xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[16] $end
$scope module SOMA $end
$var wire 1 F" Cin $end
$var wire 1 G" Cout $end
$var wire 1 H" S $end
$var wire 1 I" X $end
$var wire 1 J" Y $end
$var wire 1 K" xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[17] $end
$scope module SOMA $end
$var wire 1 L" Cin $end
$var wire 1 M" Cout $end
$var wire 1 N" S $end
$var wire 1 O" X $end
$var wire 1 P" Y $end
$var wire 1 Q" xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[18] $end
$scope module SOMA $end
$var wire 1 R" Cin $end
$var wire 1 S" Cout $end
$var wire 1 T" S $end
$var wire 1 U" X $end
$var wire 1 V" Y $end
$var wire 1 W" xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[19] $end
$scope module SOMA $end
$var wire 1 X" Cin $end
$var wire 1 Y" Cout $end
$var wire 1 Z" S $end
$var wire 1 [" X $end
$var wire 1 \" Y $end
$var wire 1 ]" xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[20] $end
$scope module SOMA $end
$var wire 1 ^" Cin $end
$var wire 1 _" Cout $end
$var wire 1 `" S $end
$var wire 1 a" X $end
$var wire 1 b" Y $end
$var wire 1 c" xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[21] $end
$scope module SOMA $end
$var wire 1 d" Cin $end
$var wire 1 e" Cout $end
$var wire 1 f" S $end
$var wire 1 g" X $end
$var wire 1 h" Y $end
$var wire 1 i" xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[22] $end
$scope module SOMA $end
$var wire 1 j" Cin $end
$var wire 1 k" Cout $end
$var wire 1 l" S $end
$var wire 1 m" X $end
$var wire 1 n" Y $end
$var wire 1 o" xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[23] $end
$scope module SOMA $end
$var wire 1 p" Cin $end
$var wire 1 q" Cout $end
$var wire 1 r" S $end
$var wire 1 s" X $end
$var wire 1 t" Y $end
$var wire 1 u" xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[24] $end
$scope module SOMA $end
$var wire 1 v" Cin $end
$var wire 1 w" Cout $end
$var wire 1 x" S $end
$var wire 1 y" X $end
$var wire 1 z" Y $end
$var wire 1 {" xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[25] $end
$scope module SOMA $end
$var wire 1 |" Cin $end
$var wire 1 }" Cout $end
$var wire 1 ~" S $end
$var wire 1 !# X $end
$var wire 1 "# Y $end
$var wire 1 ## xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[26] $end
$scope module SOMA $end
$var wire 1 $# Cin $end
$var wire 1 %# Cout $end
$var wire 1 &# S $end
$var wire 1 '# X $end
$var wire 1 (# Y $end
$var wire 1 )# xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[27] $end
$scope module SOMA $end
$var wire 1 *# Cin $end
$var wire 1 +# Cout $end
$var wire 1 ,# S $end
$var wire 1 -# X $end
$var wire 1 .# Y $end
$var wire 1 /# xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[28] $end
$scope module SOMA $end
$var wire 1 0# Cin $end
$var wire 1 1# Cout $end
$var wire 1 2# S $end
$var wire 1 3# X $end
$var wire 1 4# Y $end
$var wire 1 5# xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[29] $end
$scope module SOMA $end
$var wire 1 6# Cin $end
$var wire 1 7# Cout $end
$var wire 1 8# S $end
$var wire 1 9# X $end
$var wire 1 :# Y $end
$var wire 1 ;# xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[30] $end
$scope module SOMA $end
$var wire 1 <# Cin $end
$var wire 1 =# Cout $end
$var wire 1 ># S $end
$var wire 1 ?# X $end
$var wire 1 @# Y $end
$var wire 1 A# xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[31] $end
$scope module SOMA $end
$var wire 1 B# Cin $end
$var wire 1 C# Cout $end
$var wire 1 D# S $end
$var wire 1 E# X $end
$var wire 1 F# Y $end
$var wire 1 G# xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[32] $end
$scope module SOMA $end
$var wire 1 H# Cin $end
$var wire 1 I# Cout $end
$var wire 1 J# S $end
$var wire 1 K# X $end
$var wire 1 L# Y $end
$var wire 1 M# xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[33] $end
$scope module SOMA $end
$var wire 1 N# Cin $end
$var wire 1 O# Cout $end
$var wire 1 P# S $end
$var wire 1 Q# X $end
$var wire 1 R# Y $end
$var wire 1 S# xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[34] $end
$scope module SOMA $end
$var wire 1 T# Cin $end
$var wire 1 U# Cout $end
$var wire 1 V# S $end
$var wire 1 W# X $end
$var wire 1 X# Y $end
$var wire 1 Y# xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[35] $end
$scope module SOMA $end
$var wire 1 Z# Cin $end
$var wire 1 [# Cout $end
$var wire 1 \# S $end
$var wire 1 ]# X $end
$var wire 1 ^# Y $end
$var wire 1 _# xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[36] $end
$scope module SOMA $end
$var wire 1 `# Cin $end
$var wire 1 a# Cout $end
$var wire 1 b# S $end
$var wire 1 c# X $end
$var wire 1 d# Y $end
$var wire 1 e# xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[37] $end
$scope module SOMA $end
$var wire 1 f# Cin $end
$var wire 1 g# Cout $end
$var wire 1 h# S $end
$var wire 1 i# X $end
$var wire 1 j# Y $end
$var wire 1 k# xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[38] $end
$scope module SOMA $end
$var wire 1 l# Cin $end
$var wire 1 m# Cout $end
$var wire 1 n# S $end
$var wire 1 o# X $end
$var wire 1 p# Y $end
$var wire 1 q# xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[39] $end
$scope module SOMA $end
$var wire 1 r# Cin $end
$var wire 1 s# Cout $end
$var wire 1 t# S $end
$var wire 1 u# X $end
$var wire 1 v# Y $end
$var wire 1 w# xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[40] $end
$scope module SOMA $end
$var wire 1 x# Cin $end
$var wire 1 y# Cout $end
$var wire 1 z# S $end
$var wire 1 {# X $end
$var wire 1 |# Y $end
$var wire 1 }# xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[41] $end
$scope module SOMA $end
$var wire 1 ~# Cin $end
$var wire 1 !$ Cout $end
$var wire 1 "$ S $end
$var wire 1 #$ X $end
$var wire 1 $$ Y $end
$var wire 1 %$ xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[42] $end
$scope module SOMA $end
$var wire 1 &$ Cin $end
$var wire 1 '$ Cout $end
$var wire 1 ($ S $end
$var wire 1 )$ X $end
$var wire 1 *$ Y $end
$var wire 1 +$ xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[43] $end
$scope module SOMA $end
$var wire 1 ,$ Cin $end
$var wire 1 -$ Cout $end
$var wire 1 .$ S $end
$var wire 1 /$ X $end
$var wire 1 0$ Y $end
$var wire 1 1$ xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[44] $end
$scope module SOMA $end
$var wire 1 2$ Cin $end
$var wire 1 3$ Cout $end
$var wire 1 4$ S $end
$var wire 1 5$ X $end
$var wire 1 6$ Y $end
$var wire 1 7$ xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[45] $end
$scope module SOMA $end
$var wire 1 8$ Cin $end
$var wire 1 9$ Cout $end
$var wire 1 :$ S $end
$var wire 1 ;$ X $end
$var wire 1 <$ Y $end
$var wire 1 =$ xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[46] $end
$scope module SOMA $end
$var wire 1 >$ Cin $end
$var wire 1 ?$ Cout $end
$var wire 1 @$ S $end
$var wire 1 A$ X $end
$var wire 1 B$ Y $end
$var wire 1 C$ xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[47] $end
$scope module SOMA $end
$var wire 1 D$ Cin $end
$var wire 1 E$ Cout $end
$var wire 1 F$ S $end
$var wire 1 G$ X $end
$var wire 1 H$ Y $end
$var wire 1 I$ xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[48] $end
$scope module SOMA $end
$var wire 1 J$ Cin $end
$var wire 1 K$ Cout $end
$var wire 1 L$ S $end
$var wire 1 M$ X $end
$var wire 1 N$ Y $end
$var wire 1 O$ xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[49] $end
$scope module SOMA $end
$var wire 1 P$ Cin $end
$var wire 1 Q$ Cout $end
$var wire 1 R$ S $end
$var wire 1 S$ X $end
$var wire 1 T$ Y $end
$var wire 1 U$ xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[50] $end
$scope module SOMA $end
$var wire 1 V$ Cin $end
$var wire 1 W$ Cout $end
$var wire 1 X$ S $end
$var wire 1 Y$ X $end
$var wire 1 Z$ Y $end
$var wire 1 [$ xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[51] $end
$scope module SOMA $end
$var wire 1 \$ Cin $end
$var wire 1 ]$ Cout $end
$var wire 1 ^$ S $end
$var wire 1 _$ X $end
$var wire 1 `$ Y $end
$var wire 1 a$ xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[52] $end
$scope module SOMA $end
$var wire 1 b$ Cin $end
$var wire 1 c$ Cout $end
$var wire 1 d$ S $end
$var wire 1 e$ X $end
$var wire 1 f$ Y $end
$var wire 1 g$ xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[53] $end
$scope module SOMA $end
$var wire 1 h$ Cin $end
$var wire 1 i$ Cout $end
$var wire 1 j$ S $end
$var wire 1 k$ X $end
$var wire 1 l$ Y $end
$var wire 1 m$ xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[54] $end
$scope module SOMA $end
$var wire 1 n$ Cin $end
$var wire 1 o$ Cout $end
$var wire 1 p$ S $end
$var wire 1 q$ X $end
$var wire 1 r$ Y $end
$var wire 1 s$ xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[55] $end
$scope module SOMA $end
$var wire 1 t$ Cin $end
$var wire 1 u$ Cout $end
$var wire 1 v$ S $end
$var wire 1 w$ X $end
$var wire 1 x$ Y $end
$var wire 1 y$ xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[56] $end
$scope module SOMA $end
$var wire 1 z$ Cin $end
$var wire 1 {$ Cout $end
$var wire 1 |$ S $end
$var wire 1 }$ X $end
$var wire 1 ~$ Y $end
$var wire 1 !% xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[57] $end
$scope module SOMA $end
$var wire 1 "% Cin $end
$var wire 1 #% Cout $end
$var wire 1 $% S $end
$var wire 1 %% X $end
$var wire 1 &% Y $end
$var wire 1 '% xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[58] $end
$scope module SOMA $end
$var wire 1 (% Cin $end
$var wire 1 )% Cout $end
$var wire 1 *% S $end
$var wire 1 +% X $end
$var wire 1 ,% Y $end
$var wire 1 -% xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[59] $end
$scope module SOMA $end
$var wire 1 .% Cin $end
$var wire 1 /% Cout $end
$var wire 1 0% S $end
$var wire 1 1% X $end
$var wire 1 2% Y $end
$var wire 1 3% xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[60] $end
$scope module SOMA $end
$var wire 1 4% Cin $end
$var wire 1 5% Cout $end
$var wire 1 6% S $end
$var wire 1 7% X $end
$var wire 1 8% Y $end
$var wire 1 9% xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[61] $end
$scope module SOMA $end
$var wire 1 :% Cin $end
$var wire 1 ;% Cout $end
$var wire 1 <% S $end
$var wire 1 =% X $end
$var wire 1 >% Y $end
$var wire 1 ?% xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[62] $end
$scope module SOMA $end
$var wire 1 @% Cin $end
$var wire 1 A% Cout $end
$var wire 1 B% S $end
$var wire 1 C% X $end
$var wire 1 D% Y $end
$var wire 1 E% xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[63] $end
$scope module SOMA $end
$var wire 1 F% Cin $end
$var wire 1 G% Cout $end
$var wire 1 H% S $end
$var wire 1 I% X $end
$var wire 1 J% Y $end
$var wire 1 K% xor1 $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope module mem $end
$var wire 5 L% ADDR [4:0] $end
$var wire 1 ! CLK $end
$var wire 64 M% D_out [63:0] $end
$var wire 1 $ WE $end
$var wire 64 N% D_in [63:0] $end
$upscope $end
$scope module regfile $end
$var wire 1 ! CLK $end
$var wire 64 O% Da [63:0] $end
$var wire 64 P% Db [63:0] $end
$var wire 64 Q% Din [63:0] $end
$var wire 5 R% Ra [4:0] $end
$var wire 5 S% Rb [4:0] $end
$var wire 5 T% Rw [4:0] $end
$var wire 1 % WE $end
$var wire 32 U% loaders [31:0] $end
$scope begin genblk1[1] $end
$scope module xN $end
$var wire 1 ! CLK $end
$var wire 64 V% IN [63:0] $end
$var wire 1 W% LOAD $end
$var reg 64 X% OUT [63:0] $end
$upscope $end
$upscope $end
$scope begin genblk1[2] $end
$scope module xN $end
$var wire 1 ! CLK $end
$var wire 64 Y% IN [63:0] $end
$var wire 1 Z% LOAD $end
$var reg 64 [% OUT [63:0] $end
$upscope $end
$upscope $end
$scope begin genblk1[3] $end
$scope module xN $end
$var wire 1 ! CLK $end
$var wire 64 \% IN [63:0] $end
$var wire 1 ]% LOAD $end
$var reg 64 ^% OUT [63:0] $end
$upscope $end
$upscope $end
$scope begin genblk1[4] $end
$scope module xN $end
$var wire 1 ! CLK $end
$var wire 64 _% IN [63:0] $end
$var wire 1 `% LOAD $end
$var reg 64 a% OUT [63:0] $end
$upscope $end
$upscope $end
$scope begin genblk1[5] $end
$scope module xN $end
$var wire 1 ! CLK $end
$var wire 64 b% IN [63:0] $end
$var wire 1 c% LOAD $end
$var reg 64 d% OUT [63:0] $end
$upscope $end
$upscope $end
$scope begin genblk1[6] $end
$scope module xN $end
$var wire 1 ! CLK $end
$var wire 64 e% IN [63:0] $end
$var wire 1 f% LOAD $end
$var reg 64 g% OUT [63:0] $end
$upscope $end
$upscope $end
$scope begin genblk1[7] $end
$scope module xN $end
$var wire 1 ! CLK $end
$var wire 64 h% IN [63:0] $end
$var wire 1 i% LOAD $end
$var reg 64 j% OUT [63:0] $end
$upscope $end
$upscope $end
$scope begin genblk1[8] $end
$scope module xN $end
$var wire 1 ! CLK $end
$var wire 64 k% IN [63:0] $end
$var wire 1 l% LOAD $end
$var reg 64 m% OUT [63:0] $end
$upscope $end
$upscope $end
$scope begin genblk1[9] $end
$scope module xN $end
$var wire 1 ! CLK $end
$var wire 64 n% IN [63:0] $end
$var wire 1 o% LOAD $end
$var reg 64 p% OUT [63:0] $end
$upscope $end
$upscope $end
$scope begin genblk1[10] $end
$scope module xN $end
$var wire 1 ! CLK $end
$var wire 64 q% IN [63:0] $end
$var wire 1 r% LOAD $end
$var reg 64 s% OUT [63:0] $end
$upscope $end
$upscope $end
$scope begin genblk1[11] $end
$scope module xN $end
$var wire 1 ! CLK $end
$var wire 64 t% IN [63:0] $end
$var wire 1 u% LOAD $end
$var reg 64 v% OUT [63:0] $end
$upscope $end
$upscope $end
$scope begin genblk1[12] $end
$scope module xN $end
$var wire 1 ! CLK $end
$var wire 64 w% IN [63:0] $end
$var wire 1 x% LOAD $end
$var reg 64 y% OUT [63:0] $end
$upscope $end
$upscope $end
$scope begin genblk1[13] $end
$scope module xN $end
$var wire 1 ! CLK $end
$var wire 64 z% IN [63:0] $end
$var wire 1 {% LOAD $end
$var reg 64 |% OUT [63:0] $end
$upscope $end
$upscope $end
$scope begin genblk1[14] $end
$scope module xN $end
$var wire 1 ! CLK $end
$var wire 64 }% IN [63:0] $end
$var wire 1 ~% LOAD $end
$var reg 64 !& OUT [63:0] $end
$upscope $end
$upscope $end
$scope begin genblk1[15] $end
$scope module xN $end
$var wire 1 ! CLK $end
$var wire 64 "& IN [63:0] $end
$var wire 1 #& LOAD $end
$var reg 64 $& OUT [63:0] $end
$upscope $end
$upscope $end
$scope begin genblk1[16] $end
$scope module xN $end
$var wire 1 ! CLK $end
$var wire 64 %& IN [63:0] $end
$var wire 1 && LOAD $end
$var reg 64 '& OUT [63:0] $end
$upscope $end
$upscope $end
$scope begin genblk1[17] $end
$scope module xN $end
$var wire 1 ! CLK $end
$var wire 64 (& IN [63:0] $end
$var wire 1 )& LOAD $end
$var reg 64 *& OUT [63:0] $end
$upscope $end
$upscope $end
$scope begin genblk1[18] $end
$scope module xN $end
$var wire 1 ! CLK $end
$var wire 64 +& IN [63:0] $end
$var wire 1 ,& LOAD $end
$var reg 64 -& OUT [63:0] $end
$upscope $end
$upscope $end
$scope begin genblk1[19] $end
$scope module xN $end
$var wire 1 ! CLK $end
$var wire 64 .& IN [63:0] $end
$var wire 1 /& LOAD $end
$var reg 64 0& OUT [63:0] $end
$upscope $end
$upscope $end
$scope begin genblk1[20] $end
$scope module xN $end
$var wire 1 ! CLK $end
$var wire 64 1& IN [63:0] $end
$var wire 1 2& LOAD $end
$var reg 64 3& OUT [63:0] $end
$upscope $end
$upscope $end
$scope begin genblk1[21] $end
$scope module xN $end
$var wire 1 ! CLK $end
$var wire 64 4& IN [63:0] $end
$var wire 1 5& LOAD $end
$var reg 64 6& OUT [63:0] $end
$upscope $end
$upscope $end
$scope begin genblk1[22] $end
$scope module xN $end
$var wire 1 ! CLK $end
$var wire 64 7& IN [63:0] $end
$var wire 1 8& LOAD $end
$var reg 64 9& OUT [63:0] $end
$upscope $end
$upscope $end
$scope begin genblk1[23] $end
$scope module xN $end
$var wire 1 ! CLK $end
$var wire 64 :& IN [63:0] $end
$var wire 1 ;& LOAD $end
$var reg 64 <& OUT [63:0] $end
$upscope $end
$upscope $end
$scope begin genblk1[24] $end
$scope module xN $end
$var wire 1 ! CLK $end
$var wire 64 =& IN [63:0] $end
$var wire 1 >& LOAD $end
$var reg 64 ?& OUT [63:0] $end
$upscope $end
$upscope $end
$scope begin genblk1[25] $end
$scope module xN $end
$var wire 1 ! CLK $end
$var wire 64 @& IN [63:0] $end
$var wire 1 A& LOAD $end
$var reg 64 B& OUT [63:0] $end
$upscope $end
$upscope $end
$scope begin genblk1[26] $end
$scope module xN $end
$var wire 1 ! CLK $end
$var wire 64 C& IN [63:0] $end
$var wire 1 D& LOAD $end
$var reg 64 E& OUT [63:0] $end
$upscope $end
$upscope $end
$scope begin genblk1[27] $end
$scope module xN $end
$var wire 1 ! CLK $end
$var wire 64 F& IN [63:0] $end
$var wire 1 G& LOAD $end
$var reg 64 H& OUT [63:0] $end
$upscope $end
$upscope $end
$scope begin genblk1[28] $end
$scope module xN $end
$var wire 1 ! CLK $end
$var wire 64 I& IN [63:0] $end
$var wire 1 J& LOAD $end
$var reg 64 K& OUT [63:0] $end
$upscope $end
$upscope $end
$scope begin genblk1[29] $end
$scope module xN $end
$var wire 1 ! CLK $end
$var wire 64 L& IN [63:0] $end
$var wire 1 M& LOAD $end
$var reg 64 N& OUT [63:0] $end
$upscope $end
$upscope $end
$scope begin genblk1[30] $end
$scope module xN $end
$var wire 1 ! CLK $end
$var wire 64 O& IN [63:0] $end
$var wire 1 P& LOAD $end
$var reg 64 Q& OUT [63:0] $end
$upscope $end
$upscope $end
$scope begin genblk1[31] $end
$scope module xN $end
$var wire 1 ! CLK $end
$var wire 64 R& IN [63:0] $end
$var wire 1 S& LOAD $end
$var reg 64 T& OUT [63:0] $end
$upscope $end
$upscope $end
$scope module LOAD_DECODER $end
$var wire 1 % EN $end
$var wire 5 U& IN [4:0] $end
$var wire 32 V& OUT [31:0] $end
$var wire 4 W& EN1 [3:0] $end
$scope module DEC2_4 $end
$var wire 1 % EN $end
$var wire 2 X& IN [1:0] $end
$var wire 4 Y& OUT [3:0] $end
$upscope $end
$scope module DEC3_8__1 $end
$var wire 1 Z& EN $end
$var wire 3 [& IN [2:0] $end
$var wire 8 \& OUT [7:0] $end
$upscope $end
$scope module DEC3_8__2 $end
$var wire 1 ]& EN $end
$var wire 3 ^& IN [2:0] $end
$var wire 8 _& OUT [7:0] $end
$upscope $end
$scope module DEC3_8__3 $end
$var wire 1 `& EN $end
$var wire 3 a& IN [2:0] $end
$var wire 8 b& OUT [7:0] $end
$upscope $end
$scope module DEC3_8__4 $end
$var wire 1 c& EN $end
$var wire 3 d& IN [2:0] $end
$var wire 8 e& OUT [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope module IM $end
$var wire 32 f& OUTPUT [31:0] $end
$var wire 64 g& ADDR [63:0] $end
$upscope $end
$scope module IR $end
$var wire 1 ! clk $end
$var wire 32 h& in [31:0] $end
$var wire 32 i& out [31:0] $end
$scope module IR $end
$var wire 1 ! CLK $end
$var wire 32 j& IN [31:0] $end
$var wire 1 k& LOAD $end
$var reg 32 l& OUT [31:0] $end
$upscope $end
$upscope $end
$scope module PC $end
$var wire 1 ! CLK $end
$var wire 1 ( LOAD $end
$var wire 1 & RST $end
$var wire 12 m& immediate [11:0] $end
$var wire 64 n& pc_next [63:0] $end
$var wire 1 o& pc_next_sel $end
$var wire 64 p& next [63:0] $end
$var wire 64 q& addr [63:0] $end
$scope module PC $end
$var wire 1 ! CLK $end
$var wire 1 ( LOAD $end
$var wire 1 & RST $end
$var wire 64 r& IN [63:0] $end
$var reg 64 s& OUT [63:0] $end
$upscope $end
$scope module adder $end
$var wire 1 t& Cin $end
$var wire 1 u& Cout $end
$var wire 64 v& X [63:0] $end
$var wire 64 w& Y [63:0] $end
$var wire 1 x& cout $end
$var wire 65 y& cins [64:0] $end
$var wire 64 z& S [63:0] $end
$scope begin genblk1[0] $end
$scope module SOMA $end
$var wire 1 {& Cin $end
$var wire 1 |& Cout $end
$var wire 1 }& S $end
$var wire 1 ~& X $end
$var wire 1 !' Y $end
$var wire 1 "' xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[1] $end
$scope module SOMA $end
$var wire 1 #' Cin $end
$var wire 1 $' Cout $end
$var wire 1 %' S $end
$var wire 1 &' X $end
$var wire 1 '' Y $end
$var wire 1 (' xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[2] $end
$scope module SOMA $end
$var wire 1 )' Cin $end
$var wire 1 *' Cout $end
$var wire 1 +' S $end
$var wire 1 ,' X $end
$var wire 1 -' Y $end
$var wire 1 .' xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[3] $end
$scope module SOMA $end
$var wire 1 /' Cin $end
$var wire 1 0' Cout $end
$var wire 1 1' S $end
$var wire 1 2' X $end
$var wire 1 3' Y $end
$var wire 1 4' xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[4] $end
$scope module SOMA $end
$var wire 1 5' Cin $end
$var wire 1 6' Cout $end
$var wire 1 7' S $end
$var wire 1 8' X $end
$var wire 1 9' Y $end
$var wire 1 :' xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[5] $end
$scope module SOMA $end
$var wire 1 ;' Cin $end
$var wire 1 <' Cout $end
$var wire 1 =' S $end
$var wire 1 >' X $end
$var wire 1 ?' Y $end
$var wire 1 @' xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[6] $end
$scope module SOMA $end
$var wire 1 A' Cin $end
$var wire 1 B' Cout $end
$var wire 1 C' S $end
$var wire 1 D' X $end
$var wire 1 E' Y $end
$var wire 1 F' xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[7] $end
$scope module SOMA $end
$var wire 1 G' Cin $end
$var wire 1 H' Cout $end
$var wire 1 I' S $end
$var wire 1 J' X $end
$var wire 1 K' Y $end
$var wire 1 L' xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[8] $end
$scope module SOMA $end
$var wire 1 M' Cin $end
$var wire 1 N' Cout $end
$var wire 1 O' S $end
$var wire 1 P' X $end
$var wire 1 Q' Y $end
$var wire 1 R' xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[9] $end
$scope module SOMA $end
$var wire 1 S' Cin $end
$var wire 1 T' Cout $end
$var wire 1 U' S $end
$var wire 1 V' X $end
$var wire 1 W' Y $end
$var wire 1 X' xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[10] $end
$scope module SOMA $end
$var wire 1 Y' Cin $end
$var wire 1 Z' Cout $end
$var wire 1 [' S $end
$var wire 1 \' X $end
$var wire 1 ]' Y $end
$var wire 1 ^' xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[11] $end
$scope module SOMA $end
$var wire 1 _' Cin $end
$var wire 1 `' Cout $end
$var wire 1 a' S $end
$var wire 1 b' X $end
$var wire 1 c' Y $end
$var wire 1 d' xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[12] $end
$scope module SOMA $end
$var wire 1 e' Cin $end
$var wire 1 f' Cout $end
$var wire 1 g' S $end
$var wire 1 h' X $end
$var wire 1 i' Y $end
$var wire 1 j' xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[13] $end
$scope module SOMA $end
$var wire 1 k' Cin $end
$var wire 1 l' Cout $end
$var wire 1 m' S $end
$var wire 1 n' X $end
$var wire 1 o' Y $end
$var wire 1 p' xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[14] $end
$scope module SOMA $end
$var wire 1 q' Cin $end
$var wire 1 r' Cout $end
$var wire 1 s' S $end
$var wire 1 t' X $end
$var wire 1 u' Y $end
$var wire 1 v' xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[15] $end
$scope module SOMA $end
$var wire 1 w' Cin $end
$var wire 1 x' Cout $end
$var wire 1 y' S $end
$var wire 1 z' X $end
$var wire 1 {' Y $end
$var wire 1 |' xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[16] $end
$scope module SOMA $end
$var wire 1 }' Cin $end
$var wire 1 ~' Cout $end
$var wire 1 !( S $end
$var wire 1 "( X $end
$var wire 1 #( Y $end
$var wire 1 $( xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[17] $end
$scope module SOMA $end
$var wire 1 %( Cin $end
$var wire 1 &( Cout $end
$var wire 1 '( S $end
$var wire 1 (( X $end
$var wire 1 )( Y $end
$var wire 1 *( xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[18] $end
$scope module SOMA $end
$var wire 1 +( Cin $end
$var wire 1 ,( Cout $end
$var wire 1 -( S $end
$var wire 1 .( X $end
$var wire 1 /( Y $end
$var wire 1 0( xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[19] $end
$scope module SOMA $end
$var wire 1 1( Cin $end
$var wire 1 2( Cout $end
$var wire 1 3( S $end
$var wire 1 4( X $end
$var wire 1 5( Y $end
$var wire 1 6( xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[20] $end
$scope module SOMA $end
$var wire 1 7( Cin $end
$var wire 1 8( Cout $end
$var wire 1 9( S $end
$var wire 1 :( X $end
$var wire 1 ;( Y $end
$var wire 1 <( xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[21] $end
$scope module SOMA $end
$var wire 1 =( Cin $end
$var wire 1 >( Cout $end
$var wire 1 ?( S $end
$var wire 1 @( X $end
$var wire 1 A( Y $end
$var wire 1 B( xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[22] $end
$scope module SOMA $end
$var wire 1 C( Cin $end
$var wire 1 D( Cout $end
$var wire 1 E( S $end
$var wire 1 F( X $end
$var wire 1 G( Y $end
$var wire 1 H( xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[23] $end
$scope module SOMA $end
$var wire 1 I( Cin $end
$var wire 1 J( Cout $end
$var wire 1 K( S $end
$var wire 1 L( X $end
$var wire 1 M( Y $end
$var wire 1 N( xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[24] $end
$scope module SOMA $end
$var wire 1 O( Cin $end
$var wire 1 P( Cout $end
$var wire 1 Q( S $end
$var wire 1 R( X $end
$var wire 1 S( Y $end
$var wire 1 T( xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[25] $end
$scope module SOMA $end
$var wire 1 U( Cin $end
$var wire 1 V( Cout $end
$var wire 1 W( S $end
$var wire 1 X( X $end
$var wire 1 Y( Y $end
$var wire 1 Z( xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[26] $end
$scope module SOMA $end
$var wire 1 [( Cin $end
$var wire 1 \( Cout $end
$var wire 1 ]( S $end
$var wire 1 ^( X $end
$var wire 1 _( Y $end
$var wire 1 `( xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[27] $end
$scope module SOMA $end
$var wire 1 a( Cin $end
$var wire 1 b( Cout $end
$var wire 1 c( S $end
$var wire 1 d( X $end
$var wire 1 e( Y $end
$var wire 1 f( xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[28] $end
$scope module SOMA $end
$var wire 1 g( Cin $end
$var wire 1 h( Cout $end
$var wire 1 i( S $end
$var wire 1 j( X $end
$var wire 1 k( Y $end
$var wire 1 l( xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[29] $end
$scope module SOMA $end
$var wire 1 m( Cin $end
$var wire 1 n( Cout $end
$var wire 1 o( S $end
$var wire 1 p( X $end
$var wire 1 q( Y $end
$var wire 1 r( xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[30] $end
$scope module SOMA $end
$var wire 1 s( Cin $end
$var wire 1 t( Cout $end
$var wire 1 u( S $end
$var wire 1 v( X $end
$var wire 1 w( Y $end
$var wire 1 x( xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[31] $end
$scope module SOMA $end
$var wire 1 y( Cin $end
$var wire 1 z( Cout $end
$var wire 1 {( S $end
$var wire 1 |( X $end
$var wire 1 }( Y $end
$var wire 1 ~( xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[32] $end
$scope module SOMA $end
$var wire 1 !) Cin $end
$var wire 1 ") Cout $end
$var wire 1 #) S $end
$var wire 1 $) X $end
$var wire 1 %) Y $end
$var wire 1 &) xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[33] $end
$scope module SOMA $end
$var wire 1 ') Cin $end
$var wire 1 () Cout $end
$var wire 1 )) S $end
$var wire 1 *) X $end
$var wire 1 +) Y $end
$var wire 1 ,) xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[34] $end
$scope module SOMA $end
$var wire 1 -) Cin $end
$var wire 1 .) Cout $end
$var wire 1 /) S $end
$var wire 1 0) X $end
$var wire 1 1) Y $end
$var wire 1 2) xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[35] $end
$scope module SOMA $end
$var wire 1 3) Cin $end
$var wire 1 4) Cout $end
$var wire 1 5) S $end
$var wire 1 6) X $end
$var wire 1 7) Y $end
$var wire 1 8) xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[36] $end
$scope module SOMA $end
$var wire 1 9) Cin $end
$var wire 1 :) Cout $end
$var wire 1 ;) S $end
$var wire 1 <) X $end
$var wire 1 =) Y $end
$var wire 1 >) xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[37] $end
$scope module SOMA $end
$var wire 1 ?) Cin $end
$var wire 1 @) Cout $end
$var wire 1 A) S $end
$var wire 1 B) X $end
$var wire 1 C) Y $end
$var wire 1 D) xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[38] $end
$scope module SOMA $end
$var wire 1 E) Cin $end
$var wire 1 F) Cout $end
$var wire 1 G) S $end
$var wire 1 H) X $end
$var wire 1 I) Y $end
$var wire 1 J) xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[39] $end
$scope module SOMA $end
$var wire 1 K) Cin $end
$var wire 1 L) Cout $end
$var wire 1 M) S $end
$var wire 1 N) X $end
$var wire 1 O) Y $end
$var wire 1 P) xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[40] $end
$scope module SOMA $end
$var wire 1 Q) Cin $end
$var wire 1 R) Cout $end
$var wire 1 S) S $end
$var wire 1 T) X $end
$var wire 1 U) Y $end
$var wire 1 V) xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[41] $end
$scope module SOMA $end
$var wire 1 W) Cin $end
$var wire 1 X) Cout $end
$var wire 1 Y) S $end
$var wire 1 Z) X $end
$var wire 1 [) Y $end
$var wire 1 \) xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[42] $end
$scope module SOMA $end
$var wire 1 ]) Cin $end
$var wire 1 ^) Cout $end
$var wire 1 _) S $end
$var wire 1 `) X $end
$var wire 1 a) Y $end
$var wire 1 b) xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[43] $end
$scope module SOMA $end
$var wire 1 c) Cin $end
$var wire 1 d) Cout $end
$var wire 1 e) S $end
$var wire 1 f) X $end
$var wire 1 g) Y $end
$var wire 1 h) xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[44] $end
$scope module SOMA $end
$var wire 1 i) Cin $end
$var wire 1 j) Cout $end
$var wire 1 k) S $end
$var wire 1 l) X $end
$var wire 1 m) Y $end
$var wire 1 n) xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[45] $end
$scope module SOMA $end
$var wire 1 o) Cin $end
$var wire 1 p) Cout $end
$var wire 1 q) S $end
$var wire 1 r) X $end
$var wire 1 s) Y $end
$var wire 1 t) xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[46] $end
$scope module SOMA $end
$var wire 1 u) Cin $end
$var wire 1 v) Cout $end
$var wire 1 w) S $end
$var wire 1 x) X $end
$var wire 1 y) Y $end
$var wire 1 z) xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[47] $end
$scope module SOMA $end
$var wire 1 {) Cin $end
$var wire 1 |) Cout $end
$var wire 1 }) S $end
$var wire 1 ~) X $end
$var wire 1 !* Y $end
$var wire 1 "* xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[48] $end
$scope module SOMA $end
$var wire 1 #* Cin $end
$var wire 1 $* Cout $end
$var wire 1 %* S $end
$var wire 1 &* X $end
$var wire 1 '* Y $end
$var wire 1 (* xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[49] $end
$scope module SOMA $end
$var wire 1 )* Cin $end
$var wire 1 ** Cout $end
$var wire 1 +* S $end
$var wire 1 ,* X $end
$var wire 1 -* Y $end
$var wire 1 .* xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[50] $end
$scope module SOMA $end
$var wire 1 /* Cin $end
$var wire 1 0* Cout $end
$var wire 1 1* S $end
$var wire 1 2* X $end
$var wire 1 3* Y $end
$var wire 1 4* xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[51] $end
$scope module SOMA $end
$var wire 1 5* Cin $end
$var wire 1 6* Cout $end
$var wire 1 7* S $end
$var wire 1 8* X $end
$var wire 1 9* Y $end
$var wire 1 :* xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[52] $end
$scope module SOMA $end
$var wire 1 ;* Cin $end
$var wire 1 <* Cout $end
$var wire 1 =* S $end
$var wire 1 >* X $end
$var wire 1 ?* Y $end
$var wire 1 @* xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[53] $end
$scope module SOMA $end
$var wire 1 A* Cin $end
$var wire 1 B* Cout $end
$var wire 1 C* S $end
$var wire 1 D* X $end
$var wire 1 E* Y $end
$var wire 1 F* xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[54] $end
$scope module SOMA $end
$var wire 1 G* Cin $end
$var wire 1 H* Cout $end
$var wire 1 I* S $end
$var wire 1 J* X $end
$var wire 1 K* Y $end
$var wire 1 L* xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[55] $end
$scope module SOMA $end
$var wire 1 M* Cin $end
$var wire 1 N* Cout $end
$var wire 1 O* S $end
$var wire 1 P* X $end
$var wire 1 Q* Y $end
$var wire 1 R* xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[56] $end
$scope module SOMA $end
$var wire 1 S* Cin $end
$var wire 1 T* Cout $end
$var wire 1 U* S $end
$var wire 1 V* X $end
$var wire 1 W* Y $end
$var wire 1 X* xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[57] $end
$scope module SOMA $end
$var wire 1 Y* Cin $end
$var wire 1 Z* Cout $end
$var wire 1 [* S $end
$var wire 1 \* X $end
$var wire 1 ]* Y $end
$var wire 1 ^* xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[58] $end
$scope module SOMA $end
$var wire 1 _* Cin $end
$var wire 1 `* Cout $end
$var wire 1 a* S $end
$var wire 1 b* X $end
$var wire 1 c* Y $end
$var wire 1 d* xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[59] $end
$scope module SOMA $end
$var wire 1 e* Cin $end
$var wire 1 f* Cout $end
$var wire 1 g* S $end
$var wire 1 h* X $end
$var wire 1 i* Y $end
$var wire 1 j* xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[60] $end
$scope module SOMA $end
$var wire 1 k* Cin $end
$var wire 1 l* Cout $end
$var wire 1 m* S $end
$var wire 1 n* X $end
$var wire 1 o* Y $end
$var wire 1 p* xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[61] $end
$scope module SOMA $end
$var wire 1 q* Cin $end
$var wire 1 r* Cout $end
$var wire 1 s* S $end
$var wire 1 t* X $end
$var wire 1 u* Y $end
$var wire 1 v* xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[62] $end
$scope module SOMA $end
$var wire 1 w* Cin $end
$var wire 1 x* Cout $end
$var wire 1 y* S $end
$var wire 1 z* X $end
$var wire 1 {* Y $end
$var wire 1 |* xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[63] $end
$scope module SOMA $end
$var wire 1 }* Cin $end
$var wire 1 ~* Cout $end
$var wire 1 !+ S $end
$var wire 1 "+ X $end
$var wire 1 #+ Y $end
$var wire 1 $+ xor1 $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
0$+
0#+
0"+
0!+
0~*
0}*
0|*
0{*
0z*
0y*
0x*
0w*
0v*
0u*
0t*
0s*
0r*
0q*
0p*
0o*
0n*
0m*
0l*
0k*
0j*
0i*
0h*
0g*
0f*
0e*
0d*
0c*
0b*
0a*
0`*
0_*
0^*
0]*
0\*
0[*
0Z*
0Y*
0X*
0W*
0V*
0U*
0T*
0S*
0R*
0Q*
0P*
0O*
0N*
0M*
0L*
0K*
0J*
0I*
0H*
0G*
0F*
0E*
0D*
0C*
0B*
0A*
0@*
0?*
0>*
0=*
0<*
0;*
0:*
09*
08*
07*
06*
05*
04*
03*
02*
01*
00*
0/*
0.*
0-*
0,*
0+*
0**
0)*
0(*
0'*
0&*
0%*
0$*
0#*
0"*
0!*
0~)
0})
0|)
0{)
0z)
0y)
0x)
0w)
0v)
0u)
0t)
0s)
0r)
0q)
0p)
0o)
0n)
0m)
0l)
0k)
0j)
0i)
0h)
0g)
0f)
0e)
0d)
0c)
0b)
0a)
0`)
0_)
0^)
0])
0\)
0[)
0Z)
0Y)
0X)
0W)
0V)
0U)
0T)
0S)
0R)
0Q)
0P)
0O)
0N)
0M)
0L)
0K)
0J)
0I)
0H)
0G)
0F)
0E)
0D)
0C)
0B)
0A)
0@)
0?)
0>)
0=)
0<)
0;)
0:)
09)
08)
07)
06)
05)
04)
03)
02)
01)
00)
0/)
0.)
0-)
0,)
0+)
0*)
0))
0()
0')
0&)
0%)
0$)
0#)
0")
0!)
0~(
0}(
0|(
0{(
0z(
0y(
0x(
0w(
0v(
0u(
0t(
0s(
0r(
0q(
0p(
0o(
0n(
0m(
0l(
0k(
0j(
0i(
0h(
0g(
0f(
0e(
0d(
0c(
0b(
0a(
0`(
0_(
0^(
0](
0\(
0[(
0Z(
0Y(
0X(
0W(
0V(
0U(
0T(
0S(
0R(
0Q(
0P(
0O(
0N(
0M(
0L(
0K(
0J(
0I(
0H(
0G(
0F(
0E(
0D(
0C(
0B(
0A(
0@(
0?(
0>(
0=(
0<(
0;(
0:(
09(
08(
07(
06(
05(
04(
03(
02(
01(
00(
0/(
0.(
0-(
0,(
0+(
0*(
0)(
0((
0'(
0&(
0%(
0$(
0#(
0"(
0!(
0~'
0}'
0|'
0{'
0z'
0y'
0x'
0w'
0v'
0u'
0t'
0s'
0r'
0q'
0p'
0o'
0n'
0m'
0l'
0k'
0j'
0i'
0h'
0g'
0f'
0e'
0d'
0c'
0b'
0a'
0`'
0_'
0^'
0]'
0\'
0['
0Z'
0Y'
0X'
0W'
0V'
0U'
0T'
0S'
0R'
0Q'
0P'
0O'
0N'
0M'
0L'
0K'
0J'
0I'
0H'
0G'
0F'
0E'
0D'
0C'
0B'
0A'
0@'
0?'
0>'
0='
0<'
0;'
0:'
09'
08'
07'
06'
05'
04'
03'
02'
01'
00'
0/'
0.'
0-'
0,'
0+'
0*'
0)'
0('
0''
0&'
0%'
0$'
0#'
1"'
1!'
0~&
1}&
0|&
0{&
b1 z&
b0 y&
0x&
b1 w&
b0 v&
zu&
0t&
b0 s&
b1 r&
b0 q&
b1 p&
0o&
b1 n&
bx m&
bx l&
1k&
b1000000000010000010000011 j&
bx i&
b1000000000010000010000011 h&
b0 g&
b1000000000010000010000011 f&
bx e&
bx d&
xc&
bx b&
bx a&
x`&
bx _&
bx ^&
x]&
bx \&
bx [&
xZ&
bx Y&
bx X&
bx W&
bx V&
bx U&
bx T&
xS&
bx R&
bx Q&
xP&
bx O&
bx N&
xM&
bx L&
bx K&
xJ&
bx I&
bx H&
xG&
bx F&
bx E&
xD&
bx C&
bx B&
xA&
bx @&
bx ?&
x>&
bx =&
bx <&
x;&
bx :&
bx 9&
x8&
bx 7&
bx 6&
x5&
bx 4&
bx 3&
x2&
bx 1&
bx 0&
x/&
bx .&
bx -&
x,&
bx +&
bx *&
x)&
bx (&
bx '&
x&&
bx %&
bx $&
x#&
bx "&
bx !&
x~%
bx }%
bx |%
x{%
bx z%
bx y%
xx%
bx w%
bx v%
xu%
bx t%
bx s%
xr%
bx q%
bx p%
xo%
bx n%
bx m%
xl%
bx k%
bx j%
xi%
bx h%
bx g%
xf%
bx e%
bx d%
xc%
bx b%
bx a%
x`%
bx _%
bx ^%
x]%
bx \%
bx [%
xZ%
bx Y%
bx X%
xW%
bx V%
bx U%
bx T%
bx S%
bx R%
bx Q%
bx P%
bx O%
bx N%
bx M%
bx L%
xK%
xJ%
xI%
xH%
xG%
xF%
xE%
xD%
xC%
xB%
xA%
x@%
x?%
x>%
x=%
x<%
x;%
x:%
x9%
x8%
x7%
x6%
x5%
x4%
x3%
x2%
x1%
x0%
x/%
x.%
x-%
x,%
x+%
x*%
x)%
x(%
x'%
x&%
x%%
x$%
x#%
x"%
x!%
x~$
x}$
x|$
x{$
xz$
xy$
xx$
xw$
xv$
xu$
xt$
xs$
xr$
xq$
xp$
xo$
xn$
xm$
xl$
xk$
xj$
xi$
xh$
xg$
xf$
xe$
xd$
xc$
xb$
xa$
x`$
x_$
x^$
x]$
x\$
x[$
xZ$
xY$
xX$
xW$
xV$
xU$
xT$
xS$
xR$
xQ$
xP$
xO$
xN$
xM$
xL$
xK$
xJ$
xI$
xH$
xG$
xF$
xE$
xD$
xC$
xB$
xA$
x@$
x?$
x>$
x=$
x<$
x;$
x:$
x9$
x8$
x7$
x6$
x5$
x4$
x3$
x2$
x1$
x0$
x/$
x.$
x-$
x,$
x+$
x*$
x)$
x($
x'$
x&$
x%$
x$$
x#$
x"$
x!$
x~#
x}#
x|#
x{#
xz#
xy#
xx#
xw#
xv#
xu#
xt#
xs#
xr#
xq#
xp#
xo#
xn#
xm#
xl#
xk#
xj#
xi#
xh#
xg#
xf#
xe#
xd#
xc#
xb#
xa#
x`#
x_#
x^#
x]#
x\#
x[#
xZ#
xY#
xX#
xW#
xV#
xU#
xT#
xS#
xR#
xQ#
xP#
xO#
xN#
xM#
xL#
xK#
xJ#
xI#
xH#
xG#
xF#
xE#
xD#
xC#
xB#
xA#
x@#
x?#
x>#
x=#
x<#
x;#
x:#
x9#
x8#
x7#
x6#
x5#
x4#
x3#
x2#
x1#
x0#
x/#
x.#
x-#
x,#
x+#
x*#
x)#
x(#
x'#
x&#
x%#
x$#
x##
x"#
x!#
x~"
x}"
x|"
x{"
xz"
xy"
xx"
xw"
xv"
xu"
xt"
xs"
xr"
xq"
xp"
xo"
xn"
xm"
xl"
xk"
xj"
xi"
xh"
xg"
xf"
xe"
xd"
xc"
xb"
xa"
x`"
x_"
x^"
x]"
x\"
x["
xZ"
xY"
xX"
xW"
xV"
xU"
xT"
xS"
xR"
xQ"
xP"
xO"
xN"
xM"
xL"
xK"
xJ"
xI"
xH"
xG"
xF"
xE"
xD"
xC"
xB"
xA"
x@"
x?"
x>"
x="
x<"
x;"
x:"
x9"
x8"
x7"
x6"
x5"
x4"
x3"
x2"
x1"
x0"
x/"
x."
x-"
x,"
x+"
x*"
x)"
x("
x'"
x&"
x%"
x$"
x#"
x""
x!"
x~
x}
x|
x{
xz
xy
xx
xw
xv
xu
xt
xs
xr
xq
xp
xo
xn
xm
xl
xk
xj
xi
xh
xg
xf
xe
xd
xc
xb
xa
x`
x_
x^
x]
x\
x[
xZ
xY
xX
xW
xV
xU
xT
xS
xR
xQ
xP
xO
xN
xM
xL
xK
xJ
xI
xH
xG
xF
xE
xD
bx C
bx B
bx A
x@
bx ?
z>
bx =
bx <
bx ;
bx :
bx 9
bx 8
bx 7
bx 6
bx 5
bx 4
bx 3
bx 2
bx 1
bx 0
b0 /
bx .
bx -
b1000000000010000010000011 ,
bx +
bx *
bx )
1(
x'
1&
x%
x$
x#
x"
0!
$end
#5
0)&
0o%
0A&
0M&
05&
0{%
0c%
0]&
0>&
0D&
0G&
0J&
0P&
0S&
0&&
0,&
0/&
02&
08&
0;&
0l%
0r%
0u%
0x%
0~%
0#&
0Z%
0]%
0`%
0f%
0i%
0`&
0Z&
b0 \&
b0 _&
b0 b&
b0x0 U%
b0x0 V&
b0x0 e&
b0x W&
b0x Y&
b10000 0
b10000 1
b10000 m&
b0 X&
b1 [&
b1 ^&
b1 a&
b1 d&
0I%
0C%
0=%
07%
01%
0+%
0%%
0}$
0w$
0q$
0k$
0e$
0_$
0Y$
0S$
0M$
0G$
0A$
0;$
05$
0/$
0)$
0#$
0{#
0u#
0o#
0i#
0c#
0]#
0W#
0Q#
0K#
0E#
0?#
09#
03#
0-#
0'#
0!#
0y"
0s"
0m"
0g"
0a"
0["
0U"
0O"
0I"
0C"
0="
07"
01"
0+"
0%"
0}
0w
0q
0k
0e
0_
0Y
0S
0M
0G
b10000 .
b1 +
b1 2
b1 T%
b1 U&
b0 9
b0 <
b0 B
b0 O%
b0 *
b0 3
b0 R%
b10000 )
b10000 4
b10000 S%
b1000000000010000010000011 -
b1000000000010000010000011 i&
b1000000000010000010000011 l&
1!
#10
1%'
1#'
b10 p&
b10 r&
b10 z&
0}&
b10 y&
1|&
0"'
1~&
b1010100000010000100000011 ,
b1010100000010000100000011 f&
b1010100000010000100000011 h&
b1010100000010000100000011 j&
b1 /
b1 g&
b1 q&
b1 s&
b1 v&
0d
b1011011011 7
b1011011011 Q%
b1011011011 V%
b1011011011 Y%
b1011011011 \%
b1011011011 _%
b1011011011 b%
b1011011011 e%
b1011011011 h%
b1011011011 k%
b1011011011 n%
b1011011011 q%
b1011011011 t%
b1011011011 w%
b1011011011 z%
b1011011011 }%
b1011011011 "&
b1011011011 %&
b1011011011 (&
b1011011011 +&
b1011011011 .&
b1011011011 1&
b1011011011 4&
b1011011011 7&
b1011011011 :&
b1011011011 =&
b1011011011 @&
b1011011011 C&
b1011011011 F&
b1011011011 I&
b1011011011 L&
b1011011011 O&
b1011011011 R&
0b
b1011011011 :
b1011011011 M%
0]
1W%
0R
0X
1^
0j
0p
0v
0|
0$"
0*"
00"
06"
0<"
0B"
0H"
0N"
0T"
0Z"
0`"
0f"
0l"
0r"
0x"
0~"
0&#
0,#
02#
08#
0>#
0D#
0J#
0P#
0V#
0\#
0b#
0h#
0n#
0t#
0z#
0"$
0($
0.$
04$
0:$
0@$
0F$
0L$
0R$
0X$
0^$
0d$
0j$
0p$
0v$
0|$
0$%
0*%
00%
06%
0<%
0B%
0H%
b10 U%
b10 V&
b10 e&
0P
0V
0\
0h
0n
0t
0z
0""
0("
0."
04"
0:"
0@"
0F"
0L"
0R"
0X"
0^"
0d"
0j"
0p"
0v"
0|"
0$#
0*#
00#
06#
0<#
0B#
0H#
0N#
0T#
0Z#
0`#
0f#
0l#
0r#
0x#
0~#
0&$
0,$
02$
08$
0>$
0D$
0J$
0P$
0V$
0\$
0b$
0h$
0n$
0t$
0z$
0"%
0(%
0.%
04%
0:%
0@%
0F%
0@
b10000 L%
0K
0Q
0W
0c
0i
0o
0u
0{
0#"
0)"
0/"
05"
0;"
0A"
0G"
0M"
0S"
0Y"
0_"
0e"
0k"
0q"
0w"
0}"
0%#
0+#
01#
07#
0=#
0C#
0I#
0O#
0U#
0[#
0a#
0g#
0m#
0s#
0y#
0!$
0'$
0-$
03$
09$
0?$
0E$
0K$
0Q$
0W$
0]$
0c$
0i$
0o$
0u$
0{$
0#%
0)%
0/%
05%
0;%
0A%
0G%
0F
b10000 5
b10000 =
b10000 C
0L
0J
1c&
0I
0O
0U
0[
1a
0g
0m
0s
0y
0!"
0'"
0-"
03"
09"
0?"
0E"
0K"
0Q"
0W"
0]"
0c"
0i"
0o"
0u"
0{"
0##
0)#
0/#
05#
0;#
0A#
0G#
0M#
0S#
0Y#
0_#
0e#
0k#
0q#
0w#
0}#
0%$
0+$
01$
07$
0=$
0C$
0I$
0O$
0U$
0[$
0a$
0g$
0m$
0s$
0y$
0!%
0'%
0-%
03%
09%
0?%
0E%
0K%
0E
b1 W&
b1 Y&
0H
0N
0T
0Z
1`
0f
0l
0r
0x
0~
0&"
0,"
02"
08"
0>"
0D"
0J"
0P"
0V"
0\"
0b"
0h"
0n"
0t"
0z"
0"#
0(#
0.#
04#
0:#
0@#
0F#
0L#
0R#
0X#
0^#
0d#
0j#
0p#
0v#
0|#
0$$
0*$
00$
06$
0<$
0B$
0H$
0N$
0T$
0Z$
0`$
0f$
0l$
0r$
0x$
0~$
0&%
0,%
02%
08%
0>%
0D%
0J%
b10000 ?
0D
b10000 6
b10000 ;
0!
0$
1%
b0 A
0'
0"
1#
0&
#15
b100111000 7
b100111000 Q%
b100111000 V%
b100111000 Y%
b100111000 \%
b100111000 _%
b100111000 b%
b100111000 e%
b100111000 h%
b100111000 k%
b100111000 n%
b100111000 q%
b100111000 t%
b100111000 w%
b100111000 z%
b100111000 }%
b100111000 "&
b100111000 %&
b100111000 (&
b100111000 +&
b100111000 .&
b100111000 1&
b100111000 4&
b100111000 7&
b100111000 :&
b100111000 =&
b100111000 @&
b100111000 C&
b100111000 F&
b100111000 I&
b100111000 L&
b100111000 O&
b100111000 R&
b100111000 :
b100111000 M%
b10101 L%
1F
b10101 5
b10101 =
b10101 C
1R
1I
1U
1Z%
1H
1T
0W%
b10101 ?
b100 U%
b100 V&
b100 e&
b10101 6
b10101 ;
b10101 0
b10101 1
b10101 m&
b10 [&
b10 ^&
b10 a&
b10 d&
b10101 .
b10 +
b10 2
b10 T%
b10 U&
b10101 )
b10101 4
b10101 S%
b1010100000010000100000011 -
b1010100000010000100000011 i&
b1010100000010000100000011 l&
b1011011011 X%
1!
#20
0+'
0)'
0#'
0$'
1}&
b0 y&
0|&
b11 p&
b11 r&
b11 z&
1%'
1"'
1('
0~&
1&'
b1000001000000110110011 ,
b1000001000000110110011 f&
b1000001000000110110011 h&
b1000001000000110110011 j&
b10 /
b10 g&
b10 q&
b10 s&
b10 v&
0!
#25
1P
1R
1K
0U
0Z%
0d
bx 7
bx Q%
bx V%
bx Y%
bx \%
bx _%
bx b%
bx e%
bx h%
bx k%
bx n%
bx q%
bx t%
bx w%
bx z%
bx }%
bx "&
bx %&
bx (&
bx +&
bx .&
bx 1&
bx 4&
bx 7&
bx :&
bx =&
bx @&
bx C&
bx F&
bx I&
bx L&
bx O&
bx R&
0H
1N
0T
0`
1]%
0b
bx :
bx M%
b11101 L%
0J
b10 ?
b1000 U%
b1000 V&
b1000 e&
1|
1p
1j
1^
0]
1X
0L
b1011011101 5
b1011011101 =
b1011011101 C
1F
b100 A
0E
b10 6
b10 ;
1!"
1s
1m
1a
1[
0O
1I
b10 0
b10 1
b10 m&
b11 [&
b11 ^&
b11 a&
b11 d&
1}
1q
1k
1_
1Y
1M
1G
b10 .
b11 +
b11 2
b11 T%
b11 U&
b1011011011 9
b1011011011 <
b1011011011 B
b1011011011 O%
b1 *
b1 3
b1 R%
b100111000 8
b100111000 N%
b100111000 P%
b10 )
b10 4
b10 S%
b100111000 [%
b1000001000000110110011 -
b1000001000000110110011 i&
b1000001000000110110011 l&
1!
#30
1+'
1)'
1$'
0%'
1#'
b100 p&
b100 r&
b100 z&
0}&
b110 y&
1|&
0"'
1~&
b1000000000100010000001000110011 ,
b1000000000100010000001000110011 f&
b1000000000100010000001000110011 h&
b1000000000100010000001000110011 j&
b11 /
b11 g&
b11 q&
b11 s&
b11 v&
1$"
1""
1{
0|
1z
1u
1t
1o
0p
1n
1i
0j
1h
1c
0R
0P
1\
b10011 L%
1b
1L
0K
0X
1W
1^
b11111110000 A
1]
0d
b10000010011 5
b10000010011 =
b10000010011 C
0v
1O
0[
0a
1g
1y
0N
1Z
1`
1f
1x
b100111000 ?
b10000010011 7
b10000010011 Q%
b10000010011 V%
b10000010011 Y%
b10000010011 \%
b10000010011 _%
b10000010011 b%
b10000010011 e%
b10000010011 h%
b10000010011 k%
b10000010011 n%
b10000010011 q%
b10000010011 t%
b10000010011 w%
b10000010011 z%
b10000010011 }%
b10000010011 "&
b10000010011 %&
b10000010011 (&
b10000010011 +&
b10000010011 .&
b10000010011 1&
b10000010011 4&
b10000010011 7&
b10000010011 :&
b10000010011 =&
b10000010011 @&
b10000010011 C&
b10000010011 F&
b10000010011 I&
b10000010011 L&
b10000010011 O&
b10000010011 R&
b100111000 6
b100111000 ;
0!
1"
0#
#35
1`%
1$"
1""
1z
1t
1n
1h
0]%
1{
1u
1o
1i
b11111110000 A
1c
bx :
bx M%
b10011 L%
b10000010011 7
b10000010011 Q%
b10000010011 V%
b10000010011 Y%
b10000010011 \%
b10000010011 _%
b10000010011 b%
b10000010011 e%
b10000010011 h%
b10000010011 k%
b10000010011 n%
b10000010011 q%
b10000010011 t%
b10000010011 w%
b10000010011 z%
b10000010011 }%
b10000010011 "&
b10000010011 %&
b10000010011 (&
b10000010011 +&
b10000010011 .&
b10000010011 1&
b10000010011 4&
b10000010011 7&
b10000010011 :&
b10000010011 =&
b10000010011 @&
b10000010011 C&
b10000010011 F&
b10000010011 I&
b10000010011 L&
b10000010011 O&
b10000010011 R&
b10000 U%
b10000 V&
b10000 e&
0|
0v
0p
0j
0d
1L
b10000010011 5
b10000010011 =
b10000010011 C
1F
1H
1N
0f
1l
1r
0x
1~
1!"
1y
1s
1m
1g
1O
1I
b1011011011 ?
b10000000001 0
b10000000001 1
b10000000001 m&
b100 [&
b100 ^&
b100 a&
b100 d&
0}
1w
0q
0k
1e
0M
0G
b1011011011 6
b1011011011 ;
b10000000001 .
b100 +
b100 2
b100 T%
b100 U&
b100111000 9
b100111000 <
b100111000 B
b100111000 O%
b10 *
b10 3
b10 R%
b1011011011 8
b1011011011 N%
b1011011011 P%
b1 )
b1 4
b1 S%
b1000000000100010000001000110011 -
b1000000000100010000001000110011 i&
b1000000000100010000001000110011 l&
b10000010011 ^%
1!
#40
01'
0)'
0/'
0#'
0$'
0*'
1}&
b0 y&
0|&
0%'
b101 p&
b101 r&
b101 z&
1+'
1"'
0('
1.'
0~&
0&'
1,'
b10000000010100100100011 ,
b10000000010100100100011 f&
b10000000010100100100011 h&
b10000000010100100100011 j&
b100 /
b100 g&
b100 q&
b100 s&
b100 v&
0@
0G%
0F%
0A%
0@%
0;%
0:%
05%
04%
0/%
0.%
0)%
0(%
0#%
0"%
0{$
0z$
0u$
0t$
0o$
0n$
0i$
0h$
0c$
0b$
0]$
0\$
0W$
0V$
0Q$
0P$
0K$
0J$
0E$
0D$
0?$
0>$
09$
08$
03$
02$
0-$
0,$
0'$
0&$
0!$
0~#
0y#
0x#
0s#
0r#
0m#
0l#
0g#
0f#
0a#
0`#
0[#
0Z#
0U#
0T#
0O#
0N#
0I#
0H#
0C#
0B#
0=#
0<#
07#
06#
01#
00#
0+#
0*#
0%#
0$#
0}"
0|"
0w"
0v"
0q"
0p"
0k"
0j"
0e"
0d"
0_"
0^"
0Y"
0X"
0S"
0R"
0M"
0L"
0G"
0F"
0A"
0@"
0;"
0:"
05"
04"
0/"
0."
0)"
0L
0n
0t
0""
0("
0\
0b
0i
0o
0{
0#"
1R
1X
0W
1^
0]
0d
1j
0p
0v
1|
1$"
1*"
10"
16"
1<"
1B"
1H"
1N"
1T"
1Z"
1`"
1f"
1l"
1r"
1x"
1~"
1&#
1,#
12#
18#
1>#
1D#
1J#
1P#
1V#
1\#
1b#
1h#
1n#
1t#
1z#
1"$
1($
1.$
14$
1:$
1@$
1F$
1L$
1R$
1X$
1^$
1d$
1j$
1p$
1v$
1|$
1$%
1*%
10%
16%
1<%
1B%
1H%
0J
0I
0O
1U
1[
1a
0g
0m
0s
0y
0!"
1'"
1-"
13"
19"
1?"
1E"
1K"
1Q"
1W"
1]"
1c"
1i"
1o"
1u"
1{"
1##
1)#
1/#
15#
1;#
1A#
1G#
1M#
1S#
1Y#
1_#
1e#
1k#
1q#
1w#
1}#
1%$
1+$
11$
17$
1=$
1C$
1I$
1O$
1U$
1[$
1a$
1g$
1m$
1s$
1y$
1!%
1'%
1-%
13%
19%
1?%
1E%
1K%
b11101 L%
b1111111111111111111111111111111111111111111111111111111001011101 7
b1111111111111111111111111111111111111111111111111111111001011101 Q%
b1111111111111111111111111111111111111111111111111111111001011101 V%
b1111111111111111111111111111111111111111111111111111111001011101 Y%
b1111111111111111111111111111111111111111111111111111111001011101 \%
b1111111111111111111111111111111111111111111111111111111001011101 _%
b1111111111111111111111111111111111111111111111111111111001011101 b%
b1111111111111111111111111111111111111111111111111111111001011101 e%
b1111111111111111111111111111111111111111111111111111111001011101 h%
b1111111111111111111111111111111111111111111111111111111001011101 k%
b1111111111111111111111111111111111111111111111111111111001011101 n%
b1111111111111111111111111111111111111111111111111111111001011101 q%
b1111111111111111111111111111111111111111111111111111111001011101 t%
b1111111111111111111111111111111111111111111111111111111001011101 w%
b1111111111111111111111111111111111111111111111111111111001011101 z%
b1111111111111111111111111111111111111111111111111111111001011101 }%
b1111111111111111111111111111111111111111111111111111111001011101 "&
b1111111111111111111111111111111111111111111111111111111001011101 %&
b1111111111111111111111111111111111111111111111111111111001011101 (&
b1111111111111111111111111111111111111111111111111111111001011101 +&
b1111111111111111111111111111111111111111111111111111111001011101 .&
b1111111111111111111111111111111111111111111111111111111001011101 1&
b1111111111111111111111111111111111111111111111111111111001011101 4&
b1111111111111111111111111111111111111111111111111111111001011101 7&
b1111111111111111111111111111111111111111111111111111111001011101 :&
b1111111111111111111111111111111111111111111111111111111001011101 =&
b1111111111111111111111111111111111111111111111111111111001011101 @&
b1111111111111111111111111111111111111111111111111111111001011101 C&
b1111111111111111111111111111111111111111111111111111111001011101 F&
b1111111111111111111111111111111111111111111111111111111001011101 I&
b1111111111111111111111111111111111111111111111111111111001011101 L&
b1111111111111111111111111111111111111111111111111111111001011101 O&
b1111111111111111111111111111111111111111111111111111111001011101 R&
0E
0H
0N
1T
0Z
0`
1f
0l
0r
1x
0~
1&"
1,"
12"
18"
1>"
1D"
1J"
1P"
1V"
1\"
1b"
1h"
1n"
1t"
1z"
1"#
1(#
1.#
14#
1:#
1@#
1F#
1L#
1R#
1X#
1^#
1d#
1j#
1p#
1v#
1|#
1$$
1*$
10$
16$
1<$
1B$
1H$
1N$
1T$
1Z$
1`$
1f$
1l$
1r$
1x$
1~$
1&%
1,%
12%
18%
1>%
1D%
1J%
b1111111111111111111111111111111111111111111111111111111001011101 5
b1111111111111111111111111111111111111111111111111111111001011101 =
b1111111111111111111111111111111111111111111111111111111001011101 C
1F
b1111111111111111111111111111111111111111111111111111110100100100 ?
1D
0!
b1001000001 A
1'
#45
1,&
b100 _&
0Z%
0c&
0`%
1]&
0f%
0|
0j
1L
0R
1p
0$"
0*"
00"
06"
0<"
0B"
0H"
0N"
0T"
0Z"
0`"
0f"
0l"
0r"
0x"
0~"
0&#
0,#
02#
08#
0>#
0D#
0J#
0P#
0V#
0\#
0b#
0h#
0n#
0t#
0z#
0"$
0($
0.$
04$
0:$
0@$
0F$
0L$
0R$
0X$
0^$
0d$
0j$
0p$
0v$
0|$
0$%
0*%
00%
06%
0<%
0B%
0H%
b100 W&
b100 Y&
b1000000000000000000 U%
b1000000000000000000 V&
b0 e&
0z
0h
b11 L%
b110100011 7
b110100011 Q%
b110100011 V%
b110100011 Y%
b110100011 \%
b110100011 _%
b110100011 b%
b110100011 e%
b110100011 h%
b110100011 k%
b110100011 n%
b110100011 q%
b110100011 t%
b110100011 w%
b110100011 z%
b110100011 }%
b110100011 "&
b110100011 %&
b110100011 (&
b110100011 +&
b110100011 .&
b110100011 1&
b110100011 4&
b110100011 7&
b110100011 :&
b110100011 =&
b110100011 @&
b110100011 C&
b110100011 F&
b110100011 I&
b110100011 L&
b110100011 O&
b110100011 R&
1O
0U
1s
0'"
0-"
03"
09"
0?"
0E"
0K"
0Q"
0W"
0]"
0c"
0i"
0o"
0u"
0{"
0##
0)#
0/#
05#
0;#
0A#
0G#
0M#
0S#
0Y#
0_#
0e#
0k#
0q#
0w#
0}#
0%$
0+$
01$
07$
0=$
0C$
0I$
0O$
0U$
0[$
0a$
0g$
0m$
0s$
0y$
0!%
0'%
0-%
03%
09%
0?%
0E%
0K%
1v
0u
1d
b1 A
0c
0^
b110100011 5
b110100011 =
b110100011 C
0X
1N
0T
1r
0&"
0,"
02"
08"
0>"
0D"
0J"
0P"
0V"
0\"
0b"
0h"
0n"
0t"
0z"
0"#
0(#
0.#
04#
0:#
0@#
0F#
0L#
0R#
0X#
0^#
0d#
0j#
0p#
0v#
0|#
0$$
0*$
00$
06$
0<$
0B$
0H$
0N$
0T$
0Z$
0`$
0f$
0l$
0r$
0x$
0~$
0&%
0,%
02%
08%
0>%
0D%
0J%
1y
1g
0a
0[
b110100010 ?
b10010 0
b10010 1
b10010 m&
b10 X&
b10 [&
b10 ^&
b10 a&
b10 d&
0w
0e
0_
0Y
b1111111111111111111111111111111111111111111111111111111001011101 6
b1111111111111111111111111111111111111111111111111111111001011101 ;
b10010 .
b10010 +
b10010 2
b10010 T%
b10010 U&
b0 9
b0 <
b0 B
b0 O%
b0 *
b0 3
b0 R%
b1111111111111111111111111111111111111111111111111111111001011101 8
b1111111111111111111111111111111111111111111111111111111001011101 N%
b1111111111111111111111111111111111111111111111111111111001011101 P%
b100 )
b100 4
b100 S%
b1111111111111111111111111111111111111111111111111111111001011101 a%
b10000000010100100100011 -
b10000000010100100100011 i&
b10000000010100100100011 l&
1!
#50
1%'
1#'
b110 p&
b110 r&
b110 z&
0}&
b10 y&
1|&
0"'
1~&
b11001000100000001010010011 ,
b11001000100000001010010011 f&
b11001000100000001010010011 h&
b11001000100000001010010011 j&
b101 /
b101 g&
b101 q&
b101 s&
b101 v&
0,&
b0 U%
b0 V&
b0 _&
1^
0d
0p
0v
0]&
1a
0g
0s
0y
b10010 L%
b0 W&
b0 Y&
1`
0f
0r
0x
b10010 5
b10010 =
b10010 C
0F
b10010 ?
0D
bx 7
bx Q%
bx V%
bx Y%
bx \%
bx _%
bx b%
bx e%
bx h%
bx k%
bx n%
bx q%
bx t%
bx w%
bx z%
bx }%
bx "&
bx %&
bx (&
bx +&
bx .&
bx 1&
bx 4&
bx 7&
bx :&
bx =&
bx @&
bx C&
bx F&
bx I&
bx L&
bx O&
bx R&
b10010 6
b10010 ;
0!
1$
0%
b0 A
0'
0"
1#
#55
1p
1n
1i
1h
1c
1g
0d
1f
1b
b1111 L%
b110010 ?
1H%
1B%
1<%
16%
10%
1*%
1$%
1|$
1v$
1p$
1j$
1d$
1^$
1X$
1R$
1L$
1F$
1@$
1:$
14$
1.$
1($
1"$
1z#
1t#
1n#
1h#
1b#
1\#
1V#
1P#
1J#
1D#
1>#
18#
12#
1,#
1&#
1~"
1x"
1r"
1l"
1f"
1`"
1Z"
1T"
1N"
1H"
1B"
1<"
16"
10"
1*"
1$"
1|
0j
0^
b11100000 A
1]
1X
1R
b1111111111111111111111111111111111111111111111111111111010001111 5
b1111111111111111111111111111111111111111111111111111111010001111 =
b1111111111111111111111111111111111111111111111111111111010001111 C
1F
b110010 6
b110010 ;
1K%
1E%
1?%
19%
13%
1-%
1'%
1!%
1y$
1s$
1m$
1g$
1a$
1[$
1U$
1O$
1I$
1C$
1=$
17$
11$
1+$
1%$
1}#
1w#
1q#
1k#
1e#
1_#
1Y#
1S#
1M#
1G#
1A#
1;#
15#
1/#
1)#
1##
1{"
1u"
1o"
1i"
1c"
1]"
1W"
1Q"
1K"
1E"
1?"
19"
13"
1-"
1'"
1!"
1m
0a
1[
1U
1I
b110010 0
b110010 1
b110010 m&
b0 X&
b101 [&
b101 ^&
b101 a&
b101 d&
1I%
1C%
1=%
17%
11%
1+%
1%%
1}$
1w$
1q$
1k$
1e$
1_$
1Y$
1S$
1M$
1G$
1A$
1;$
15$
1/$
1)$
1#$
1{#
1u#
1o#
1i#
1c#
1]#
1W#
1Q#
1K#
1E#
1?#
19#
13#
1-#
1'#
1!#
1y"
1s"
1m"
1g"
1a"
1["
1U"
1O"
1I"
1C"
1="
17"
11"
1+"
1%"
1}
1k
1_
1Y
1S
1G
b110010 .
b101 +
b101 2
b101 T%
b101 U&
b1111111111111111111111111111111111111111111111111111111001011101 9
b1111111111111111111111111111111111111111111111111111111001011101 <
b1111111111111111111111111111111111111111111111111111111001011101 B
b1111111111111111111111111111111111111111111111111111111001011101 O%
b100 *
b100 3
b100 R%
bx 8
bx N%
bx P%
b10010 )
b10010 4
b10010 S%
bx 7
bx Q%
bx V%
bx Y%
bx \%
bx _%
bx b%
bx e%
bx h%
bx k%
bx n%
bx q%
bx t%
bx w%
bx z%
bx }%
bx "&
bx %&
bx (&
bx +&
bx .&
bx 1&
bx 4&
bx 7&
bx :&
bx =&
bx @&
bx C&
bx F&
bx I&
bx L&
bx O&
bx R&
b11001000100000001010010011 -
b11001000100000001010010011 i&
b11001000100000001010010011 l&
bx :
bx M%
1!
#60
01'
0/'
0*'
1+'
0)'
0#'
0$'
1}&
b0 y&
0|&
b111 p&
b111 r&
b111 z&
1%'
1"'
1('
0~&
1&'
b1001000000010001100000011 ,
b1001000000010001100000011 f&
b1001000000010001100000011 h&
b1001000000010001100000011 j&
b110 /
b110 g&
b110 q&
b110 s&
b110 v&
1c%
b100000 U%
b100000 V&
b100000 e&
1c&
b1 W&
b1 Y&
b1111111111111111111111111111111111111111111111111111111010001111 7
b1111111111111111111111111111111111111111111111111111111010001111 Q%
b1111111111111111111111111111111111111111111111111111111010001111 V%
b1111111111111111111111111111111111111111111111111111111010001111 Y%
b1111111111111111111111111111111111111111111111111111111010001111 \%
b1111111111111111111111111111111111111111111111111111111010001111 _%
b1111111111111111111111111111111111111111111111111111111010001111 b%
b1111111111111111111111111111111111111111111111111111111010001111 e%
b1111111111111111111111111111111111111111111111111111111010001111 h%
b1111111111111111111111111111111111111111111111111111111010001111 k%
b1111111111111111111111111111111111111111111111111111111010001111 n%
b1111111111111111111111111111111111111111111111111111111010001111 q%
b1111111111111111111111111111111111111111111111111111111010001111 t%
b1111111111111111111111111111111111111111111111111111111010001111 w%
b1111111111111111111111111111111111111111111111111111111010001111 z%
b1111111111111111111111111111111111111111111111111111111010001111 }%
b1111111111111111111111111111111111111111111111111111111010001111 "&
b1111111111111111111111111111111111111111111111111111111010001111 %&
b1111111111111111111111111111111111111111111111111111111010001111 (&
b1111111111111111111111111111111111111111111111111111111010001111 +&
b1111111111111111111111111111111111111111111111111111111010001111 .&
b1111111111111111111111111111111111111111111111111111111010001111 1&
b1111111111111111111111111111111111111111111111111111111010001111 4&
b1111111111111111111111111111111111111111111111111111111010001111 7&
b1111111111111111111111111111111111111111111111111111111010001111 :&
b1111111111111111111111111111111111111111111111111111111010001111 =&
b1111111111111111111111111111111111111111111111111111111010001111 @&
b1111111111111111111111111111111111111111111111111111111010001111 C&
b1111111111111111111111111111111111111111111111111111111010001111 F&
b1111111111111111111111111111111111111111111111111111111010001111 I&
b1111111111111111111111111111111111111111111111111111111010001111 L&
b1111111111111111111111111111111111111111111111111111111010001111 O&
b1111111111111111111111111111111111111111111111111111111010001111 R&
0!
0$
1%
1"
#65
0h
0p
0c
0g
0`%
1f%
0n
0d
0f
0c%
0i
0b
b1111111111111111111111111111111111111111111111111111111001011101 :
b1111111111111111111111111111111111111111111111111111111001011101 M%
b10010 L%
b10010 7
b10010 Q%
b10010 V%
b10010 Y%
b10010 \%
b10010 _%
b10010 b%
b10010 e%
b10010 h%
b10010 k%
b10010 n%
b10010 q%
b10010 t%
b10010 w%
b10010 z%
b10010 }%
b10010 "&
b10010 %&
b10010 (&
b10010 +&
b10010 .&
b10010 1&
b10010 4&
b10010 7&
b10010 :&
b10010 =&
b10010 @&
b10010 C&
b10010 F&
b10010 I&
b10010 L&
b10010 O&
b10010 R&
b10010 ?
b1000000 U%
b1000000 V&
b1000000 e&
0H%
0B%
0<%
06%
00%
0*%
0$%
0|$
0v$
0p$
0j$
0d$
0^$
0X$
0R$
0L$
0F$
0@$
0:$
04$
0.$
0($
0"$
0z#
0t#
0n#
0h#
0b#
0\#
0V#
0P#
0J#
0D#
0>#
08#
02#
0,#
0&#
0~"
0x"
0r"
0l"
0f"
0`"
0Z"
0T"
0N"
0H"
0B"
0<"
06"
00"
0*"
0$"
0|
0j
1^
b0 A
0]
0X
0R
b10010 5
b10010 =
b10010 C
0F
b10010 6
b10010 ;
0K%
0E%
0?%
09%
03%
0-%
0'%
0!%
0y$
0s$
0m$
0g$
0a$
0[$
0U$
0O$
0I$
0C$
0=$
07$
01$
0+$
0%$
0}#
0w#
0q#
0k#
0e#
0_#
0Y#
0S#
0M#
0G#
0A#
0;#
05#
0/#
0)#
0##
0{"
0u"
0o"
0i"
0c"
0]"
0W"
0Q"
0K"
0E"
0?"
09"
03"
0-"
0'"
0!"
0m
1a
0[
0U
0I
b10010 0
b10010 1
b10010 m&
b110 [&
b110 ^&
b110 a&
b110 d&
0I%
0C%
0=%
07%
01%
0+%
0%%
0}$
0w$
0q$
0k$
0e$
0_$
0Y$
0S$
0M$
0G$
0A$
0;$
05$
0/$
0)$
0#$
0{#
0u#
0o#
0i#
0c#
0]#
0W#
0Q#
0K#
0E#
0?#
09#
03#
0-#
0'#
0!#
0y"
0s"
0m"
0g"
0a"
0["
0U"
0O"
0I"
0C"
0="
07"
01"
0+"
0%"
0}
0k
0_
0Y
0S
0G
b10010 .
b110 +
b110 2
b110 T%
b110 U&
b0 9
b0 <
b0 B
b0 O%
b0 *
b0 3
b0 R%
b1111111111111111111111111111111111111111111111111111111010001111 d%
b1001000000010001100000011 -
b1001000000010001100000011 i&
b1001000000010001100000011 l&
1!
#70
11'
1/'
1*'
0+'
1)'
1$'
0%'
1#'
b1000 p&
b1000 r&
b1000 z&
0}&
b1110 y&
1|&
0"'
1~&
bx ,
bx f&
bx h&
bx j&
b111 /
b111 g&
b111 q&
b111 s&
b111 v&
b1111111111111111111111111111111111111111111111111111111001011101 7
b1111111111111111111111111111111111111111111111111111111001011101 Q%
b1111111111111111111111111111111111111111111111111111111001011101 V%
b1111111111111111111111111111111111111111111111111111111001011101 Y%
b1111111111111111111111111111111111111111111111111111111001011101 \%
b1111111111111111111111111111111111111111111111111111111001011101 _%
b1111111111111111111111111111111111111111111111111111111001011101 b%
b1111111111111111111111111111111111111111111111111111111001011101 e%
b1111111111111111111111111111111111111111111111111111111001011101 h%
b1111111111111111111111111111111111111111111111111111111001011101 k%
b1111111111111111111111111111111111111111111111111111111001011101 n%
b1111111111111111111111111111111111111111111111111111111001011101 q%
b1111111111111111111111111111111111111111111111111111111001011101 t%
b1111111111111111111111111111111111111111111111111111111001011101 w%
b1111111111111111111111111111111111111111111111111111111001011101 z%
b1111111111111111111111111111111111111111111111111111111001011101 }%
b1111111111111111111111111111111111111111111111111111111001011101 "&
b1111111111111111111111111111111111111111111111111111111001011101 %&
b1111111111111111111111111111111111111111111111111111111001011101 (&
b1111111111111111111111111111111111111111111111111111111001011101 +&
b1111111111111111111111111111111111111111111111111111111001011101 .&
b1111111111111111111111111111111111111111111111111111111001011101 1&
b1111111111111111111111111111111111111111111111111111111001011101 4&
b1111111111111111111111111111111111111111111111111111111001011101 7&
b1111111111111111111111111111111111111111111111111111111001011101 :&
b1111111111111111111111111111111111111111111111111111111001011101 =&
b1111111111111111111111111111111111111111111111111111111001011101 @&
b1111111111111111111111111111111111111111111111111111111001011101 C&
b1111111111111111111111111111111111111111111111111111111001011101 F&
b1111111111111111111111111111111111111111111111111111111001011101 I&
b1111111111111111111111111111111111111111111111111111111001011101 L&
b1111111111111111111111111111111111111111111111111111111001011101 O&
b1111111111111111111111111111111111111111111111111111111001011101 R&
0!
0"
#75
x@
xG%
xF%
xA%
x@%
x;%
x:%
x5%
x4%
x/%
x.%
x)%
x(%
x#%
x"%
x{$
xz$
xu$
xt$
xo$
xn$
xi$
xh$
xc$
xb$
x]$
x\$
xW$
xV$
xQ$
xP$
xK$
xJ$
xE$
xD$
x?$
x>$
x9$
x8$
x3$
x2$
x-$
x,$
x'$
x&$
x!$
x~#
xy#
xx#
xs#
xr#
xm#
xl#
xg#
xf#
xa#
x`#
x[#
xZ#
xU#
xT#
xO#
xN#
xI#
xH#
xC#
xB#
x=#
x<#
x7#
x6#
x1#
x0#
x+#
x*#
x%#
x$#
x}"
x|"
xw"
xv"
xq"
xp"
xk"
xj"
xe"
xd"
x_"
x^"
xY"
xX"
xS"
xR"
xM"
xL"
xG"
xF"
xA"
x@"
x;"
x:"
x5"
x4"
x/"
x&&
x)&
x,&
x/&
x2&
x5&
x8&
x;&
x>&
xA&
xD&
xG&
xJ&
xM&
xP&
xS&
xl%
xo%
xr%
xu%
xx%
x{%
x~%
x#&
bx _&
bx \&
xJ
x\
xn
xt
xz
x""
x("
x."
bx b&
xW%
xZ%
x]%
xh
xV
xE
xW
xi
xo
xu
x{
x#"
x)"
x`%
xc%
xc
xQ
xc&
x]&
xZ&
xf%
bx 7
bx Q%
bx V%
bx Y%
bx \%
bx _%
bx b%
bx e%
bx h%
bx k%
bx n%
bx q%
bx t%
bx w%
bx z%
bx }%
bx "&
bx %&
bx (&
bx +&
bx .&
bx 1&
bx 4&
bx 7&
bx :&
bx =&
bx @&
bx C&
bx F&
bx I&
bx L&
bx O&
bx R&
xH
xN
xT
xZ
x`
xf
xl
xr
xx
x~
x&"
x,"
x`&
xi%
xb
xP
bx :
bx M%
bx L%
b0xxxxxxxxxxxx ?
bx W&
bx Y&
bx U%
bx V&
bx e&
xH%
xB%
x<%
x6%
x0%
x*%
x$%
x|$
xv$
xp$
xj$
xd$
x^$
xX$
xR$
xL$
xF$
x@$
x:$
x4$
x.$
x($
x"$
xz#
xt#
xn#
xh#
xb#
x\#
xV#
xP#
xJ#
xD#
x>#
x8#
x2#
x,#
x&#
x~"
xx"
xr"
xl"
xf"
x`"
xZ"
xT"
xN"
xH"
xB"
x<"
x6"
x0"
x*"
x$"
x|
xv
xp
xj
xd
x^
x]
xX
xR
xL
bx0 A
xK
bx 5
bx =
bx C
xF
b0xxxxxxxxxxxx 6
b0xxxxxxxxxxxx ;
xK%
xE%
x?%
x9%
x3%
x-%
x'%
x!%
xy$
xs$
xm$
xg$
xa$
x[$
xU$
xO$
xI$
xC$
x=$
x7$
x1$
x+$
x%$
x}#
xw#
xq#
xk#
xe#
x_#
xY#
xS#
xM#
xG#
xA#
x;#
x5#
x/#
x)#
x##
x{"
xu"
xo"
xi"
xc"
x]"
xW"
xQ"
xK"
xE"
x?"
x9"
x3"
x-"
x'"
x!"
xy
xs
xm
xg
xa
x[
xU
xO
xI
bx 0
bx 1
bx m&
bx X&
bx [&
bx ^&
bx a&
bx d&
xI%
xC%
x=%
x7%
x1%
x+%
x%%
x}$
xw$
xq$
xk$
xe$
x_$
xY$
xS$
xM$
xG$
xA$
x;$
x5$
x/$
x)$
x#$
x{#
xu#
xo#
xi#
xc#
x]#
xW#
xQ#
xK#
xE#
x?#
x9#
x3#
x-#
x'#
x!#
xy"
xs"
xm"
xg"
xa"
x["
xU"
xO"
xI"
xC"
x="
x7"
x1"
x+"
x%"
x}
xw
xq
xk
xe
x_
xY
xS
xM
xG
bx .
bx +
bx 2
bx T%
bx U&
bx 9
bx <
bx B
bx O%
bx *
bx 3
bx R%
bx )
bx 4
bx S%
bx -
bx i&
bx l&
b1111111111111111111111111111111111111111111111111111111001011101 g%
1!
#80
07'
0)'
0/'
05'
0#'
0$'
0*'
00'
1}&
b0 y&
0|&
0%'
0+'
b1001 p&
b1001 r&
b1001 z&
11'
1"'
0('
0.'
14'
0~&
0&'
0,'
12'
b1000 /
b1000 g&
b1000 q&
b1000 s&
b1000 v&
0!
