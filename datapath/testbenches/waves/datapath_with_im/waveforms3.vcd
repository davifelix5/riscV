$date
	Mon May 08 20:15:47 2023
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module datapath_tb $end
$var reg 1 ! CLK $end
$var reg 1 " RF_din_sel $end
$var reg 1 # ULA_din2_sel $end
$var reg 1 $ WE_MEM $end
$var reg 1 % WE_RF $end
$var reg 1 & reset_pc $end
$var reg 1 ' sub $end
$scope module UUT $end
$var wire 1 ! CLK $end
$var wire 1 " RF_din_sel $end
$var wire 1 # ULA_din2_sel $end
$var wire 1 $ WE_MEM $end
$var wire 1 % WE_RF $end
$var wire 1 ( load_pc $end
$var wire 1 & reset_pc $end
$var wire 1 ' sub $end
$var wire 64 ) ula [63:0] $end
$var wire 5 * rs2 [4:0] $end
$var wire 5 + rs1 [4:0] $end
$var wire 5 , rd [4:0] $end
$var wire 32 - instruction_mem [31:0] $end
$var wire 32 . instruction [31:0] $end
$var wire 12 / imm [11:0] $end
$var wire 64 0 im_addr [63:0] $end
$var wire 12 1 extended_imm [11:0] $end
$var wire 64 2 ULA_Din2 [63:0] $end
$var wire 64 3 RF_Din [63:0] $end
$var wire 64 4 Dout_rs2 [63:0] $end
$var wire 64 5 Dout_rs1 [63:0] $end
$var wire 64 6 DM_out [63:0] $end
$scope module DM $end
$var wire 5 7 ADDR [4:0] $end
$var wire 1 ! CLK $end
$var wire 64 8 D_out [63:0] $end
$var wire 1 $ WE $end
$var wire 64 9 D_in [63:0] $end
$var parameter 32 : N $end
$var parameter 32 ; SIZE $end
$upscope $end
$scope module IM $end
$var wire 32 < OUTPUT [31:0] $end
$var wire 64 = ADDR [63:0] $end
$upscope $end
$scope module IR $end
$var wire 1 ! CLK $end
$var wire 32 > IN [31:0] $end
$var wire 1 ? LOAD $end
$var parameter 32 @ SIZE $end
$var reg 32 A OUT [31:0] $end
$upscope $end
$scope module PC $end
$var wire 1 ! CLK $end
$var wire 1 ( LOAD $end
$var wire 1 & RST $end
$var wire 12 B immediate [11:0] $end
$var wire 64 C pc_next [63:0] $end
$var wire 1 D pc_next_sel $end
$var wire 64 E next [63:0] $end
$var wire 64 F addr [63:0] $end
$scope module PC $end
$var wire 1 ! CLK $end
$var wire 1 ( LOAD $end
$var wire 1 & RST $end
$var wire 64 G IN [63:0] $end
$var parameter 32 H SIZE $end
$var reg 64 I OUT [63:0] $end
$upscope $end
$scope module adder $end
$var wire 1 J Cin $end
$var wire 1 K Cout $end
$var wire 64 L X [63:0] $end
$var wire 64 M Y [63:0] $end
$var wire 1 N cout $end
$var wire 65 O cins [64:0] $end
$var wire 64 P S [63:0] $end
$var parameter 32 Q SIZE $end
$scope begin genblk1[0] $end
$var parameter 2 R i $end
$scope module SOMA $end
$var wire 1 S Cin $end
$var wire 1 T Cout $end
$var wire 1 U S $end
$var wire 1 V X $end
$var wire 1 W Y $end
$var wire 1 X xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[1] $end
$var parameter 2 Y i $end
$scope module SOMA $end
$var wire 1 Z Cin $end
$var wire 1 [ Cout $end
$var wire 1 \ S $end
$var wire 1 ] X $end
$var wire 1 ^ Y $end
$var wire 1 _ xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[2] $end
$var parameter 3 ` i $end
$scope module SOMA $end
$var wire 1 a Cin $end
$var wire 1 b Cout $end
$var wire 1 c S $end
$var wire 1 d X $end
$var wire 1 e Y $end
$var wire 1 f xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[3] $end
$var parameter 3 g i $end
$scope module SOMA $end
$var wire 1 h Cin $end
$var wire 1 i Cout $end
$var wire 1 j S $end
$var wire 1 k X $end
$var wire 1 l Y $end
$var wire 1 m xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[4] $end
$var parameter 4 n i $end
$scope module SOMA $end
$var wire 1 o Cin $end
$var wire 1 p Cout $end
$var wire 1 q S $end
$var wire 1 r X $end
$var wire 1 s Y $end
$var wire 1 t xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[5] $end
$var parameter 4 u i $end
$scope module SOMA $end
$var wire 1 v Cin $end
$var wire 1 w Cout $end
$var wire 1 x S $end
$var wire 1 y X $end
$var wire 1 z Y $end
$var wire 1 { xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[6] $end
$var parameter 4 | i $end
$scope module SOMA $end
$var wire 1 } Cin $end
$var wire 1 ~ Cout $end
$var wire 1 !" S $end
$var wire 1 "" X $end
$var wire 1 #" Y $end
$var wire 1 $" xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[7] $end
$var parameter 4 %" i $end
$scope module SOMA $end
$var wire 1 &" Cin $end
$var wire 1 '" Cout $end
$var wire 1 (" S $end
$var wire 1 )" X $end
$var wire 1 *" Y $end
$var wire 1 +" xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[8] $end
$var parameter 5 ," i $end
$scope module SOMA $end
$var wire 1 -" Cin $end
$var wire 1 ." Cout $end
$var wire 1 /" S $end
$var wire 1 0" X $end
$var wire 1 1" Y $end
$var wire 1 2" xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[9] $end
$var parameter 5 3" i $end
$scope module SOMA $end
$var wire 1 4" Cin $end
$var wire 1 5" Cout $end
$var wire 1 6" S $end
$var wire 1 7" X $end
$var wire 1 8" Y $end
$var wire 1 9" xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[10] $end
$var parameter 5 :" i $end
$scope module SOMA $end
$var wire 1 ;" Cin $end
$var wire 1 <" Cout $end
$var wire 1 =" S $end
$var wire 1 >" X $end
$var wire 1 ?" Y $end
$var wire 1 @" xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[11] $end
$var parameter 5 A" i $end
$scope module SOMA $end
$var wire 1 B" Cin $end
$var wire 1 C" Cout $end
$var wire 1 D" S $end
$var wire 1 E" X $end
$var wire 1 F" Y $end
$var wire 1 G" xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[12] $end
$var parameter 5 H" i $end
$scope module SOMA $end
$var wire 1 I" Cin $end
$var wire 1 J" Cout $end
$var wire 1 K" S $end
$var wire 1 L" X $end
$var wire 1 M" Y $end
$var wire 1 N" xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[13] $end
$var parameter 5 O" i $end
$scope module SOMA $end
$var wire 1 P" Cin $end
$var wire 1 Q" Cout $end
$var wire 1 R" S $end
$var wire 1 S" X $end
$var wire 1 T" Y $end
$var wire 1 U" xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[14] $end
$var parameter 5 V" i $end
$scope module SOMA $end
$var wire 1 W" Cin $end
$var wire 1 X" Cout $end
$var wire 1 Y" S $end
$var wire 1 Z" X $end
$var wire 1 [" Y $end
$var wire 1 \" xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[15] $end
$var parameter 5 ]" i $end
$scope module SOMA $end
$var wire 1 ^" Cin $end
$var wire 1 _" Cout $end
$var wire 1 `" S $end
$var wire 1 a" X $end
$var wire 1 b" Y $end
$var wire 1 c" xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[16] $end
$var parameter 6 d" i $end
$scope module SOMA $end
$var wire 1 e" Cin $end
$var wire 1 f" Cout $end
$var wire 1 g" S $end
$var wire 1 h" X $end
$var wire 1 i" Y $end
$var wire 1 j" xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[17] $end
$var parameter 6 k" i $end
$scope module SOMA $end
$var wire 1 l" Cin $end
$var wire 1 m" Cout $end
$var wire 1 n" S $end
$var wire 1 o" X $end
$var wire 1 p" Y $end
$var wire 1 q" xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[18] $end
$var parameter 6 r" i $end
$scope module SOMA $end
$var wire 1 s" Cin $end
$var wire 1 t" Cout $end
$var wire 1 u" S $end
$var wire 1 v" X $end
$var wire 1 w" Y $end
$var wire 1 x" xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[19] $end
$var parameter 6 y" i $end
$scope module SOMA $end
$var wire 1 z" Cin $end
$var wire 1 {" Cout $end
$var wire 1 |" S $end
$var wire 1 }" X $end
$var wire 1 ~" Y $end
$var wire 1 !# xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[20] $end
$var parameter 6 "# i $end
$scope module SOMA $end
$var wire 1 ## Cin $end
$var wire 1 $# Cout $end
$var wire 1 %# S $end
$var wire 1 &# X $end
$var wire 1 '# Y $end
$var wire 1 (# xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[21] $end
$var parameter 6 )# i $end
$scope module SOMA $end
$var wire 1 *# Cin $end
$var wire 1 +# Cout $end
$var wire 1 ,# S $end
$var wire 1 -# X $end
$var wire 1 .# Y $end
$var wire 1 /# xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[22] $end
$var parameter 6 0# i $end
$scope module SOMA $end
$var wire 1 1# Cin $end
$var wire 1 2# Cout $end
$var wire 1 3# S $end
$var wire 1 4# X $end
$var wire 1 5# Y $end
$var wire 1 6# xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[23] $end
$var parameter 6 7# i $end
$scope module SOMA $end
$var wire 1 8# Cin $end
$var wire 1 9# Cout $end
$var wire 1 :# S $end
$var wire 1 ;# X $end
$var wire 1 <# Y $end
$var wire 1 =# xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[24] $end
$var parameter 6 ># i $end
$scope module SOMA $end
$var wire 1 ?# Cin $end
$var wire 1 @# Cout $end
$var wire 1 A# S $end
$var wire 1 B# X $end
$var wire 1 C# Y $end
$var wire 1 D# xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[25] $end
$var parameter 6 E# i $end
$scope module SOMA $end
$var wire 1 F# Cin $end
$var wire 1 G# Cout $end
$var wire 1 H# S $end
$var wire 1 I# X $end
$var wire 1 J# Y $end
$var wire 1 K# xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[26] $end
$var parameter 6 L# i $end
$scope module SOMA $end
$var wire 1 M# Cin $end
$var wire 1 N# Cout $end
$var wire 1 O# S $end
$var wire 1 P# X $end
$var wire 1 Q# Y $end
$var wire 1 R# xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[27] $end
$var parameter 6 S# i $end
$scope module SOMA $end
$var wire 1 T# Cin $end
$var wire 1 U# Cout $end
$var wire 1 V# S $end
$var wire 1 W# X $end
$var wire 1 X# Y $end
$var wire 1 Y# xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[28] $end
$var parameter 6 Z# i $end
$scope module SOMA $end
$var wire 1 [# Cin $end
$var wire 1 \# Cout $end
$var wire 1 ]# S $end
$var wire 1 ^# X $end
$var wire 1 _# Y $end
$var wire 1 `# xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[29] $end
$var parameter 6 a# i $end
$scope module SOMA $end
$var wire 1 b# Cin $end
$var wire 1 c# Cout $end
$var wire 1 d# S $end
$var wire 1 e# X $end
$var wire 1 f# Y $end
$var wire 1 g# xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[30] $end
$var parameter 6 h# i $end
$scope module SOMA $end
$var wire 1 i# Cin $end
$var wire 1 j# Cout $end
$var wire 1 k# S $end
$var wire 1 l# X $end
$var wire 1 m# Y $end
$var wire 1 n# xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[31] $end
$var parameter 6 o# i $end
$scope module SOMA $end
$var wire 1 p# Cin $end
$var wire 1 q# Cout $end
$var wire 1 r# S $end
$var wire 1 s# X $end
$var wire 1 t# Y $end
$var wire 1 u# xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[32] $end
$var parameter 7 v# i $end
$scope module SOMA $end
$var wire 1 w# Cin $end
$var wire 1 x# Cout $end
$var wire 1 y# S $end
$var wire 1 z# X $end
$var wire 1 {# Y $end
$var wire 1 |# xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[33] $end
$var parameter 7 }# i $end
$scope module SOMA $end
$var wire 1 ~# Cin $end
$var wire 1 !$ Cout $end
$var wire 1 "$ S $end
$var wire 1 #$ X $end
$var wire 1 $$ Y $end
$var wire 1 %$ xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[34] $end
$var parameter 7 &$ i $end
$scope module SOMA $end
$var wire 1 '$ Cin $end
$var wire 1 ($ Cout $end
$var wire 1 )$ S $end
$var wire 1 *$ X $end
$var wire 1 +$ Y $end
$var wire 1 ,$ xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[35] $end
$var parameter 7 -$ i $end
$scope module SOMA $end
$var wire 1 .$ Cin $end
$var wire 1 /$ Cout $end
$var wire 1 0$ S $end
$var wire 1 1$ X $end
$var wire 1 2$ Y $end
$var wire 1 3$ xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[36] $end
$var parameter 7 4$ i $end
$scope module SOMA $end
$var wire 1 5$ Cin $end
$var wire 1 6$ Cout $end
$var wire 1 7$ S $end
$var wire 1 8$ X $end
$var wire 1 9$ Y $end
$var wire 1 :$ xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[37] $end
$var parameter 7 ;$ i $end
$scope module SOMA $end
$var wire 1 <$ Cin $end
$var wire 1 =$ Cout $end
$var wire 1 >$ S $end
$var wire 1 ?$ X $end
$var wire 1 @$ Y $end
$var wire 1 A$ xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[38] $end
$var parameter 7 B$ i $end
$scope module SOMA $end
$var wire 1 C$ Cin $end
$var wire 1 D$ Cout $end
$var wire 1 E$ S $end
$var wire 1 F$ X $end
$var wire 1 G$ Y $end
$var wire 1 H$ xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[39] $end
$var parameter 7 I$ i $end
$scope module SOMA $end
$var wire 1 J$ Cin $end
$var wire 1 K$ Cout $end
$var wire 1 L$ S $end
$var wire 1 M$ X $end
$var wire 1 N$ Y $end
$var wire 1 O$ xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[40] $end
$var parameter 7 P$ i $end
$scope module SOMA $end
$var wire 1 Q$ Cin $end
$var wire 1 R$ Cout $end
$var wire 1 S$ S $end
$var wire 1 T$ X $end
$var wire 1 U$ Y $end
$var wire 1 V$ xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[41] $end
$var parameter 7 W$ i $end
$scope module SOMA $end
$var wire 1 X$ Cin $end
$var wire 1 Y$ Cout $end
$var wire 1 Z$ S $end
$var wire 1 [$ X $end
$var wire 1 \$ Y $end
$var wire 1 ]$ xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[42] $end
$var parameter 7 ^$ i $end
$scope module SOMA $end
$var wire 1 _$ Cin $end
$var wire 1 `$ Cout $end
$var wire 1 a$ S $end
$var wire 1 b$ X $end
$var wire 1 c$ Y $end
$var wire 1 d$ xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[43] $end
$var parameter 7 e$ i $end
$scope module SOMA $end
$var wire 1 f$ Cin $end
$var wire 1 g$ Cout $end
$var wire 1 h$ S $end
$var wire 1 i$ X $end
$var wire 1 j$ Y $end
$var wire 1 k$ xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[44] $end
$var parameter 7 l$ i $end
$scope module SOMA $end
$var wire 1 m$ Cin $end
$var wire 1 n$ Cout $end
$var wire 1 o$ S $end
$var wire 1 p$ X $end
$var wire 1 q$ Y $end
$var wire 1 r$ xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[45] $end
$var parameter 7 s$ i $end
$scope module SOMA $end
$var wire 1 t$ Cin $end
$var wire 1 u$ Cout $end
$var wire 1 v$ S $end
$var wire 1 w$ X $end
$var wire 1 x$ Y $end
$var wire 1 y$ xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[46] $end
$var parameter 7 z$ i $end
$scope module SOMA $end
$var wire 1 {$ Cin $end
$var wire 1 |$ Cout $end
$var wire 1 }$ S $end
$var wire 1 ~$ X $end
$var wire 1 !% Y $end
$var wire 1 "% xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[47] $end
$var parameter 7 #% i $end
$scope module SOMA $end
$var wire 1 $% Cin $end
$var wire 1 %% Cout $end
$var wire 1 &% S $end
$var wire 1 '% X $end
$var wire 1 (% Y $end
$var wire 1 )% xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[48] $end
$var parameter 7 *% i $end
$scope module SOMA $end
$var wire 1 +% Cin $end
$var wire 1 ,% Cout $end
$var wire 1 -% S $end
$var wire 1 .% X $end
$var wire 1 /% Y $end
$var wire 1 0% xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[49] $end
$var parameter 7 1% i $end
$scope module SOMA $end
$var wire 1 2% Cin $end
$var wire 1 3% Cout $end
$var wire 1 4% S $end
$var wire 1 5% X $end
$var wire 1 6% Y $end
$var wire 1 7% xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[50] $end
$var parameter 7 8% i $end
$scope module SOMA $end
$var wire 1 9% Cin $end
$var wire 1 :% Cout $end
$var wire 1 ;% S $end
$var wire 1 <% X $end
$var wire 1 =% Y $end
$var wire 1 >% xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[51] $end
$var parameter 7 ?% i $end
$scope module SOMA $end
$var wire 1 @% Cin $end
$var wire 1 A% Cout $end
$var wire 1 B% S $end
$var wire 1 C% X $end
$var wire 1 D% Y $end
$var wire 1 E% xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[52] $end
$var parameter 7 F% i $end
$scope module SOMA $end
$var wire 1 G% Cin $end
$var wire 1 H% Cout $end
$var wire 1 I% S $end
$var wire 1 J% X $end
$var wire 1 K% Y $end
$var wire 1 L% xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[53] $end
$var parameter 7 M% i $end
$scope module SOMA $end
$var wire 1 N% Cin $end
$var wire 1 O% Cout $end
$var wire 1 P% S $end
$var wire 1 Q% X $end
$var wire 1 R% Y $end
$var wire 1 S% xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[54] $end
$var parameter 7 T% i $end
$scope module SOMA $end
$var wire 1 U% Cin $end
$var wire 1 V% Cout $end
$var wire 1 W% S $end
$var wire 1 X% X $end
$var wire 1 Y% Y $end
$var wire 1 Z% xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[55] $end
$var parameter 7 [% i $end
$scope module SOMA $end
$var wire 1 \% Cin $end
$var wire 1 ]% Cout $end
$var wire 1 ^% S $end
$var wire 1 _% X $end
$var wire 1 `% Y $end
$var wire 1 a% xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[56] $end
$var parameter 7 b% i $end
$scope module SOMA $end
$var wire 1 c% Cin $end
$var wire 1 d% Cout $end
$var wire 1 e% S $end
$var wire 1 f% X $end
$var wire 1 g% Y $end
$var wire 1 h% xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[57] $end
$var parameter 7 i% i $end
$scope module SOMA $end
$var wire 1 j% Cin $end
$var wire 1 k% Cout $end
$var wire 1 l% S $end
$var wire 1 m% X $end
$var wire 1 n% Y $end
$var wire 1 o% xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[58] $end
$var parameter 7 p% i $end
$scope module SOMA $end
$var wire 1 q% Cin $end
$var wire 1 r% Cout $end
$var wire 1 s% S $end
$var wire 1 t% X $end
$var wire 1 u% Y $end
$var wire 1 v% xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[59] $end
$var parameter 7 w% i $end
$scope module SOMA $end
$var wire 1 x% Cin $end
$var wire 1 y% Cout $end
$var wire 1 z% S $end
$var wire 1 {% X $end
$var wire 1 |% Y $end
$var wire 1 }% xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[60] $end
$var parameter 7 ~% i $end
$scope module SOMA $end
$var wire 1 !& Cin $end
$var wire 1 "& Cout $end
$var wire 1 #& S $end
$var wire 1 $& X $end
$var wire 1 %& Y $end
$var wire 1 && xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[61] $end
$var parameter 7 '& i $end
$scope module SOMA $end
$var wire 1 (& Cin $end
$var wire 1 )& Cout $end
$var wire 1 *& S $end
$var wire 1 +& X $end
$var wire 1 ,& Y $end
$var wire 1 -& xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[62] $end
$var parameter 7 .& i $end
$scope module SOMA $end
$var wire 1 /& Cin $end
$var wire 1 0& Cout $end
$var wire 1 1& S $end
$var wire 1 2& X $end
$var wire 1 3& Y $end
$var wire 1 4& xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[63] $end
$var parameter 7 5& i $end
$scope module SOMA $end
$var wire 1 6& Cin $end
$var wire 1 7& Cout $end
$var wire 1 8& S $end
$var wire 1 9& X $end
$var wire 1 :& Y $end
$var wire 1 ;& xor1 $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope module ULA $end
$var wire 64 <& s2 [63:0] $end
$var wire 1 ' sub $end
$var wire 64 =& s1 [63:0] $end
$var wire 64 >& res [63:0] $end
$var parameter 32 ?& SIZE $end
$scope module adder $end
$var wire 1 ' Cin $end
$var wire 1 @& Cout $end
$var wire 64 A& Y [63:0] $end
$var wire 1 B& cout $end
$var wire 65 C& cins [64:0] $end
$var wire 64 D& X [63:0] $end
$var wire 64 E& S [63:0] $end
$var parameter 32 F& SIZE $end
$scope begin genblk1[0] $end
$var parameter 2 G& i $end
$scope module SOMA $end
$var wire 1 H& Cin $end
$var wire 1 I& Cout $end
$var wire 1 J& S $end
$var wire 1 K& X $end
$var wire 1 L& Y $end
$var wire 1 M& xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[1] $end
$var parameter 2 N& i $end
$scope module SOMA $end
$var wire 1 O& Cin $end
$var wire 1 P& Cout $end
$var wire 1 Q& S $end
$var wire 1 R& X $end
$var wire 1 S& Y $end
$var wire 1 T& xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[2] $end
$var parameter 3 U& i $end
$scope module SOMA $end
$var wire 1 V& Cin $end
$var wire 1 W& Cout $end
$var wire 1 X& S $end
$var wire 1 Y& X $end
$var wire 1 Z& Y $end
$var wire 1 [& xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[3] $end
$var parameter 3 \& i $end
$scope module SOMA $end
$var wire 1 ]& Cin $end
$var wire 1 ^& Cout $end
$var wire 1 _& S $end
$var wire 1 `& X $end
$var wire 1 a& Y $end
$var wire 1 b& xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[4] $end
$var parameter 4 c& i $end
$scope module SOMA $end
$var wire 1 d& Cin $end
$var wire 1 e& Cout $end
$var wire 1 f& S $end
$var wire 1 g& X $end
$var wire 1 h& Y $end
$var wire 1 i& xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[5] $end
$var parameter 4 j& i $end
$scope module SOMA $end
$var wire 1 k& Cin $end
$var wire 1 l& Cout $end
$var wire 1 m& S $end
$var wire 1 n& X $end
$var wire 1 o& Y $end
$var wire 1 p& xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[6] $end
$var parameter 4 q& i $end
$scope module SOMA $end
$var wire 1 r& Cin $end
$var wire 1 s& Cout $end
$var wire 1 t& S $end
$var wire 1 u& X $end
$var wire 1 v& Y $end
$var wire 1 w& xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[7] $end
$var parameter 4 x& i $end
$scope module SOMA $end
$var wire 1 y& Cin $end
$var wire 1 z& Cout $end
$var wire 1 {& S $end
$var wire 1 |& X $end
$var wire 1 }& Y $end
$var wire 1 ~& xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[8] $end
$var parameter 5 !' i $end
$scope module SOMA $end
$var wire 1 "' Cin $end
$var wire 1 #' Cout $end
$var wire 1 $' S $end
$var wire 1 %' X $end
$var wire 1 &' Y $end
$var wire 1 '' xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[9] $end
$var parameter 5 (' i $end
$scope module SOMA $end
$var wire 1 )' Cin $end
$var wire 1 *' Cout $end
$var wire 1 +' S $end
$var wire 1 ,' X $end
$var wire 1 -' Y $end
$var wire 1 .' xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[10] $end
$var parameter 5 /' i $end
$scope module SOMA $end
$var wire 1 0' Cin $end
$var wire 1 1' Cout $end
$var wire 1 2' S $end
$var wire 1 3' X $end
$var wire 1 4' Y $end
$var wire 1 5' xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[11] $end
$var parameter 5 6' i $end
$scope module SOMA $end
$var wire 1 7' Cin $end
$var wire 1 8' Cout $end
$var wire 1 9' S $end
$var wire 1 :' X $end
$var wire 1 ;' Y $end
$var wire 1 <' xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[12] $end
$var parameter 5 =' i $end
$scope module SOMA $end
$var wire 1 >' Cin $end
$var wire 1 ?' Cout $end
$var wire 1 @' S $end
$var wire 1 A' X $end
$var wire 1 B' Y $end
$var wire 1 C' xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[13] $end
$var parameter 5 D' i $end
$scope module SOMA $end
$var wire 1 E' Cin $end
$var wire 1 F' Cout $end
$var wire 1 G' S $end
$var wire 1 H' X $end
$var wire 1 I' Y $end
$var wire 1 J' xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[14] $end
$var parameter 5 K' i $end
$scope module SOMA $end
$var wire 1 L' Cin $end
$var wire 1 M' Cout $end
$var wire 1 N' S $end
$var wire 1 O' X $end
$var wire 1 P' Y $end
$var wire 1 Q' xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[15] $end
$var parameter 5 R' i $end
$scope module SOMA $end
$var wire 1 S' Cin $end
$var wire 1 T' Cout $end
$var wire 1 U' S $end
$var wire 1 V' X $end
$var wire 1 W' Y $end
$var wire 1 X' xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[16] $end
$var parameter 6 Y' i $end
$scope module SOMA $end
$var wire 1 Z' Cin $end
$var wire 1 [' Cout $end
$var wire 1 \' S $end
$var wire 1 ]' X $end
$var wire 1 ^' Y $end
$var wire 1 _' xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[17] $end
$var parameter 6 `' i $end
$scope module SOMA $end
$var wire 1 a' Cin $end
$var wire 1 b' Cout $end
$var wire 1 c' S $end
$var wire 1 d' X $end
$var wire 1 e' Y $end
$var wire 1 f' xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[18] $end
$var parameter 6 g' i $end
$scope module SOMA $end
$var wire 1 h' Cin $end
$var wire 1 i' Cout $end
$var wire 1 j' S $end
$var wire 1 k' X $end
$var wire 1 l' Y $end
$var wire 1 m' xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[19] $end
$var parameter 6 n' i $end
$scope module SOMA $end
$var wire 1 o' Cin $end
$var wire 1 p' Cout $end
$var wire 1 q' S $end
$var wire 1 r' X $end
$var wire 1 s' Y $end
$var wire 1 t' xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[20] $end
$var parameter 6 u' i $end
$scope module SOMA $end
$var wire 1 v' Cin $end
$var wire 1 w' Cout $end
$var wire 1 x' S $end
$var wire 1 y' X $end
$var wire 1 z' Y $end
$var wire 1 {' xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[21] $end
$var parameter 6 |' i $end
$scope module SOMA $end
$var wire 1 }' Cin $end
$var wire 1 ~' Cout $end
$var wire 1 !( S $end
$var wire 1 "( X $end
$var wire 1 #( Y $end
$var wire 1 $( xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[22] $end
$var parameter 6 %( i $end
$scope module SOMA $end
$var wire 1 &( Cin $end
$var wire 1 '( Cout $end
$var wire 1 (( S $end
$var wire 1 )( X $end
$var wire 1 *( Y $end
$var wire 1 +( xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[23] $end
$var parameter 6 ,( i $end
$scope module SOMA $end
$var wire 1 -( Cin $end
$var wire 1 .( Cout $end
$var wire 1 /( S $end
$var wire 1 0( X $end
$var wire 1 1( Y $end
$var wire 1 2( xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[24] $end
$var parameter 6 3( i $end
$scope module SOMA $end
$var wire 1 4( Cin $end
$var wire 1 5( Cout $end
$var wire 1 6( S $end
$var wire 1 7( X $end
$var wire 1 8( Y $end
$var wire 1 9( xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[25] $end
$var parameter 6 :( i $end
$scope module SOMA $end
$var wire 1 ;( Cin $end
$var wire 1 <( Cout $end
$var wire 1 =( S $end
$var wire 1 >( X $end
$var wire 1 ?( Y $end
$var wire 1 @( xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[26] $end
$var parameter 6 A( i $end
$scope module SOMA $end
$var wire 1 B( Cin $end
$var wire 1 C( Cout $end
$var wire 1 D( S $end
$var wire 1 E( X $end
$var wire 1 F( Y $end
$var wire 1 G( xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[27] $end
$var parameter 6 H( i $end
$scope module SOMA $end
$var wire 1 I( Cin $end
$var wire 1 J( Cout $end
$var wire 1 K( S $end
$var wire 1 L( X $end
$var wire 1 M( Y $end
$var wire 1 N( xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[28] $end
$var parameter 6 O( i $end
$scope module SOMA $end
$var wire 1 P( Cin $end
$var wire 1 Q( Cout $end
$var wire 1 R( S $end
$var wire 1 S( X $end
$var wire 1 T( Y $end
$var wire 1 U( xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[29] $end
$var parameter 6 V( i $end
$scope module SOMA $end
$var wire 1 W( Cin $end
$var wire 1 X( Cout $end
$var wire 1 Y( S $end
$var wire 1 Z( X $end
$var wire 1 [( Y $end
$var wire 1 \( xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[30] $end
$var parameter 6 ]( i $end
$scope module SOMA $end
$var wire 1 ^( Cin $end
$var wire 1 _( Cout $end
$var wire 1 `( S $end
$var wire 1 a( X $end
$var wire 1 b( Y $end
$var wire 1 c( xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[31] $end
$var parameter 6 d( i $end
$scope module SOMA $end
$var wire 1 e( Cin $end
$var wire 1 f( Cout $end
$var wire 1 g( S $end
$var wire 1 h( X $end
$var wire 1 i( Y $end
$var wire 1 j( xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[32] $end
$var parameter 7 k( i $end
$scope module SOMA $end
$var wire 1 l( Cin $end
$var wire 1 m( Cout $end
$var wire 1 n( S $end
$var wire 1 o( X $end
$var wire 1 p( Y $end
$var wire 1 q( xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[33] $end
$var parameter 7 r( i $end
$scope module SOMA $end
$var wire 1 s( Cin $end
$var wire 1 t( Cout $end
$var wire 1 u( S $end
$var wire 1 v( X $end
$var wire 1 w( Y $end
$var wire 1 x( xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[34] $end
$var parameter 7 y( i $end
$scope module SOMA $end
$var wire 1 z( Cin $end
$var wire 1 {( Cout $end
$var wire 1 |( S $end
$var wire 1 }( X $end
$var wire 1 ~( Y $end
$var wire 1 !) xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[35] $end
$var parameter 7 ") i $end
$scope module SOMA $end
$var wire 1 #) Cin $end
$var wire 1 $) Cout $end
$var wire 1 %) S $end
$var wire 1 &) X $end
$var wire 1 ') Y $end
$var wire 1 () xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[36] $end
$var parameter 7 )) i $end
$scope module SOMA $end
$var wire 1 *) Cin $end
$var wire 1 +) Cout $end
$var wire 1 ,) S $end
$var wire 1 -) X $end
$var wire 1 .) Y $end
$var wire 1 /) xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[37] $end
$var parameter 7 0) i $end
$scope module SOMA $end
$var wire 1 1) Cin $end
$var wire 1 2) Cout $end
$var wire 1 3) S $end
$var wire 1 4) X $end
$var wire 1 5) Y $end
$var wire 1 6) xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[38] $end
$var parameter 7 7) i $end
$scope module SOMA $end
$var wire 1 8) Cin $end
$var wire 1 9) Cout $end
$var wire 1 :) S $end
$var wire 1 ;) X $end
$var wire 1 <) Y $end
$var wire 1 =) xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[39] $end
$var parameter 7 >) i $end
$scope module SOMA $end
$var wire 1 ?) Cin $end
$var wire 1 @) Cout $end
$var wire 1 A) S $end
$var wire 1 B) X $end
$var wire 1 C) Y $end
$var wire 1 D) xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[40] $end
$var parameter 7 E) i $end
$scope module SOMA $end
$var wire 1 F) Cin $end
$var wire 1 G) Cout $end
$var wire 1 H) S $end
$var wire 1 I) X $end
$var wire 1 J) Y $end
$var wire 1 K) xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[41] $end
$var parameter 7 L) i $end
$scope module SOMA $end
$var wire 1 M) Cin $end
$var wire 1 N) Cout $end
$var wire 1 O) S $end
$var wire 1 P) X $end
$var wire 1 Q) Y $end
$var wire 1 R) xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[42] $end
$var parameter 7 S) i $end
$scope module SOMA $end
$var wire 1 T) Cin $end
$var wire 1 U) Cout $end
$var wire 1 V) S $end
$var wire 1 W) X $end
$var wire 1 X) Y $end
$var wire 1 Y) xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[43] $end
$var parameter 7 Z) i $end
$scope module SOMA $end
$var wire 1 [) Cin $end
$var wire 1 \) Cout $end
$var wire 1 ]) S $end
$var wire 1 ^) X $end
$var wire 1 _) Y $end
$var wire 1 `) xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[44] $end
$var parameter 7 a) i $end
$scope module SOMA $end
$var wire 1 b) Cin $end
$var wire 1 c) Cout $end
$var wire 1 d) S $end
$var wire 1 e) X $end
$var wire 1 f) Y $end
$var wire 1 g) xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[45] $end
$var parameter 7 h) i $end
$scope module SOMA $end
$var wire 1 i) Cin $end
$var wire 1 j) Cout $end
$var wire 1 k) S $end
$var wire 1 l) X $end
$var wire 1 m) Y $end
$var wire 1 n) xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[46] $end
$var parameter 7 o) i $end
$scope module SOMA $end
$var wire 1 p) Cin $end
$var wire 1 q) Cout $end
$var wire 1 r) S $end
$var wire 1 s) X $end
$var wire 1 t) Y $end
$var wire 1 u) xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[47] $end
$var parameter 7 v) i $end
$scope module SOMA $end
$var wire 1 w) Cin $end
$var wire 1 x) Cout $end
$var wire 1 y) S $end
$var wire 1 z) X $end
$var wire 1 {) Y $end
$var wire 1 |) xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[48] $end
$var parameter 7 }) i $end
$scope module SOMA $end
$var wire 1 ~) Cin $end
$var wire 1 !* Cout $end
$var wire 1 "* S $end
$var wire 1 #* X $end
$var wire 1 $* Y $end
$var wire 1 %* xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[49] $end
$var parameter 7 &* i $end
$scope module SOMA $end
$var wire 1 '* Cin $end
$var wire 1 (* Cout $end
$var wire 1 )* S $end
$var wire 1 ** X $end
$var wire 1 +* Y $end
$var wire 1 ,* xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[50] $end
$var parameter 7 -* i $end
$scope module SOMA $end
$var wire 1 .* Cin $end
$var wire 1 /* Cout $end
$var wire 1 0* S $end
$var wire 1 1* X $end
$var wire 1 2* Y $end
$var wire 1 3* xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[51] $end
$var parameter 7 4* i $end
$scope module SOMA $end
$var wire 1 5* Cin $end
$var wire 1 6* Cout $end
$var wire 1 7* S $end
$var wire 1 8* X $end
$var wire 1 9* Y $end
$var wire 1 :* xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[52] $end
$var parameter 7 ;* i $end
$scope module SOMA $end
$var wire 1 <* Cin $end
$var wire 1 =* Cout $end
$var wire 1 >* S $end
$var wire 1 ?* X $end
$var wire 1 @* Y $end
$var wire 1 A* xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[53] $end
$var parameter 7 B* i $end
$scope module SOMA $end
$var wire 1 C* Cin $end
$var wire 1 D* Cout $end
$var wire 1 E* S $end
$var wire 1 F* X $end
$var wire 1 G* Y $end
$var wire 1 H* xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[54] $end
$var parameter 7 I* i $end
$scope module SOMA $end
$var wire 1 J* Cin $end
$var wire 1 K* Cout $end
$var wire 1 L* S $end
$var wire 1 M* X $end
$var wire 1 N* Y $end
$var wire 1 O* xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[55] $end
$var parameter 7 P* i $end
$scope module SOMA $end
$var wire 1 Q* Cin $end
$var wire 1 R* Cout $end
$var wire 1 S* S $end
$var wire 1 T* X $end
$var wire 1 U* Y $end
$var wire 1 V* xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[56] $end
$var parameter 7 W* i $end
$scope module SOMA $end
$var wire 1 X* Cin $end
$var wire 1 Y* Cout $end
$var wire 1 Z* S $end
$var wire 1 [* X $end
$var wire 1 \* Y $end
$var wire 1 ]* xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[57] $end
$var parameter 7 ^* i $end
$scope module SOMA $end
$var wire 1 _* Cin $end
$var wire 1 `* Cout $end
$var wire 1 a* S $end
$var wire 1 b* X $end
$var wire 1 c* Y $end
$var wire 1 d* xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[58] $end
$var parameter 7 e* i $end
$scope module SOMA $end
$var wire 1 f* Cin $end
$var wire 1 g* Cout $end
$var wire 1 h* S $end
$var wire 1 i* X $end
$var wire 1 j* Y $end
$var wire 1 k* xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[59] $end
$var parameter 7 l* i $end
$scope module SOMA $end
$var wire 1 m* Cin $end
$var wire 1 n* Cout $end
$var wire 1 o* S $end
$var wire 1 p* X $end
$var wire 1 q* Y $end
$var wire 1 r* xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[60] $end
$var parameter 7 s* i $end
$scope module SOMA $end
$var wire 1 t* Cin $end
$var wire 1 u* Cout $end
$var wire 1 v* S $end
$var wire 1 w* X $end
$var wire 1 x* Y $end
$var wire 1 y* xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[61] $end
$var parameter 7 z* i $end
$scope module SOMA $end
$var wire 1 {* Cin $end
$var wire 1 |* Cout $end
$var wire 1 }* S $end
$var wire 1 ~* X $end
$var wire 1 !+ Y $end
$var wire 1 "+ xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[62] $end
$var parameter 7 #+ i $end
$scope module SOMA $end
$var wire 1 $+ Cin $end
$var wire 1 %+ Cout $end
$var wire 1 &+ S $end
$var wire 1 '+ X $end
$var wire 1 (+ Y $end
$var wire 1 )+ xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[63] $end
$var parameter 7 *+ i $end
$scope module SOMA $end
$var wire 1 ++ Cin $end
$var wire 1 ,+ Cout $end
$var wire 1 -+ S $end
$var wire 1 .+ X $end
$var wire 1 /+ Y $end
$var wire 1 0+ xor1 $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope module regfile $end
$var wire 1 ! CLK $end
$var wire 64 1+ Da [63:0] $end
$var wire 64 2+ Db [63:0] $end
$var wire 64 3+ Din [63:0] $end
$var wire 5 4+ Ra [4:0] $end
$var wire 5 5+ Rb [4:0] $end
$var wire 5 6+ Rw [4:0] $end
$var wire 1 % WE $end
$var wire 32 7+ loaders [31:0] $end
$var parameter 32 8+ SIZE $end
$scope begin genblk1[1] $end
$var parameter 2 9+ i $end
$scope module xN $end
$var wire 1 ! CLK $end
$var wire 64 :+ IN [63:0] $end
$var wire 1 ;+ LOAD $end
$var parameter 32 <+ SIZE $end
$var reg 64 =+ OUT [63:0] $end
$upscope $end
$upscope $end
$scope begin genblk1[2] $end
$var parameter 3 >+ i $end
$scope module xN $end
$var wire 1 ! CLK $end
$var wire 64 ?+ IN [63:0] $end
$var wire 1 @+ LOAD $end
$var parameter 32 A+ SIZE $end
$var reg 64 B+ OUT [63:0] $end
$upscope $end
$upscope $end
$scope begin genblk1[3] $end
$var parameter 3 C+ i $end
$scope module xN $end
$var wire 1 ! CLK $end
$var wire 64 D+ IN [63:0] $end
$var wire 1 E+ LOAD $end
$var parameter 32 F+ SIZE $end
$var reg 64 G+ OUT [63:0] $end
$upscope $end
$upscope $end
$scope begin genblk1[4] $end
$var parameter 4 H+ i $end
$scope module xN $end
$var wire 1 ! CLK $end
$var wire 64 I+ IN [63:0] $end
$var wire 1 J+ LOAD $end
$var parameter 32 K+ SIZE $end
$var reg 64 L+ OUT [63:0] $end
$upscope $end
$upscope $end
$scope begin genblk1[5] $end
$var parameter 4 M+ i $end
$scope module xN $end
$var wire 1 ! CLK $end
$var wire 64 N+ IN [63:0] $end
$var wire 1 O+ LOAD $end
$var parameter 32 P+ SIZE $end
$var reg 64 Q+ OUT [63:0] $end
$upscope $end
$upscope $end
$scope begin genblk1[6] $end
$var parameter 4 R+ i $end
$scope module xN $end
$var wire 1 ! CLK $end
$var wire 64 S+ IN [63:0] $end
$var wire 1 T+ LOAD $end
$var parameter 32 U+ SIZE $end
$var reg 64 V+ OUT [63:0] $end
$upscope $end
$upscope $end
$scope begin genblk1[7] $end
$var parameter 4 W+ i $end
$scope module xN $end
$var wire 1 ! CLK $end
$var wire 64 X+ IN [63:0] $end
$var wire 1 Y+ LOAD $end
$var parameter 32 Z+ SIZE $end
$var reg 64 [+ OUT [63:0] $end
$upscope $end
$upscope $end
$scope begin genblk1[8] $end
$var parameter 5 \+ i $end
$scope module xN $end
$var wire 1 ! CLK $end
$var wire 64 ]+ IN [63:0] $end
$var wire 1 ^+ LOAD $end
$var parameter 32 _+ SIZE $end
$var reg 64 `+ OUT [63:0] $end
$upscope $end
$upscope $end
$scope begin genblk1[9] $end
$var parameter 5 a+ i $end
$scope module xN $end
$var wire 1 ! CLK $end
$var wire 64 b+ IN [63:0] $end
$var wire 1 c+ LOAD $end
$var parameter 32 d+ SIZE $end
$var reg 64 e+ OUT [63:0] $end
$upscope $end
$upscope $end
$scope begin genblk1[10] $end
$var parameter 5 f+ i $end
$scope module xN $end
$var wire 1 ! CLK $end
$var wire 64 g+ IN [63:0] $end
$var wire 1 h+ LOAD $end
$var parameter 32 i+ SIZE $end
$var reg 64 j+ OUT [63:0] $end
$upscope $end
$upscope $end
$scope begin genblk1[11] $end
$var parameter 5 k+ i $end
$scope module xN $end
$var wire 1 ! CLK $end
$var wire 64 l+ IN [63:0] $end
$var wire 1 m+ LOAD $end
$var parameter 32 n+ SIZE $end
$var reg 64 o+ OUT [63:0] $end
$upscope $end
$upscope $end
$scope begin genblk1[12] $end
$var parameter 5 p+ i $end
$scope module xN $end
$var wire 1 ! CLK $end
$var wire 64 q+ IN [63:0] $end
$var wire 1 r+ LOAD $end
$var parameter 32 s+ SIZE $end
$var reg 64 t+ OUT [63:0] $end
$upscope $end
$upscope $end
$scope begin genblk1[13] $end
$var parameter 5 u+ i $end
$scope module xN $end
$var wire 1 ! CLK $end
$var wire 64 v+ IN [63:0] $end
$var wire 1 w+ LOAD $end
$var parameter 32 x+ SIZE $end
$var reg 64 y+ OUT [63:0] $end
$upscope $end
$upscope $end
$scope begin genblk1[14] $end
$var parameter 5 z+ i $end
$scope module xN $end
$var wire 1 ! CLK $end
$var wire 64 {+ IN [63:0] $end
$var wire 1 |+ LOAD $end
$var parameter 32 }+ SIZE $end
$var reg 64 ~+ OUT [63:0] $end
$upscope $end
$upscope $end
$scope begin genblk1[15] $end
$var parameter 5 !, i $end
$scope module xN $end
$var wire 1 ! CLK $end
$var wire 64 ", IN [63:0] $end
$var wire 1 #, LOAD $end
$var parameter 32 $, SIZE $end
$var reg 64 %, OUT [63:0] $end
$upscope $end
$upscope $end
$scope begin genblk1[16] $end
$var parameter 6 &, i $end
$scope module xN $end
$var wire 1 ! CLK $end
$var wire 64 ', IN [63:0] $end
$var wire 1 (, LOAD $end
$var parameter 32 ), SIZE $end
$var reg 64 *, OUT [63:0] $end
$upscope $end
$upscope $end
$scope begin genblk1[17] $end
$var parameter 6 +, i $end
$scope module xN $end
$var wire 1 ! CLK $end
$var wire 64 ,, IN [63:0] $end
$var wire 1 -, LOAD $end
$var parameter 32 ., SIZE $end
$var reg 64 /, OUT [63:0] $end
$upscope $end
$upscope $end
$scope begin genblk1[18] $end
$var parameter 6 0, i $end
$scope module xN $end
$var wire 1 ! CLK $end
$var wire 64 1, IN [63:0] $end
$var wire 1 2, LOAD $end
$var parameter 32 3, SIZE $end
$var reg 64 4, OUT [63:0] $end
$upscope $end
$upscope $end
$scope begin genblk1[19] $end
$var parameter 6 5, i $end
$scope module xN $end
$var wire 1 ! CLK $end
$var wire 64 6, IN [63:0] $end
$var wire 1 7, LOAD $end
$var parameter 32 8, SIZE $end
$var reg 64 9, OUT [63:0] $end
$upscope $end
$upscope $end
$scope begin genblk1[20] $end
$var parameter 6 :, i $end
$scope module xN $end
$var wire 1 ! CLK $end
$var wire 64 ;, IN [63:0] $end
$var wire 1 <, LOAD $end
$var parameter 32 =, SIZE $end
$var reg 64 >, OUT [63:0] $end
$upscope $end
$upscope $end
$scope begin genblk1[21] $end
$var parameter 6 ?, i $end
$scope module xN $end
$var wire 1 ! CLK $end
$var wire 64 @, IN [63:0] $end
$var wire 1 A, LOAD $end
$var parameter 32 B, SIZE $end
$var reg 64 C, OUT [63:0] $end
$upscope $end
$upscope $end
$scope begin genblk1[22] $end
$var parameter 6 D, i $end
$scope module xN $end
$var wire 1 ! CLK $end
$var wire 64 E, IN [63:0] $end
$var wire 1 F, LOAD $end
$var parameter 32 G, SIZE $end
$var reg 64 H, OUT [63:0] $end
$upscope $end
$upscope $end
$scope begin genblk1[23] $end
$var parameter 6 I, i $end
$scope module xN $end
$var wire 1 ! CLK $end
$var wire 64 J, IN [63:0] $end
$var wire 1 K, LOAD $end
$var parameter 32 L, SIZE $end
$var reg 64 M, OUT [63:0] $end
$upscope $end
$upscope $end
$scope begin genblk1[24] $end
$var parameter 6 N, i $end
$scope module xN $end
$var wire 1 ! CLK $end
$var wire 64 O, IN [63:0] $end
$var wire 1 P, LOAD $end
$var parameter 32 Q, SIZE $end
$var reg 64 R, OUT [63:0] $end
$upscope $end
$upscope $end
$scope begin genblk1[25] $end
$var parameter 6 S, i $end
$scope module xN $end
$var wire 1 ! CLK $end
$var wire 64 T, IN [63:0] $end
$var wire 1 U, LOAD $end
$var parameter 32 V, SIZE $end
$var reg 64 W, OUT [63:0] $end
$upscope $end
$upscope $end
$scope begin genblk1[26] $end
$var parameter 6 X, i $end
$scope module xN $end
$var wire 1 ! CLK $end
$var wire 64 Y, IN [63:0] $end
$var wire 1 Z, LOAD $end
$var parameter 32 [, SIZE $end
$var reg 64 \, OUT [63:0] $end
$upscope $end
$upscope $end
$scope begin genblk1[27] $end
$var parameter 6 ], i $end
$scope module xN $end
$var wire 1 ! CLK $end
$var wire 64 ^, IN [63:0] $end
$var wire 1 _, LOAD $end
$var parameter 32 `, SIZE $end
$var reg 64 a, OUT [63:0] $end
$upscope $end
$upscope $end
$scope begin genblk1[28] $end
$var parameter 6 b, i $end
$scope module xN $end
$var wire 1 ! CLK $end
$var wire 64 c, IN [63:0] $end
$var wire 1 d, LOAD $end
$var parameter 32 e, SIZE $end
$var reg 64 f, OUT [63:0] $end
$upscope $end
$upscope $end
$scope begin genblk1[29] $end
$var parameter 6 g, i $end
$scope module xN $end
$var wire 1 ! CLK $end
$var wire 64 h, IN [63:0] $end
$var wire 1 i, LOAD $end
$var parameter 32 j, SIZE $end
$var reg 64 k, OUT [63:0] $end
$upscope $end
$upscope $end
$scope begin genblk1[30] $end
$var parameter 6 l, i $end
$scope module xN $end
$var wire 1 ! CLK $end
$var wire 64 m, IN [63:0] $end
$var wire 1 n, LOAD $end
$var parameter 32 o, SIZE $end
$var reg 64 p, OUT [63:0] $end
$upscope $end
$upscope $end
$scope begin genblk1[31] $end
$var parameter 6 q, i $end
$scope module xN $end
$var wire 1 ! CLK $end
$var wire 64 r, IN [63:0] $end
$var wire 1 s, LOAD $end
$var parameter 32 t, SIZE $end
$var reg 64 u, OUT [63:0] $end
$upscope $end
$upscope $end
$scope module LOAD_DECODER $end
$var wire 1 % EN $end
$var wire 5 v, IN [4:0] $end
$var wire 32 w, OUT [31:0] $end
$var wire 4 x, EN1 [3:0] $end
$scope module DEC2_4 $end
$var wire 1 % EN $end
$var wire 2 y, IN [1:0] $end
$var wire 4 z, OUT [3:0] $end
$upscope $end
$scope module DEC3_8__1 $end
$var wire 1 {, EN $end
$var wire 3 |, IN [2:0] $end
$var wire 8 }, OUT [7:0] $end
$upscope $end
$scope module DEC3_8__2 $end
$var wire 1 ~, EN $end
$var wire 3 !- IN [2:0] $end
$var wire 8 "- OUT [7:0] $end
$upscope $end
$scope module DEC3_8__3 $end
$var wire 1 #- EN $end
$var wire 3 $- IN [2:0] $end
$var wire 8 %- OUT [7:0] $end
$upscope $end
$scope module DEC3_8__4 $end
$var wire 1 &- EN $end
$var wire 3 '- IN [2:0] $end
$var wire 8 (- OUT [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
b1000000 t,
b11111 q,
b1000000 o,
b11110 l,
b1000000 j,
b11101 g,
b1000000 e,
b11100 b,
b1000000 `,
b11011 ],
b1000000 [,
b11010 X,
b1000000 V,
b11001 S,
b1000000 Q,
b11000 N,
b1000000 L,
b10111 I,
b1000000 G,
b10110 D,
b1000000 B,
b10101 ?,
b1000000 =,
b10100 :,
b1000000 8,
b10011 5,
b1000000 3,
b10010 0,
b1000000 .,
b10001 +,
b1000000 ),
b10000 &,
b1000000 $,
b1111 !,
b1000000 }+
b1110 z+
b1000000 x+
b1101 u+
b1000000 s+
b1100 p+
b1000000 n+
b1011 k+
b1000000 i+
b1010 f+
b1000000 d+
b1001 a+
b1000000 _+
b1000 \+
b1000000 Z+
b111 W+
b1000000 U+
b110 R+
b1000000 P+
b101 M+
b1000000 K+
b100 H+
b1000000 F+
b11 C+
b1000000 A+
b10 >+
b1000000 <+
b1 9+
b1000000 8+
b111111 *+
b111110 #+
b111101 z*
b111100 s*
b111011 l*
b111010 e*
b111001 ^*
b111000 W*
b110111 P*
b110110 I*
b110101 B*
b110100 ;*
b110011 4*
b110010 -*
b110001 &*
b110000 })
b101111 v)
b101110 o)
b101101 h)
b101100 a)
b101011 Z)
b101010 S)
b101001 L)
b101000 E)
b100111 >)
b100110 7)
b100101 0)
b100100 ))
b100011 ")
b100010 y(
b100001 r(
b100000 k(
b11111 d(
b11110 ](
b11101 V(
b11100 O(
b11011 H(
b11010 A(
b11001 :(
b11000 3(
b10111 ,(
b10110 %(
b10101 |'
b10100 u'
b10011 n'
b10010 g'
b10001 `'
b10000 Y'
b1111 R'
b1110 K'
b1101 D'
b1100 ='
b1011 6'
b1010 /'
b1001 ('
b1000 !'
b111 x&
b110 q&
b101 j&
b100 c&
b11 \&
b10 U&
b1 N&
b0 G&
b1000000 F&
b1000000 ?&
b111111 5&
b111110 .&
b111101 '&
b111100 ~%
b111011 w%
b111010 p%
b111001 i%
b111000 b%
b110111 [%
b110110 T%
b110101 M%
b110100 F%
b110011 ?%
b110010 8%
b110001 1%
b110000 *%
b101111 #%
b101110 z$
b101101 s$
b101100 l$
b101011 e$
b101010 ^$
b101001 W$
b101000 P$
b100111 I$
b100110 B$
b100101 ;$
b100100 4$
b100011 -$
b100010 &$
b100001 }#
b100000 v#
b11111 o#
b11110 h#
b11101 a#
b11100 Z#
b11011 S#
b11010 L#
b11001 E#
b11000 >#
b10111 7#
b10110 0#
b10101 )#
b10100 "#
b10011 y"
b10010 r"
b10001 k"
b10000 d"
b1111 ]"
b1110 V"
b1101 O"
b1100 H"
b1011 A"
b1010 :"
b1001 3"
b1000 ,"
b111 %"
b110 |
b101 u
b100 n
b11 g
b10 `
b1 Y
b0 R
b1000000 Q
b1000000 H
b100000 @
b1000000 ;
b100000 :
$end
#0
$dumpvars
bx (-
bx '-
x&-
bx %-
bx $-
x#-
bx "-
bx !-
x~,
bx },
bx |,
x{,
bx z,
bx y,
bx x,
bx w,
bx v,
bx u,
xs,
bx r,
bx p,
xn,
bx m,
bx k,
xi,
bx h,
bx f,
xd,
bx c,
bx a,
x_,
bx ^,
bx \,
xZ,
bx Y,
bx W,
xU,
bx T,
bx R,
xP,
bx O,
bx M,
xK,
bx J,
bx H,
xF,
bx E,
bx C,
xA,
bx @,
bx >,
x<,
bx ;,
bx 9,
x7,
bx 6,
bx 4,
x2,
bx 1,
bx /,
x-,
bx ,,
bx *,
x(,
bx ',
bx %,
x#,
bx ",
bx ~+
x|+
bx {+
bx y+
xw+
bx v+
bx t+
xr+
bx q+
bx o+
xm+
bx l+
bx j+
xh+
bx g+
bx e+
xc+
bx b+
bx `+
x^+
bx ]+
bx [+
xY+
bx X+
bx V+
xT+
bx S+
bx Q+
xO+
bx N+
bx L+
xJ+
bx I+
bx G+
xE+
bx D+
bx B+
x@+
bx ?+
bx =+
x;+
bx :+
bx 7+
bx 6+
bx 5+
bx 4+
bx 3+
bx 2+
bx 1+
x0+
x/+
x.+
x-+
x,+
x++
x)+
x(+
x'+
x&+
x%+
x$+
x"+
x!+
x~*
x}*
x|*
x{*
xy*
xx*
xw*
xv*
xu*
xt*
xr*
xq*
xp*
xo*
xn*
xm*
xk*
xj*
xi*
xh*
xg*
xf*
xd*
xc*
xb*
xa*
x`*
x_*
x]*
x\*
x[*
xZ*
xY*
xX*
xV*
xU*
xT*
xS*
xR*
xQ*
xO*
xN*
xM*
xL*
xK*
xJ*
xH*
xG*
xF*
xE*
xD*
xC*
xA*
x@*
x?*
x>*
x=*
x<*
x:*
x9*
x8*
x7*
x6*
x5*
x3*
x2*
x1*
x0*
x/*
x.*
x,*
x+*
x**
x)*
x(*
x'*
x%*
x$*
x#*
x"*
x!*
x~)
x|)
x{)
xz)
xy)
xx)
xw)
xu)
xt)
xs)
xr)
xq)
xp)
xn)
xm)
xl)
xk)
xj)
xi)
xg)
xf)
xe)
xd)
xc)
xb)
x`)
x_)
x^)
x])
x\)
x[)
xY)
xX)
xW)
xV)
xU)
xT)
xR)
xQ)
xP)
xO)
xN)
xM)
xK)
xJ)
xI)
xH)
xG)
xF)
xD)
xC)
xB)
xA)
x@)
x?)
x=)
x<)
x;)
x:)
x9)
x8)
x6)
x5)
x4)
x3)
x2)
x1)
x/)
x.)
x-)
x,)
x+)
x*)
x()
x')
x&)
x%)
x$)
x#)
x!)
x~(
x}(
x|(
x{(
xz(
xx(
xw(
xv(
xu(
xt(
xs(
xq(
xp(
xo(
xn(
xm(
xl(
xj(
xi(
xh(
xg(
xf(
xe(
xc(
xb(
xa(
x`(
x_(
x^(
x\(
x[(
xZ(
xY(
xX(
xW(
xU(
xT(
xS(
xR(
xQ(
xP(
xN(
xM(
xL(
xK(
xJ(
xI(
xG(
xF(
xE(
xD(
xC(
xB(
x@(
x?(
x>(
x=(
x<(
x;(
x9(
x8(
x7(
x6(
x5(
x4(
x2(
x1(
x0(
x/(
x.(
x-(
x+(
x*(
x)(
x((
x'(
x&(
x$(
x#(
x"(
x!(
x~'
x}'
x{'
xz'
xy'
xx'
xw'
xv'
xt'
xs'
xr'
xq'
xp'
xo'
xm'
xl'
xk'
xj'
xi'
xh'
xf'
xe'
xd'
xc'
xb'
xa'
x_'
x^'
x]'
x\'
x['
xZ'
xX'
xW'
xV'
xU'
xT'
xS'
xQ'
xP'
xO'
xN'
xM'
xL'
xJ'
xI'
xH'
xG'
xF'
xE'
xC'
xB'
xA'
x@'
x?'
x>'
x<'
x;'
x:'
x9'
x8'
x7'
x5'
x4'
x3'
x2'
x1'
x0'
x.'
x-'
x,'
x+'
x*'
x)'
x''
x&'
x%'
x$'
x#'
x"'
x~&
x}&
x|&
x{&
xz&
xy&
xw&
xv&
xu&
xt&
xs&
xr&
xp&
xo&
xn&
xm&
xl&
xk&
xi&
xh&
xg&
xf&
xe&
xd&
xb&
xa&
x`&
x_&
x^&
x]&
x[&
xZ&
xY&
xX&
xW&
xV&
xT&
xS&
xR&
xQ&
xP&
xO&
xM&
xL&
xK&
xJ&
xI&
xH&
bx E&
bx D&
bx C&
xB&
bx A&
z@&
bx >&
bx =&
bx <&
0;&
0:&
09&
08&
07&
06&
04&
03&
02&
01&
00&
0/&
0-&
0,&
0+&
0*&
0)&
0(&
0&&
0%&
0$&
0#&
0"&
0!&
0}%
0|%
0{%
0z%
0y%
0x%
0v%
0u%
0t%
0s%
0r%
0q%
0o%
0n%
0m%
0l%
0k%
0j%
0h%
0g%
0f%
0e%
0d%
0c%
0a%
0`%
0_%
0^%
0]%
0\%
0Z%
0Y%
0X%
0W%
0V%
0U%
0S%
0R%
0Q%
0P%
0O%
0N%
0L%
0K%
0J%
0I%
0H%
0G%
0E%
0D%
0C%
0B%
0A%
0@%
0>%
0=%
0<%
0;%
0:%
09%
07%
06%
05%
04%
03%
02%
00%
0/%
0.%
0-%
0,%
0+%
0)%
0(%
0'%
0&%
0%%
0$%
0"%
0!%
0~$
0}$
0|$
0{$
0y$
0x$
0w$
0v$
0u$
0t$
0r$
0q$
0p$
0o$
0n$
0m$
0k$
0j$
0i$
0h$
0g$
0f$
0d$
0c$
0b$
0a$
0`$
0_$
0]$
0\$
0[$
0Z$
0Y$
0X$
0V$
0U$
0T$
0S$
0R$
0Q$
0O$
0N$
0M$
0L$
0K$
0J$
0H$
0G$
0F$
0E$
0D$
0C$
0A$
0@$
0?$
0>$
0=$
0<$
0:$
09$
08$
07$
06$
05$
03$
02$
01$
00$
0/$
0.$
0,$
0+$
0*$
0)$
0($
0'$
0%$
0$$
0#$
0"$
0!$
0~#
0|#
0{#
0z#
0y#
0x#
0w#
0u#
0t#
0s#
0r#
0q#
0p#
0n#
0m#
0l#
0k#
0j#
0i#
0g#
0f#
0e#
0d#
0c#
0b#
0`#
0_#
0^#
0]#
0\#
0[#
0Y#
0X#
0W#
0V#
0U#
0T#
0R#
0Q#
0P#
0O#
0N#
0M#
0K#
0J#
0I#
0H#
0G#
0F#
0D#
0C#
0B#
0A#
0@#
0?#
0=#
0<#
0;#
0:#
09#
08#
06#
05#
04#
03#
02#
01#
0/#
0.#
0-#
0,#
0+#
0*#
0(#
0'#
0&#
0%#
0$#
0##
0!#
0~"
0}"
0|"
0{"
0z"
0x"
0w"
0v"
0u"
0t"
0s"
0q"
0p"
0o"
0n"
0m"
0l"
0j"
0i"
0h"
0g"
0f"
0e"
0c"
0b"
0a"
0`"
0_"
0^"
0\"
0["
0Z"
0Y"
0X"
0W"
0U"
0T"
0S"
0R"
0Q"
0P"
0N"
0M"
0L"
0K"
0J"
0I"
0G"
0F"
0E"
0D"
0C"
0B"
0@"
0?"
0>"
0="
0<"
0;"
09"
08"
07"
06"
05"
04"
02"
01"
00"
0/"
0."
0-"
0+"
0*"
0)"
0("
0'"
0&"
0$"
0#"
0""
0!"
0~
0}
0{
0z
0y
0x
0w
0v
0t
0s
0r
0q
0p
0o
0m
0l
0k
0j
0i
0h
0f
0e
0d
0c
0b
0a
0_
0^
0]
0\
0[
0Z
1X
1W
0V
1U
0T
0S
b1 P
b0 O
0N
b1 M
b0 L
zK
0J
b0 I
b1 G
b0 F
b1 E
0D
b1 C
bx B
bx A
1?
b1000000000010000010000011 >
b0 =
b1000000000010000010000011 <
bx 9
bx 8
bx 7
bx 6
bx 5
bx 4
bx 3
bx 2
bx 1
b0 0
bx /
bx .
b1000000000010000010000011 -
bx ,
bx +
bx *
bx )
1(
x'
1&
x%
x$
x#
x"
0!
$end
#5
0-,
0c+
0U,
0i,
0A,
0w+
0O+
0~,
0P,
0Z,
0_,
0d,
0n,
0s,
0(,
02,
07,
0<,
0F,
0K,
0^+
0h+
0m+
0r+
0|+
0#,
0@+
0E+
0J+
0T+
0Y+
0#-
0{,
b0 },
b0 "-
b0 %-
b0x0 7+
b0x0 w,
b0x0 (-
b0x x,
b0x z,
b10000 1
b10000 B
b0 y,
b1 |,
b1 !-
b1 $-
b1 '-
0.+
0'+
0~*
0w*
0p*
0i*
0b*
0[*
0T*
0M*
0F*
0?*
08*
01*
0**
0#*
0z)
0s)
0l)
0e)
0^)
0W)
0P)
0I)
0B)
0;)
04)
0-)
0&)
0}(
0v(
0o(
0h(
0a(
0Z(
0S(
0L(
0E(
0>(
07(
00(
0)(
0"(
0y'
0r'
0k'
0d'
0]'
0V'
0O'
0H'
0A'
0:'
03'
0,'
0%'
0|&
0u&
0n&
0g&
0`&
0Y&
0R&
0K&
b10000 /
b1 ,
b1 6+
b1 v,
b0 5
b0 =&
b0 D&
b0 1+
b0 +
b0 4+
b10000 *
b10000 5+
b1000000000010000010000011 .
b1000000000010000010000011 A
1!
#10
1\
1Z
b10 E
b10 G
b10 P
0U
b10 O
1T
0X
1V
b1010100000010000100000011 -
b1010100000010000100000011 <
b1010100000010000100000011 >
b1 0
b1 =
b1 F
b1 I
b1 L
0m&
b1011011011 3
b1011011011 3+
b1011011011 :+
b1011011011 ?+
b1011011011 D+
b1011011011 I+
b1011011011 N+
b1011011011 S+
b1011011011 X+
b1011011011 ]+
b1011011011 b+
b1011011011 g+
b1011011011 l+
b1011011011 q+
b1011011011 v+
b1011011011 {+
b1011011011 ",
b1011011011 ',
b1011011011 ,,
b1011011011 1,
b1011011011 6,
b1011011011 ;,
b1011011011 @,
b1011011011 E,
b1011011011 J,
b1011011011 O,
b1011011011 T,
b1011011011 Y,
b1011011011 ^,
b1011011011 c,
b1011011011 h,
b1011011011 m,
b1011011011 r,
0k&
b1011011011 6
b1011011011 8
0e&
1;+
0X&
0_&
1f&
0t&
0{&
0$'
0+'
02'
09'
0@'
0G'
0N'
0U'
0\'
0c'
0j'
0q'
0x'
0!(
0((
0/(
06(
0=(
0D(
0K(
0R(
0Y(
0`(
0g(
0n(
0u(
0|(
0%)
0,)
03)
0:)
0A)
0H)
0O)
0V)
0])
0d)
0k)
0r)
0y)
0"*
0)*
00*
07*
0>*
0E*
0L*
0S*
0Z*
0a*
0h*
0o*
0v*
0}*
0&+
0-+
b10 7+
b10 w,
b10 (-
0V&
0]&
0d&
0r&
0y&
0"'
0)'
00'
07'
0>'
0E'
0L'
0S'
0Z'
0a'
0h'
0o'
0v'
0}'
0&(
0-(
04(
0;(
0B(
0I(
0P(
0W(
0^(
0e(
0l(
0s(
0z(
0#)
0*)
01)
08)
0?)
0F)
0M)
0T)
0[)
0b)
0i)
0p)
0w)
0~)
0'*
0.*
05*
0<*
0C*
0J*
0Q*
0X*
0_*
0f*
0m*
0t*
0{*
0$+
0++
0B&
b10000 7
0P&
0W&
0^&
0l&
0s&
0z&
0#'
0*'
01'
08'
0?'
0F'
0M'
0T'
0['
0b'
0i'
0p'
0w'
0~'
0'(
0.(
05(
0<(
0C(
0J(
0Q(
0X(
0_(
0f(
0m(
0t(
0{(
0$)
0+)
02)
09)
0@)
0G)
0N)
0U)
0\)
0c)
0j)
0q)
0x)
0!*
0(*
0/*
06*
0=*
0D*
0K*
0R*
0Y*
0`*
0g*
0n*
0u*
0|*
0%+
0,+
0J&
b10000 )
b10000 >&
b10000 E&
0Q&
0O&
1&-
0M&
0T&
0[&
0b&
1i&
0p&
0w&
0~&
0''
0.'
05'
0<'
0C'
0J'
0Q'
0X'
0_'
0f'
0m'
0t'
0{'
0$(
0+(
02(
09(
0@(
0G(
0N(
0U(
0\(
0c(
0j(
0q(
0x(
0!)
0()
0/)
06)
0=)
0D)
0K)
0R)
0Y)
0`)
0g)
0n)
0u)
0|)
0%*
0,*
03*
0:*
0A*
0H*
0O*
0V*
0]*
0d*
0k*
0r*
0y*
0"+
0)+
00+
0I&
b1 x,
b1 z,
0L&
0S&
0Z&
0a&
1h&
0o&
0v&
0}&
0&'
0-'
04'
0;'
0B'
0I'
0P'
0W'
0^'
0e'
0l'
0s'
0z'
0#(
0*(
01(
08(
0?(
0F(
0M(
0T(
0[(
0b(
0i(
0p(
0w(
0~(
0')
0.)
05)
0<)
0C)
0J)
0Q)
0X)
0_)
0f)
0m)
0t)
0{)
0$*
0+*
02*
09*
0@*
0G*
0N*
0U*
0\*
0c*
0j*
0q*
0x*
0!+
0(+
0/+
b10000 A&
0H&
b10000 2
b10000 <&
0!
0$
1%
b0 C&
0'
0"
1#
0&
#15
b100111000 3
b100111000 3+
b100111000 :+
b100111000 ?+
b100111000 D+
b100111000 I+
b100111000 N+
b100111000 S+
b100111000 X+
b100111000 ]+
b100111000 b+
b100111000 g+
b100111000 l+
b100111000 q+
b100111000 v+
b100111000 {+
b100111000 ",
b100111000 ',
b100111000 ,,
b100111000 1,
b100111000 6,
b100111000 ;,
b100111000 @,
b100111000 E,
b100111000 J,
b100111000 O,
b100111000 T,
b100111000 Y,
b100111000 ^,
b100111000 c,
b100111000 h,
b100111000 m,
b100111000 r,
b100111000 6
b100111000 8
b10101 7
1J&
b10101 )
b10101 >&
b10101 E&
1X&
1M&
1[&
1@+
1L&
1Z&
0;+
b10101 A&
b100 7+
b100 w,
b100 (-
b10101 2
b10101 <&
b10101 1
b10101 B
b10 |,
b10 !-
b10 $-
b10 '-
b10101 /
b10 ,
b10 6+
b10 v,
b10101 *
b10101 5+
b1010100000010000100000011 .
b1010100000010000100000011 A
b1011011011 =+
1!
#20
0c
0a
0Z
0[
1U
b0 O
0T
b11 E
b11 G
b11 P
1\
1X
1_
0V
1]
b1000001000000110110011 -
b1000001000000110110011 <
b1000001000000110110011 >
b10 0
b10 =
b10 F
b10 I
b10 L
0!
#25
1V&
1X&
1P&
0[&
0@+
0m&
bx 3
bx 3+
bx :+
bx ?+
bx D+
bx I+
bx N+
bx S+
bx X+
bx ]+
bx b+
bx g+
bx l+
bx q+
bx v+
bx {+
bx ",
bx ',
bx ,,
bx 1,
bx 6,
bx ;,
bx @,
bx E,
bx J,
bx O,
bx T,
bx Y,
bx ^,
bx c,
bx h,
bx m,
bx r,
0L&
1S&
0Z&
0h&
1E+
0k&
bx 6
bx 8
b11101 7
0O&
b10 A&
b1000 7+
b1000 w,
b1000 (-
1+'
1{&
1t&
1f&
0e&
1_&
0Q&
b1011011101 )
b1011011101 >&
b1011011101 E&
1J&
b100 C&
0I&
b10 2
b10 <&
1.'
1~&
1w&
1i&
1b&
0T&
1M&
b10 1
b10 B
b11 |,
b11 !-
b11 $-
b11 '-
1,'
1|&
1u&
1g&
1`&
1R&
1K&
b10 /
b11 ,
b11 6+
b11 v,
b1011011011 5
b1011011011 =&
b1011011011 D&
b1011011011 1+
b1 +
b1 4+
b100111000 4
b100111000 9
b100111000 2+
b10 *
b10 5+
b100111000 B+
b1000001000000110110011 .
b1000001000000110110011 A
1!
#30
1c
1a
1[
0\
1Z
b100 E
b100 G
b100 P
0U
b110 O
1T
0X
1V
b1000000000100010000001000110011 -
b1000000000100010000001000110011 <
b1000000000100010000001000110011 >
b11 0
b11 =
b11 F
b11 I
b11 L
12'
10'
1*'
0+'
1)'
1#'
1"'
1z&
0{&
1y&
1s&
0t&
1r&
1l&
0X&
0V&
1d&
b10011 7
1k&
1Q&
0P&
0_&
1^&
1f&
b11111110000 C&
1e&
0m&
b10000010011 )
b10000010011 >&
b10000010011 E&
0$'
1T&
0b&
0i&
1p&
1''
0S&
1a&
1h&
1o&
1&'
b100111000 A&
b10000010011 3
b10000010011 3+
b10000010011 :+
b10000010011 ?+
b10000010011 D+
b10000010011 I+
b10000010011 N+
b10000010011 S+
b10000010011 X+
b10000010011 ]+
b10000010011 b+
b10000010011 g+
b10000010011 l+
b10000010011 q+
b10000010011 v+
b10000010011 {+
b10000010011 ",
b10000010011 ',
b10000010011 ,,
b10000010011 1,
b10000010011 6,
b10000010011 ;,
b10000010011 @,
b10000010011 E,
b10000010011 J,
b10000010011 O,
b10000010011 T,
b10000010011 Y,
b10000010011 ^,
b10000010011 c,
b10000010011 h,
b10000010011 m,
b10000010011 r,
b100111000 2
b100111000 <&
0!
1"
0#
#35
1J+
12'
10'
1)'
1"'
1y&
1r&
0E+
1*'
1#'
1z&
1s&
b11111110000 C&
1l&
bx 6
bx 8
b10011 7
b10000010011 3
b10000010011 3+
b10000010011 :+
b10000010011 ?+
b10000010011 D+
b10000010011 I+
b10000010011 N+
b10000010011 S+
b10000010011 X+
b10000010011 ]+
b10000010011 b+
b10000010011 g+
b10000010011 l+
b10000010011 q+
b10000010011 v+
b10000010011 {+
b10000010011 ",
b10000010011 ',
b10000010011 ,,
b10000010011 1,
b10000010011 6,
b10000010011 ;,
b10000010011 @,
b10000010011 E,
b10000010011 J,
b10000010011 O,
b10000010011 T,
b10000010011 Y,
b10000010011 ^,
b10000010011 c,
b10000010011 h,
b10000010011 m,
b10000010011 r,
b10000 7+
b10000 w,
b10000 (-
0+'
0$'
0{&
0t&
0m&
1Q&
b10000010011 )
b10000010011 >&
b10000010011 E&
1J&
1L&
1S&
0o&
1v&
1}&
0&'
1-'
1.'
1''
1~&
1w&
1p&
1T&
1M&
b1011011011 A&
b10000000001 1
b10000000001 B
b100 |,
b100 !-
b100 $-
b100 '-
0,'
1%'
0|&
0u&
1n&
0R&
0K&
b1011011011 2
b1011011011 <&
b10000000001 /
b100 ,
b100 6+
b100 v,
b100111000 5
b100111000 =&
b100111000 D&
b100111000 1+
b10 +
b10 4+
b1011011011 4
b1011011011 9
b1011011011 2+
b1 *
b1 5+
b1000000000100010000001000110011 .
b1000000000100010000001000110011 A
b10000010011 G+
1!
#40
0j
0a
0h
0Z
0[
0b
1U
b0 O
0T
0\
b101 E
b101 G
b101 P
1c
1X
0_
1f
0V
0]
1d
b10000000010100100100011 -
b10000000010100100100011 <
b10000000010100100100011 >
b100 0
b100 =
b100 F
b100 I
b100 L
0B&
0,+
0++
0%+
0$+
0|*
0{*
0u*
0t*
0n*
0m*
0g*
0f*
0`*
0_*
0Y*
0X*
0R*
0Q*
0K*
0J*
0D*
0C*
0=*
0<*
06*
05*
0/*
0.*
0(*
0'*
0!*
0~)
0x)
0w)
0q)
0p)
0j)
0i)
0c)
0b)
0\)
0[)
0U)
0T)
0N)
0M)
0G)
0F)
0@)
0?)
09)
08)
02)
01)
0+)
0*)
0$)
0#)
0{(
0z(
0t(
0s(
0m(
0l(
0f(
0e(
0_(
0^(
0X(
0W(
0Q(
0P(
0J(
0I(
0C(
0B(
0<(
0;(
05(
04(
0.(
0-(
0'(
0&(
0~'
0}'
0w'
0v'
0p'
0o'
0i'
0h'
0b'
0a'
0['
0Z'
0T'
0S'
0M'
0L'
0F'
0E'
0?'
0>'
08'
0Q&
0y&
0"'
00'
07'
0d&
0k&
0s&
0z&
0*'
01'
1X&
1_&
0^&
1f&
0e&
0m&
1t&
0{&
0$'
1+'
12'
19'
1@'
1G'
1N'
1U'
1\'
1c'
1j'
1q'
1x'
1!(
1((
1/(
16(
1=(
1D(
1K(
1R(
1Y(
1`(
1g(
1n(
1u(
1|(
1%)
1,)
13)
1:)
1A)
1H)
1O)
1V)
1])
1d)
1k)
1r)
1y)
1"*
1)*
10*
17*
1>*
1E*
1L*
1S*
1Z*
1a*
1h*
1o*
1v*
1}*
1&+
1-+
0O&
0M&
0T&
1[&
1b&
1i&
0p&
0w&
0~&
0''
0.'
15'
1<'
1C'
1J'
1Q'
1X'
1_'
1f'
1m'
1t'
1{'
1$(
1+(
12(
19(
1@(
1G(
1N(
1U(
1\(
1c(
1j(
1q(
1x(
1!)
1()
1/)
16)
1=)
1D)
1K)
1R)
1Y)
1`)
1g)
1n)
1u)
1|)
1%*
1,*
13*
1:*
1A*
1H*
1O*
1V*
1]*
1d*
1k*
1r*
1y*
1"+
1)+
10+
b11101 7
b1111111111111111111111111111111111111111111111111111111001011101 3
b1111111111111111111111111111111111111111111111111111111001011101 3+
b1111111111111111111111111111111111111111111111111111111001011101 :+
b1111111111111111111111111111111111111111111111111111111001011101 ?+
b1111111111111111111111111111111111111111111111111111111001011101 D+
b1111111111111111111111111111111111111111111111111111111001011101 I+
b1111111111111111111111111111111111111111111111111111111001011101 N+
b1111111111111111111111111111111111111111111111111111111001011101 S+
b1111111111111111111111111111111111111111111111111111111001011101 X+
b1111111111111111111111111111111111111111111111111111111001011101 ]+
b1111111111111111111111111111111111111111111111111111111001011101 b+
b1111111111111111111111111111111111111111111111111111111001011101 g+
b1111111111111111111111111111111111111111111111111111111001011101 l+
b1111111111111111111111111111111111111111111111111111111001011101 q+
b1111111111111111111111111111111111111111111111111111111001011101 v+
b1111111111111111111111111111111111111111111111111111111001011101 {+
b1111111111111111111111111111111111111111111111111111111001011101 ",
b1111111111111111111111111111111111111111111111111111111001011101 ',
b1111111111111111111111111111111111111111111111111111111001011101 ,,
b1111111111111111111111111111111111111111111111111111111001011101 1,
b1111111111111111111111111111111111111111111111111111111001011101 6,
b1111111111111111111111111111111111111111111111111111111001011101 ;,
b1111111111111111111111111111111111111111111111111111111001011101 @,
b1111111111111111111111111111111111111111111111111111111001011101 E,
b1111111111111111111111111111111111111111111111111111111001011101 J,
b1111111111111111111111111111111111111111111111111111111001011101 O,
b1111111111111111111111111111111111111111111111111111111001011101 T,
b1111111111111111111111111111111111111111111111111111111001011101 Y,
b1111111111111111111111111111111111111111111111111111111001011101 ^,
b1111111111111111111111111111111111111111111111111111111001011101 c,
b1111111111111111111111111111111111111111111111111111111001011101 h,
b1111111111111111111111111111111111111111111111111111111001011101 m,
b1111111111111111111111111111111111111111111111111111111001011101 r,
0I&
0L&
0S&
1Z&
0a&
0h&
1o&
0v&
0}&
1&'
0-'
14'
1;'
1B'
1I'
1P'
1W'
1^'
1e'
1l'
1s'
1z'
1#(
1*(
11(
18(
1?(
1F(
1M(
1T(
1[(
1b(
1i(
1p(
1w(
1~(
1')
1.)
15)
1<)
1C)
1J)
1Q)
1X)
1_)
1f)
1m)
1t)
1{)
1$*
1+*
12*
19*
1@*
1G*
1N*
1U*
1\*
1c*
1j*
1q*
1x*
1!+
1(+
1/+
b1111111111111111111111111111111111111111111111111111111001011101 )
b1111111111111111111111111111111111111111111111111111111001011101 >&
b1111111111111111111111111111111111111111111111111111111001011101 E&
1J&
b1111111111111111111111111111111111111111111111111111110100100100 A&
1H&
0!
b1001000001 C&
1'
#45
12,
b100 "-
0@+
0&-
0J+
1~,
0T+
0+'
0t&
1Q&
0X&
1{&
02'
09'
0@'
0G'
0N'
0U'
0\'
0c'
0j'
0q'
0x'
0!(
0((
0/(
06(
0=(
0D(
0K(
0R(
0Y(
0`(
0g(
0n(
0u(
0|(
0%)
0,)
03)
0:)
0A)
0H)
0O)
0V)
0])
0d)
0k)
0r)
0y)
0"*
0)*
00*
07*
0>*
0E*
0L*
0S*
0Z*
0a*
0h*
0o*
0v*
0}*
0&+
0-+
b100 x,
b100 z,
b1000000000000000000 7+
b1000000000000000000 w,
b0 (-
0)'
0r&
b11 7
b110100011 3
b110100011 3+
b110100011 :+
b110100011 ?+
b110100011 D+
b110100011 I+
b110100011 N+
b110100011 S+
b110100011 X+
b110100011 ]+
b110100011 b+
b110100011 g+
b110100011 l+
b110100011 q+
b110100011 v+
b110100011 {+
b110100011 ",
b110100011 ',
b110100011 ,,
b110100011 1,
b110100011 6,
b110100011 ;,
b110100011 @,
b110100011 E,
b110100011 J,
b110100011 O,
b110100011 T,
b110100011 Y,
b110100011 ^,
b110100011 c,
b110100011 h,
b110100011 m,
b110100011 r,
1T&
0[&
1~&
05'
0<'
0C'
0J'
0Q'
0X'
0_'
0f'
0m'
0t'
0{'
0$(
0+(
02(
09(
0@(
0G(
0N(
0U(
0\(
0c(
0j(
0q(
0x(
0!)
0()
0/)
06)
0=)
0D)
0K)
0R)
0Y)
0`)
0g)
0n)
0u)
0|)
0%*
0,*
03*
0:*
0A*
0H*
0O*
0V*
0]*
0d*
0k*
0r*
0y*
0"+
0)+
00+
1$'
0#'
1m&
b1 C&
0l&
0f&
b110100011 )
b110100011 >&
b110100011 E&
0_&
1S&
0Z&
1}&
04'
0;'
0B'
0I'
0P'
0W'
0^'
0e'
0l'
0s'
0z'
0#(
0*(
01(
08(
0?(
0F(
0M(
0T(
0[(
0b(
0i(
0p(
0w(
0~(
0')
0.)
05)
0<)
0C)
0J)
0Q)
0X)
0_)
0f)
0m)
0t)
0{)
0$*
0+*
02*
09*
0@*
0G*
0N*
0U*
0\*
0c*
0j*
0q*
0x*
0!+
0(+
0/+
1''
1p&
0i&
0b&
b110100010 A&
b10010 1
b10010 B
b10 y,
b10 |,
b10 !-
b10 $-
b10 '-
0%'
0n&
0g&
0`&
b1111111111111111111111111111111111111111111111111111111001011101 2
b1111111111111111111111111111111111111111111111111111111001011101 <&
b10010 /
b10010 ,
b10010 6+
b10010 v,
b0 5
b0 =&
b0 D&
b0 1+
b0 +
b0 4+
b1111111111111111111111111111111111111111111111111111111001011101 4
b1111111111111111111111111111111111111111111111111111111001011101 9
b1111111111111111111111111111111111111111111111111111111001011101 2+
b100 *
b100 5+
b1111111111111111111111111111111111111111111111111111111001011101 L+
b10000000010100100100011 .
b10000000010100100100011 A
1!
#50
1\
1Z
b110 E
b110 G
b110 P
0U
b10 O
1T
0X
1V
b11001000100000001010010011 -
b11001000100000001010010011 <
b11001000100000001010010011 >
b101 0
b101 =
b101 F
b101 I
b101 L
02,
b0 7+
b0 w,
b0 "-
1f&
0m&
0{&
0$'
0~,
1i&
0p&
0~&
0''
b10010 7
b0 x,
b0 z,
1h&
0o&
0}&
0&'
b10010 )
b10010 >&
b10010 E&
0J&
b10010 A&
0H&
bx 3
bx 3+
bx :+
bx ?+
bx D+
bx I+
bx N+
bx S+
bx X+
bx ]+
bx b+
bx g+
bx l+
bx q+
bx v+
bx {+
bx ",
bx ',
bx ,,
bx 1,
bx 6,
bx ;,
bx @,
bx E,
bx J,
bx O,
bx T,
bx Y,
bx ^,
bx c,
bx h,
bx m,
bx r,
b10010 2
b10010 <&
0!
1$
0%
b0 C&
0'
0"
1#
#55
1{&
1y&
1s&
1r&
1l&
1p&
0m&
1o&
1k&
b1111 7
b110010 A&
1-+
1&+
1}*
1v*
1o*
1h*
1a*
1Z*
1S*
1L*
1E*
1>*
17*
10*
1)*
1"*
1y)
1r)
1k)
1d)
1])
1V)
1O)
1H)
1A)
1:)
13)
1,)
1%)
1|(
1u(
1n(
1g(
1`(
1Y(
1R(
1K(
1D(
1=(
16(
1/(
1((
1!(
1x'
1q'
1j'
1c'
1\'
1U'
1N'
1G'
1@'
19'
12'
1+'
0t&
0f&
b11100000 C&
1e&
1_&
1X&
b1111111111111111111111111111111111111111111111111111111010001111 )
b1111111111111111111111111111111111111111111111111111111010001111 >&
b1111111111111111111111111111111111111111111111111111111010001111 E&
1J&
b110010 2
b110010 <&
10+
1)+
1"+
1y*
1r*
1k*
1d*
1]*
1V*
1O*
1H*
1A*
1:*
13*
1,*
1%*
1|)
1u)
1n)
1g)
1`)
1Y)
1R)
1K)
1D)
1=)
16)
1/)
1()
1!)
1x(
1q(
1j(
1c(
1\(
1U(
1N(
1G(
1@(
19(
12(
1+(
1$(
1{'
1t'
1m'
1f'
1_'
1X'
1Q'
1J'
1C'
1<'
15'
1.'
1w&
0i&
1b&
1[&
1M&
b110010 1
b110010 B
b0 y,
b101 |,
b101 !-
b101 $-
b101 '-
1.+
1'+
1~*
1w*
1p*
1i*
1b*
1[*
1T*
1M*
1F*
1?*
18*
11*
1**
1#*
1z)
1s)
1l)
1e)
1^)
1W)
1P)
1I)
1B)
1;)
14)
1-)
1&)
1}(
1v(
1o(
1h(
1a(
1Z(
1S(
1L(
1E(
1>(
17(
10(
1)(
1"(
1y'
1r'
1k'
1d'
1]'
1V'
1O'
1H'
1A'
1:'
13'
1,'
1u&
1g&
1`&
1Y&
1K&
b110010 /
b101 ,
b101 6+
b101 v,
b1111111111111111111111111111111111111111111111111111111001011101 5
b1111111111111111111111111111111111111111111111111111111001011101 =&
b1111111111111111111111111111111111111111111111111111111001011101 D&
b1111111111111111111111111111111111111111111111111111111001011101 1+
b100 +
b100 4+
bx 4
bx 9
bx 2+
b10010 *
b10010 5+
bx 3
bx 3+
bx :+
bx ?+
bx D+
bx I+
bx N+
bx S+
bx X+
bx ]+
bx b+
bx g+
bx l+
bx q+
bx v+
bx {+
bx ",
bx ',
bx ,,
bx 1,
bx 6,
bx ;,
bx @,
bx E,
bx J,
bx O,
bx T,
bx Y,
bx ^,
bx c,
bx h,
bx m,
bx r,
b11001000100000001010010011 .
b11001000100000001010010011 A
bx 6
bx 8
1!
#60
0j
0h
0b
1c
0a
0Z
0[
1U
b0 O
0T
b111 E
b111 G
b111 P
1\
1X
1_
0V
1]
b1001000000010001100000011 -
b1001000000010001100000011 <
b1001000000010001100000011 >
b110 0
b110 =
b110 F
b110 I
b110 L
1O+
b100000 7+
b100000 w,
b100000 (-
1&-
b1 x,
b1 z,
b1111111111111111111111111111111111111111111111111111111010001111 3
b1111111111111111111111111111111111111111111111111111111010001111 3+
b1111111111111111111111111111111111111111111111111111111010001111 :+
b1111111111111111111111111111111111111111111111111111111010001111 ?+
b1111111111111111111111111111111111111111111111111111111010001111 D+
b1111111111111111111111111111111111111111111111111111111010001111 I+
b1111111111111111111111111111111111111111111111111111111010001111 N+
b1111111111111111111111111111111111111111111111111111111010001111 S+
b1111111111111111111111111111111111111111111111111111111010001111 X+
b1111111111111111111111111111111111111111111111111111111010001111 ]+
b1111111111111111111111111111111111111111111111111111111010001111 b+
b1111111111111111111111111111111111111111111111111111111010001111 g+
b1111111111111111111111111111111111111111111111111111111010001111 l+
b1111111111111111111111111111111111111111111111111111111010001111 q+
b1111111111111111111111111111111111111111111111111111111010001111 v+
b1111111111111111111111111111111111111111111111111111111010001111 {+
b1111111111111111111111111111111111111111111111111111111010001111 ",
b1111111111111111111111111111111111111111111111111111111010001111 ',
b1111111111111111111111111111111111111111111111111111111010001111 ,,
b1111111111111111111111111111111111111111111111111111111010001111 1,
b1111111111111111111111111111111111111111111111111111111010001111 6,
b1111111111111111111111111111111111111111111111111111111010001111 ;,
b1111111111111111111111111111111111111111111111111111111010001111 @,
b1111111111111111111111111111111111111111111111111111111010001111 E,
b1111111111111111111111111111111111111111111111111111111010001111 J,
b1111111111111111111111111111111111111111111111111111111010001111 O,
b1111111111111111111111111111111111111111111111111111111010001111 T,
b1111111111111111111111111111111111111111111111111111111010001111 Y,
b1111111111111111111111111111111111111111111111111111111010001111 ^,
b1111111111111111111111111111111111111111111111111111111010001111 c,
b1111111111111111111111111111111111111111111111111111111010001111 h,
b1111111111111111111111111111111111111111111111111111111010001111 m,
b1111111111111111111111111111111111111111111111111111111010001111 r,
0!
0$
1%
1"
#65
0r&
0{&
0l&
0p&
0J+
1T+
0y&
0m&
0o&
0O+
0s&
0k&
b1111111111111111111111111111111111111111111111111111111001011101 6
b1111111111111111111111111111111111111111111111111111111001011101 8
b10010 7
b10010 3
b10010 3+
b10010 :+
b10010 ?+
b10010 D+
b10010 I+
b10010 N+
b10010 S+
b10010 X+
b10010 ]+
b10010 b+
b10010 g+
b10010 l+
b10010 q+
b10010 v+
b10010 {+
b10010 ",
b10010 ',
b10010 ,,
b10010 1,
b10010 6,
b10010 ;,
b10010 @,
b10010 E,
b10010 J,
b10010 O,
b10010 T,
b10010 Y,
b10010 ^,
b10010 c,
b10010 h,
b10010 m,
b10010 r,
b10010 A&
b1000000 7+
b1000000 w,
b1000000 (-
0-+
0&+
0}*
0v*
0o*
0h*
0a*
0Z*
0S*
0L*
0E*
0>*
07*
00*
0)*
0"*
0y)
0r)
0k)
0d)
0])
0V)
0O)
0H)
0A)
0:)
03)
0,)
0%)
0|(
0u(
0n(
0g(
0`(
0Y(
0R(
0K(
0D(
0=(
06(
0/(
0((
0!(
0x'
0q'
0j'
0c'
0\'
0U'
0N'
0G'
0@'
09'
02'
0+'
0t&
1f&
b0 C&
0e&
0_&
0X&
b10010 )
b10010 >&
b10010 E&
0J&
b10010 2
b10010 <&
00+
0)+
0"+
0y*
0r*
0k*
0d*
0]*
0V*
0O*
0H*
0A*
0:*
03*
0,*
0%*
0|)
0u)
0n)
0g)
0`)
0Y)
0R)
0K)
0D)
0=)
06)
0/)
0()
0!)
0x(
0q(
0j(
0c(
0\(
0U(
0N(
0G(
0@(
09(
02(
0+(
0$(
0{'
0t'
0m'
0f'
0_'
0X'
0Q'
0J'
0C'
0<'
05'
0.'
0w&
1i&
0b&
0[&
0M&
b10010 1
b10010 B
b110 |,
b110 !-
b110 $-
b110 '-
0.+
0'+
0~*
0w*
0p*
0i*
0b*
0[*
0T*
0M*
0F*
0?*
08*
01*
0**
0#*
0z)
0s)
0l)
0e)
0^)
0W)
0P)
0I)
0B)
0;)
04)
0-)
0&)
0}(
0v(
0o(
0h(
0a(
0Z(
0S(
0L(
0E(
0>(
07(
00(
0)(
0"(
0y'
0r'
0k'
0d'
0]'
0V'
0O'
0H'
0A'
0:'
03'
0,'
0u&
0g&
0`&
0Y&
0K&
b10010 /
b110 ,
b110 6+
b110 v,
b0 5
b0 =&
b0 D&
b0 1+
b0 +
b0 4+
b1111111111111111111111111111111111111111111111111111111010001111 Q+
b1001000000010001100000011 .
b1001000000010001100000011 A
1!
#70
1j
1h
1b
0c
1a
1[
0\
1Z
b1000 E
b1000 G
b1000 P
0U
b1110 O
1T
0X
1V
bx -
bx <
bx >
b111 0
b111 =
b111 F
b111 I
b111 L
b1111111111111111111111111111111111111111111111111111111001011101 3
b1111111111111111111111111111111111111111111111111111111001011101 3+
b1111111111111111111111111111111111111111111111111111111001011101 :+
b1111111111111111111111111111111111111111111111111111111001011101 ?+
b1111111111111111111111111111111111111111111111111111111001011101 D+
b1111111111111111111111111111111111111111111111111111111001011101 I+
b1111111111111111111111111111111111111111111111111111111001011101 N+
b1111111111111111111111111111111111111111111111111111111001011101 S+
b1111111111111111111111111111111111111111111111111111111001011101 X+
b1111111111111111111111111111111111111111111111111111111001011101 ]+
b1111111111111111111111111111111111111111111111111111111001011101 b+
b1111111111111111111111111111111111111111111111111111111001011101 g+
b1111111111111111111111111111111111111111111111111111111001011101 l+
b1111111111111111111111111111111111111111111111111111111001011101 q+
b1111111111111111111111111111111111111111111111111111111001011101 v+
b1111111111111111111111111111111111111111111111111111111001011101 {+
b1111111111111111111111111111111111111111111111111111111001011101 ",
b1111111111111111111111111111111111111111111111111111111001011101 ',
b1111111111111111111111111111111111111111111111111111111001011101 ,,
b1111111111111111111111111111111111111111111111111111111001011101 1,
b1111111111111111111111111111111111111111111111111111111001011101 6,
b1111111111111111111111111111111111111111111111111111111001011101 ;,
b1111111111111111111111111111111111111111111111111111111001011101 @,
b1111111111111111111111111111111111111111111111111111111001011101 E,
b1111111111111111111111111111111111111111111111111111111001011101 J,
b1111111111111111111111111111111111111111111111111111111001011101 O,
b1111111111111111111111111111111111111111111111111111111001011101 T,
b1111111111111111111111111111111111111111111111111111111001011101 Y,
b1111111111111111111111111111111111111111111111111111111001011101 ^,
b1111111111111111111111111111111111111111111111111111111001011101 c,
b1111111111111111111111111111111111111111111111111111111001011101 h,
b1111111111111111111111111111111111111111111111111111111001011101 m,
b1111111111111111111111111111111111111111111111111111111001011101 r,
0!
0"
#75
xB&
x,+
x++
x%+
x$+
x|*
x{*
xu*
xt*
xn*
xm*
xg*
xf*
x`*
x_*
xY*
xX*
xR*
xQ*
xK*
xJ*
xD*
xC*
x=*
x<*
x6*
x5*
x/*
x.*
x(*
x'*
x!*
x~)
xx)
xw)
xq)
xp)
xj)
xi)
xc)
xb)
x\)
x[)
xU)
xT)
xN)
xM)
xG)
xF)
x@)
x?)
x9)
x8)
x2)
x1)
x+)
x*)
x$)
x#)
x{(
xz(
xt(
xs(
xm(
xl(
xf(
xe(
x_(
x^(
xX(
xW(
xQ(
xP(
xJ(
xI(
xC(
xB(
x<(
x;(
x5(
x4(
x.(
x-(
x'(
x&(
x~'
x}'
xw'
xv'
xp'
xo'
xi'
xh'
xb'
xa'
x['
xZ'
xT'
xS'
xM'
xL'
xF'
xE'
x?'
x(,
x-,
x2,
x7,
x<,
xA,
xF,
xK,
xP,
xU,
xZ,
x_,
xd,
xi,
xn,
xs,
x^+
xc+
xh+
xm+
xr+
xw+
x|+
x#,
bx "-
bx },
xO&
xd&
xy&
x"'
x)'
x0'
x7'
x>'
bx %-
x;+
x@+
xE+
xr&
x]&
xI&
x^&
xs&
xz&
x#'
x*'
x1'
x8'
xJ+
xO+
xl&
xW&
x&-
x~,
x{,
xT+
bx 3
bx 3+
bx :+
bx ?+
bx D+
bx I+
bx N+
bx S+
bx X+
bx ]+
bx b+
bx g+
bx l+
bx q+
bx v+
bx {+
bx ",
bx ',
bx ,,
bx 1,
bx 6,
bx ;,
bx @,
bx E,
bx J,
bx O,
bx T,
bx Y,
bx ^,
bx c,
bx h,
bx m,
bx r,
xL&
xS&
xZ&
xa&
xh&
xo&
xv&
x}&
x&'
x-'
x4'
x;'
x#-
xY+
xk&
xV&
bx 6
bx 8
bx 7
b0xxxxxxxxxxxx A&
bx x,
bx z,
bx 7+
bx w,
bx (-
x-+
x&+
x}*
xv*
xo*
xh*
xa*
xZ*
xS*
xL*
xE*
x>*
x7*
x0*
x)*
x"*
xy)
xr)
xk)
xd)
x])
xV)
xO)
xH)
xA)
x:)
x3)
x,)
x%)
x|(
xu(
xn(
xg(
x`(
xY(
xR(
xK(
xD(
x=(
x6(
x/(
x((
x!(
xx'
xq'
xj'
xc'
x\'
xU'
xN'
xG'
x@'
x9'
x2'
x+'
x$'
x{&
xt&
xm&
xf&
xe&
x_&
xX&
xQ&
bx0 C&
xP&
bx )
bx >&
bx E&
xJ&
b0xxxxxxxxxxxx 2
b0xxxxxxxxxxxx <&
x0+
x)+
x"+
xy*
xr*
xk*
xd*
x]*
xV*
xO*
xH*
xA*
x:*
x3*
x,*
x%*
x|)
xu)
xn)
xg)
x`)
xY)
xR)
xK)
xD)
x=)
x6)
x/)
x()
x!)
xx(
xq(
xj(
xc(
x\(
xU(
xN(
xG(
x@(
x9(
x2(
x+(
x$(
x{'
xt'
xm'
xf'
x_'
xX'
xQ'
xJ'
xC'
x<'
x5'
x.'
x''
x~&
xw&
xp&
xi&
xb&
x[&
xT&
xM&
bx 1
bx B
bx y,
bx |,
bx !-
bx $-
bx '-
x.+
x'+
x~*
xw*
xp*
xi*
xb*
x[*
xT*
xM*
xF*
x?*
x8*
x1*
x**
x#*
xz)
xs)
xl)
xe)
x^)
xW)
xP)
xI)
xB)
x;)
x4)
x-)
x&)
x}(
xv(
xo(
xh(
xa(
xZ(
xS(
xL(
xE(
x>(
x7(
x0(
x)(
x"(
xy'
xr'
xk'
xd'
x]'
xV'
xO'
xH'
xA'
x:'
x3'
x,'
x%'
x|&
xu&
xn&
xg&
x`&
xY&
xR&
xK&
bx /
bx ,
bx 6+
bx v,
bx 5
bx =&
bx D&
bx 1+
bx +
bx 4+
bx *
bx 5+
bx .
bx A
b1111111111111111111111111111111111111111111111111111111001011101 V+
1!
#80
0q
0a
0h
0o
0Z
0[
0b
0i
1U
b0 O
0T
0\
0c
b1001 E
b1001 G
b1001 P
1j
1X
0_
0f
1m
0V
0]
0d
1k
b1000 0
b1000 =
b1000 F
b1000 I
b1000 L
0!
