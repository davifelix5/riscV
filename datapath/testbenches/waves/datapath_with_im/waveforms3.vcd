$date
	Wed May 10 11:32:48 2023
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module datapath_tb $end
$var reg 1 ! CLK $end
$var reg 1 " RF_din_sel $end
$var reg 1 # ULA_din2_sel $end
$var reg 1 $ WE_MEM $end
$var reg 1 % WE_RF $end
$var reg 1 & reset_pc $end
$var reg 1 ' sub $end
$scope module UUT $end
$var wire 1 ! CLK $end
$var wire 1 " RF_din_sel $end
$var wire 1 # ULA_din2_sel $end
$var wire 1 $ WE_MEM $end
$var wire 1 % WE_RF $end
$var wire 1 ( load_pc $end
$var wire 1 & reset_pc $end
$var wire 1 ' sub $end
$var wire 64 ) ula [63:0] $end
$var wire 5 * rs2 [4:0] $end
$var wire 5 + rs1 [4:0] $end
$var wire 5 , rd [4:0] $end
$var wire 32 - instruction_mem [31:0] $end
$var wire 32 . instruction [31:0] $end
$var wire 12 / imm [11:0] $end
$var wire 64 0 im_addr [63:0] $end
$var wire 12 1 extended_imm [11:0] $end
$var wire 64 2 ULA_Din2 [63:0] $end
$var wire 64 3 RF_Din [63:0] $end
$var wire 1 4 LT_UN $end
$var wire 1 5 LT_SN $end
$var wire 1 6 GT_UN $end
$var wire 1 7 GT_SN $end
$var wire 1 8 EQ $end
$var wire 64 9 Dout_rs2 [63:0] $end
$var wire 64 : Dout_rs1 [63:0] $end
$var wire 64 ; DM_out [63:0] $end
$scope module DM $end
$var wire 5 < ADDR [4:0] $end
$var wire 1 ! CLK $end
$var wire 64 = D_out [63:0] $end
$var wire 1 $ WE $end
$var wire 64 > D_in [63:0] $end
$var parameter 32 ? N $end
$var parameter 32 @ SIZE $end
$upscope $end
$scope module IM $end
$var wire 32 A OUTPUT [31:0] $end
$var wire 64 B ADDR [63:0] $end
$upscope $end
$scope module IR $end
$var wire 1 ! CLK $end
$var wire 32 C IN [31:0] $end
$var wire 1 D LOAD $end
$var parameter 32 E SIZE $end
$var reg 32 F OUT [31:0] $end
$upscope $end
$scope module PC $end
$var wire 1 ! CLK $end
$var wire 1 ( LOAD $end
$var wire 1 & RST $end
$var wire 12 G immediate [11:0] $end
$var wire 64 H pc_next [63:0] $end
$var wire 1 I pc_next_sel $end
$var wire 64 J next [63:0] $end
$var wire 64 K addr [63:0] $end
$scope module PC $end
$var wire 1 ! CLK $end
$var wire 1 ( LOAD $end
$var wire 1 & RST $end
$var wire 64 L IN [63:0] $end
$var parameter 32 M SIZE $end
$var reg 64 N OUT [63:0] $end
$upscope $end
$scope module adder $end
$var wire 1 O Cin $end
$var wire 64 P X [63:0] $end
$var wire 64 Q Y [63:0] $end
$var wire 65 R cins [64:0] $end
$var wire 64 S S [63:0] $end
$var wire 1 T Cout $end
$var parameter 32 U SIZE $end
$scope begin genblk1[0] $end
$var parameter 2 V i $end
$scope module SOMA $end
$var wire 1 W Cin $end
$var wire 1 X Cout $end
$var wire 1 Y S $end
$var wire 1 Z X $end
$var wire 1 [ Y $end
$var wire 1 \ xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[1] $end
$var parameter 2 ] i $end
$scope module SOMA $end
$var wire 1 ^ Cin $end
$var wire 1 _ Cout $end
$var wire 1 ` S $end
$var wire 1 a X $end
$var wire 1 b Y $end
$var wire 1 c xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[2] $end
$var parameter 3 d i $end
$scope module SOMA $end
$var wire 1 e Cin $end
$var wire 1 f Cout $end
$var wire 1 g S $end
$var wire 1 h X $end
$var wire 1 i Y $end
$var wire 1 j xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[3] $end
$var parameter 3 k i $end
$scope module SOMA $end
$var wire 1 l Cin $end
$var wire 1 m Cout $end
$var wire 1 n S $end
$var wire 1 o X $end
$var wire 1 p Y $end
$var wire 1 q xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[4] $end
$var parameter 4 r i $end
$scope module SOMA $end
$var wire 1 s Cin $end
$var wire 1 t Cout $end
$var wire 1 u S $end
$var wire 1 v X $end
$var wire 1 w Y $end
$var wire 1 x xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[5] $end
$var parameter 4 y i $end
$scope module SOMA $end
$var wire 1 z Cin $end
$var wire 1 { Cout $end
$var wire 1 | S $end
$var wire 1 } X $end
$var wire 1 ~ Y $end
$var wire 1 !" xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[6] $end
$var parameter 4 "" i $end
$scope module SOMA $end
$var wire 1 #" Cin $end
$var wire 1 $" Cout $end
$var wire 1 %" S $end
$var wire 1 &" X $end
$var wire 1 '" Y $end
$var wire 1 (" xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[7] $end
$var parameter 4 )" i $end
$scope module SOMA $end
$var wire 1 *" Cin $end
$var wire 1 +" Cout $end
$var wire 1 ," S $end
$var wire 1 -" X $end
$var wire 1 ." Y $end
$var wire 1 /" xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[8] $end
$var parameter 5 0" i $end
$scope module SOMA $end
$var wire 1 1" Cin $end
$var wire 1 2" Cout $end
$var wire 1 3" S $end
$var wire 1 4" X $end
$var wire 1 5" Y $end
$var wire 1 6" xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[9] $end
$var parameter 5 7" i $end
$scope module SOMA $end
$var wire 1 8" Cin $end
$var wire 1 9" Cout $end
$var wire 1 :" S $end
$var wire 1 ;" X $end
$var wire 1 <" Y $end
$var wire 1 =" xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[10] $end
$var parameter 5 >" i $end
$scope module SOMA $end
$var wire 1 ?" Cin $end
$var wire 1 @" Cout $end
$var wire 1 A" S $end
$var wire 1 B" X $end
$var wire 1 C" Y $end
$var wire 1 D" xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[11] $end
$var parameter 5 E" i $end
$scope module SOMA $end
$var wire 1 F" Cin $end
$var wire 1 G" Cout $end
$var wire 1 H" S $end
$var wire 1 I" X $end
$var wire 1 J" Y $end
$var wire 1 K" xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[12] $end
$var parameter 5 L" i $end
$scope module SOMA $end
$var wire 1 M" Cin $end
$var wire 1 N" Cout $end
$var wire 1 O" S $end
$var wire 1 P" X $end
$var wire 1 Q" Y $end
$var wire 1 R" xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[13] $end
$var parameter 5 S" i $end
$scope module SOMA $end
$var wire 1 T" Cin $end
$var wire 1 U" Cout $end
$var wire 1 V" S $end
$var wire 1 W" X $end
$var wire 1 X" Y $end
$var wire 1 Y" xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[14] $end
$var parameter 5 Z" i $end
$scope module SOMA $end
$var wire 1 [" Cin $end
$var wire 1 \" Cout $end
$var wire 1 ]" S $end
$var wire 1 ^" X $end
$var wire 1 _" Y $end
$var wire 1 `" xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[15] $end
$var parameter 5 a" i $end
$scope module SOMA $end
$var wire 1 b" Cin $end
$var wire 1 c" Cout $end
$var wire 1 d" S $end
$var wire 1 e" X $end
$var wire 1 f" Y $end
$var wire 1 g" xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[16] $end
$var parameter 6 h" i $end
$scope module SOMA $end
$var wire 1 i" Cin $end
$var wire 1 j" Cout $end
$var wire 1 k" S $end
$var wire 1 l" X $end
$var wire 1 m" Y $end
$var wire 1 n" xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[17] $end
$var parameter 6 o" i $end
$scope module SOMA $end
$var wire 1 p" Cin $end
$var wire 1 q" Cout $end
$var wire 1 r" S $end
$var wire 1 s" X $end
$var wire 1 t" Y $end
$var wire 1 u" xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[18] $end
$var parameter 6 v" i $end
$scope module SOMA $end
$var wire 1 w" Cin $end
$var wire 1 x" Cout $end
$var wire 1 y" S $end
$var wire 1 z" X $end
$var wire 1 {" Y $end
$var wire 1 |" xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[19] $end
$var parameter 6 }" i $end
$scope module SOMA $end
$var wire 1 ~" Cin $end
$var wire 1 !# Cout $end
$var wire 1 "# S $end
$var wire 1 ## X $end
$var wire 1 $# Y $end
$var wire 1 %# xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[20] $end
$var parameter 6 &# i $end
$scope module SOMA $end
$var wire 1 '# Cin $end
$var wire 1 (# Cout $end
$var wire 1 )# S $end
$var wire 1 *# X $end
$var wire 1 +# Y $end
$var wire 1 ,# xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[21] $end
$var parameter 6 -# i $end
$scope module SOMA $end
$var wire 1 .# Cin $end
$var wire 1 /# Cout $end
$var wire 1 0# S $end
$var wire 1 1# X $end
$var wire 1 2# Y $end
$var wire 1 3# xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[22] $end
$var parameter 6 4# i $end
$scope module SOMA $end
$var wire 1 5# Cin $end
$var wire 1 6# Cout $end
$var wire 1 7# S $end
$var wire 1 8# X $end
$var wire 1 9# Y $end
$var wire 1 :# xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[23] $end
$var parameter 6 ;# i $end
$scope module SOMA $end
$var wire 1 <# Cin $end
$var wire 1 =# Cout $end
$var wire 1 ># S $end
$var wire 1 ?# X $end
$var wire 1 @# Y $end
$var wire 1 A# xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[24] $end
$var parameter 6 B# i $end
$scope module SOMA $end
$var wire 1 C# Cin $end
$var wire 1 D# Cout $end
$var wire 1 E# S $end
$var wire 1 F# X $end
$var wire 1 G# Y $end
$var wire 1 H# xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[25] $end
$var parameter 6 I# i $end
$scope module SOMA $end
$var wire 1 J# Cin $end
$var wire 1 K# Cout $end
$var wire 1 L# S $end
$var wire 1 M# X $end
$var wire 1 N# Y $end
$var wire 1 O# xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[26] $end
$var parameter 6 P# i $end
$scope module SOMA $end
$var wire 1 Q# Cin $end
$var wire 1 R# Cout $end
$var wire 1 S# S $end
$var wire 1 T# X $end
$var wire 1 U# Y $end
$var wire 1 V# xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[27] $end
$var parameter 6 W# i $end
$scope module SOMA $end
$var wire 1 X# Cin $end
$var wire 1 Y# Cout $end
$var wire 1 Z# S $end
$var wire 1 [# X $end
$var wire 1 \# Y $end
$var wire 1 ]# xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[28] $end
$var parameter 6 ^# i $end
$scope module SOMA $end
$var wire 1 _# Cin $end
$var wire 1 `# Cout $end
$var wire 1 a# S $end
$var wire 1 b# X $end
$var wire 1 c# Y $end
$var wire 1 d# xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[29] $end
$var parameter 6 e# i $end
$scope module SOMA $end
$var wire 1 f# Cin $end
$var wire 1 g# Cout $end
$var wire 1 h# S $end
$var wire 1 i# X $end
$var wire 1 j# Y $end
$var wire 1 k# xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[30] $end
$var parameter 6 l# i $end
$scope module SOMA $end
$var wire 1 m# Cin $end
$var wire 1 n# Cout $end
$var wire 1 o# S $end
$var wire 1 p# X $end
$var wire 1 q# Y $end
$var wire 1 r# xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[31] $end
$var parameter 6 s# i $end
$scope module SOMA $end
$var wire 1 t# Cin $end
$var wire 1 u# Cout $end
$var wire 1 v# S $end
$var wire 1 w# X $end
$var wire 1 x# Y $end
$var wire 1 y# xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[32] $end
$var parameter 7 z# i $end
$scope module SOMA $end
$var wire 1 {# Cin $end
$var wire 1 |# Cout $end
$var wire 1 }# S $end
$var wire 1 ~# X $end
$var wire 1 !$ Y $end
$var wire 1 "$ xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[33] $end
$var parameter 7 #$ i $end
$scope module SOMA $end
$var wire 1 $$ Cin $end
$var wire 1 %$ Cout $end
$var wire 1 &$ S $end
$var wire 1 '$ X $end
$var wire 1 ($ Y $end
$var wire 1 )$ xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[34] $end
$var parameter 7 *$ i $end
$scope module SOMA $end
$var wire 1 +$ Cin $end
$var wire 1 ,$ Cout $end
$var wire 1 -$ S $end
$var wire 1 .$ X $end
$var wire 1 /$ Y $end
$var wire 1 0$ xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[35] $end
$var parameter 7 1$ i $end
$scope module SOMA $end
$var wire 1 2$ Cin $end
$var wire 1 3$ Cout $end
$var wire 1 4$ S $end
$var wire 1 5$ X $end
$var wire 1 6$ Y $end
$var wire 1 7$ xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[36] $end
$var parameter 7 8$ i $end
$scope module SOMA $end
$var wire 1 9$ Cin $end
$var wire 1 :$ Cout $end
$var wire 1 ;$ S $end
$var wire 1 <$ X $end
$var wire 1 =$ Y $end
$var wire 1 >$ xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[37] $end
$var parameter 7 ?$ i $end
$scope module SOMA $end
$var wire 1 @$ Cin $end
$var wire 1 A$ Cout $end
$var wire 1 B$ S $end
$var wire 1 C$ X $end
$var wire 1 D$ Y $end
$var wire 1 E$ xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[38] $end
$var parameter 7 F$ i $end
$scope module SOMA $end
$var wire 1 G$ Cin $end
$var wire 1 H$ Cout $end
$var wire 1 I$ S $end
$var wire 1 J$ X $end
$var wire 1 K$ Y $end
$var wire 1 L$ xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[39] $end
$var parameter 7 M$ i $end
$scope module SOMA $end
$var wire 1 N$ Cin $end
$var wire 1 O$ Cout $end
$var wire 1 P$ S $end
$var wire 1 Q$ X $end
$var wire 1 R$ Y $end
$var wire 1 S$ xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[40] $end
$var parameter 7 T$ i $end
$scope module SOMA $end
$var wire 1 U$ Cin $end
$var wire 1 V$ Cout $end
$var wire 1 W$ S $end
$var wire 1 X$ X $end
$var wire 1 Y$ Y $end
$var wire 1 Z$ xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[41] $end
$var parameter 7 [$ i $end
$scope module SOMA $end
$var wire 1 \$ Cin $end
$var wire 1 ]$ Cout $end
$var wire 1 ^$ S $end
$var wire 1 _$ X $end
$var wire 1 `$ Y $end
$var wire 1 a$ xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[42] $end
$var parameter 7 b$ i $end
$scope module SOMA $end
$var wire 1 c$ Cin $end
$var wire 1 d$ Cout $end
$var wire 1 e$ S $end
$var wire 1 f$ X $end
$var wire 1 g$ Y $end
$var wire 1 h$ xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[43] $end
$var parameter 7 i$ i $end
$scope module SOMA $end
$var wire 1 j$ Cin $end
$var wire 1 k$ Cout $end
$var wire 1 l$ S $end
$var wire 1 m$ X $end
$var wire 1 n$ Y $end
$var wire 1 o$ xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[44] $end
$var parameter 7 p$ i $end
$scope module SOMA $end
$var wire 1 q$ Cin $end
$var wire 1 r$ Cout $end
$var wire 1 s$ S $end
$var wire 1 t$ X $end
$var wire 1 u$ Y $end
$var wire 1 v$ xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[45] $end
$var parameter 7 w$ i $end
$scope module SOMA $end
$var wire 1 x$ Cin $end
$var wire 1 y$ Cout $end
$var wire 1 z$ S $end
$var wire 1 {$ X $end
$var wire 1 |$ Y $end
$var wire 1 }$ xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[46] $end
$var parameter 7 ~$ i $end
$scope module SOMA $end
$var wire 1 !% Cin $end
$var wire 1 "% Cout $end
$var wire 1 #% S $end
$var wire 1 $% X $end
$var wire 1 %% Y $end
$var wire 1 &% xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[47] $end
$var parameter 7 '% i $end
$scope module SOMA $end
$var wire 1 (% Cin $end
$var wire 1 )% Cout $end
$var wire 1 *% S $end
$var wire 1 +% X $end
$var wire 1 ,% Y $end
$var wire 1 -% xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[48] $end
$var parameter 7 .% i $end
$scope module SOMA $end
$var wire 1 /% Cin $end
$var wire 1 0% Cout $end
$var wire 1 1% S $end
$var wire 1 2% X $end
$var wire 1 3% Y $end
$var wire 1 4% xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[49] $end
$var parameter 7 5% i $end
$scope module SOMA $end
$var wire 1 6% Cin $end
$var wire 1 7% Cout $end
$var wire 1 8% S $end
$var wire 1 9% X $end
$var wire 1 :% Y $end
$var wire 1 ;% xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[50] $end
$var parameter 7 <% i $end
$scope module SOMA $end
$var wire 1 =% Cin $end
$var wire 1 >% Cout $end
$var wire 1 ?% S $end
$var wire 1 @% X $end
$var wire 1 A% Y $end
$var wire 1 B% xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[51] $end
$var parameter 7 C% i $end
$scope module SOMA $end
$var wire 1 D% Cin $end
$var wire 1 E% Cout $end
$var wire 1 F% S $end
$var wire 1 G% X $end
$var wire 1 H% Y $end
$var wire 1 I% xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[52] $end
$var parameter 7 J% i $end
$scope module SOMA $end
$var wire 1 K% Cin $end
$var wire 1 L% Cout $end
$var wire 1 M% S $end
$var wire 1 N% X $end
$var wire 1 O% Y $end
$var wire 1 P% xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[53] $end
$var parameter 7 Q% i $end
$scope module SOMA $end
$var wire 1 R% Cin $end
$var wire 1 S% Cout $end
$var wire 1 T% S $end
$var wire 1 U% X $end
$var wire 1 V% Y $end
$var wire 1 W% xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[54] $end
$var parameter 7 X% i $end
$scope module SOMA $end
$var wire 1 Y% Cin $end
$var wire 1 Z% Cout $end
$var wire 1 [% S $end
$var wire 1 \% X $end
$var wire 1 ]% Y $end
$var wire 1 ^% xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[55] $end
$var parameter 7 _% i $end
$scope module SOMA $end
$var wire 1 `% Cin $end
$var wire 1 a% Cout $end
$var wire 1 b% S $end
$var wire 1 c% X $end
$var wire 1 d% Y $end
$var wire 1 e% xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[56] $end
$var parameter 7 f% i $end
$scope module SOMA $end
$var wire 1 g% Cin $end
$var wire 1 h% Cout $end
$var wire 1 i% S $end
$var wire 1 j% X $end
$var wire 1 k% Y $end
$var wire 1 l% xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[57] $end
$var parameter 7 m% i $end
$scope module SOMA $end
$var wire 1 n% Cin $end
$var wire 1 o% Cout $end
$var wire 1 p% S $end
$var wire 1 q% X $end
$var wire 1 r% Y $end
$var wire 1 s% xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[58] $end
$var parameter 7 t% i $end
$scope module SOMA $end
$var wire 1 u% Cin $end
$var wire 1 v% Cout $end
$var wire 1 w% S $end
$var wire 1 x% X $end
$var wire 1 y% Y $end
$var wire 1 z% xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[59] $end
$var parameter 7 {% i $end
$scope module SOMA $end
$var wire 1 |% Cin $end
$var wire 1 }% Cout $end
$var wire 1 ~% S $end
$var wire 1 !& X $end
$var wire 1 "& Y $end
$var wire 1 #& xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[60] $end
$var parameter 7 $& i $end
$scope module SOMA $end
$var wire 1 %& Cin $end
$var wire 1 && Cout $end
$var wire 1 '& S $end
$var wire 1 (& X $end
$var wire 1 )& Y $end
$var wire 1 *& xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[61] $end
$var parameter 7 +& i $end
$scope module SOMA $end
$var wire 1 ,& Cin $end
$var wire 1 -& Cout $end
$var wire 1 .& S $end
$var wire 1 /& X $end
$var wire 1 0& Y $end
$var wire 1 1& xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[62] $end
$var parameter 7 2& i $end
$scope module SOMA $end
$var wire 1 3& Cin $end
$var wire 1 4& Cout $end
$var wire 1 5& S $end
$var wire 1 6& X $end
$var wire 1 7& Y $end
$var wire 1 8& xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[63] $end
$var parameter 7 9& i $end
$scope module SOMA $end
$var wire 1 :& Cin $end
$var wire 1 ;& Cout $end
$var wire 1 <& S $end
$var wire 1 =& X $end
$var wire 1 >& Y $end
$var wire 1 ?& xor1 $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope module RF $end
$var wire 1 ! CLK $end
$var wire 64 @& Da [63:0] $end
$var wire 64 A& Db [63:0] $end
$var wire 64 B& Din [63:0] $end
$var wire 5 C& Ra [4:0] $end
$var wire 5 D& Rb [4:0] $end
$var wire 5 E& Rw [4:0] $end
$var wire 1 % WE $end
$var wire 32 F& loaders [31:0] $end
$var parameter 32 G& SIZE $end
$scope begin genblk1[1] $end
$var parameter 2 H& i $end
$scope module xN $end
$var wire 1 ! CLK $end
$var wire 64 I& IN [63:0] $end
$var wire 1 J& LOAD $end
$var parameter 32 K& SIZE $end
$var reg 64 L& OUT [63:0] $end
$upscope $end
$upscope $end
$scope begin genblk1[2] $end
$var parameter 3 M& i $end
$scope module xN $end
$var wire 1 ! CLK $end
$var wire 64 N& IN [63:0] $end
$var wire 1 O& LOAD $end
$var parameter 32 P& SIZE $end
$var reg 64 Q& OUT [63:0] $end
$upscope $end
$upscope $end
$scope begin genblk1[3] $end
$var parameter 3 R& i $end
$scope module xN $end
$var wire 1 ! CLK $end
$var wire 64 S& IN [63:0] $end
$var wire 1 T& LOAD $end
$var parameter 32 U& SIZE $end
$var reg 64 V& OUT [63:0] $end
$upscope $end
$upscope $end
$scope begin genblk1[4] $end
$var parameter 4 W& i $end
$scope module xN $end
$var wire 1 ! CLK $end
$var wire 64 X& IN [63:0] $end
$var wire 1 Y& LOAD $end
$var parameter 32 Z& SIZE $end
$var reg 64 [& OUT [63:0] $end
$upscope $end
$upscope $end
$scope begin genblk1[5] $end
$var parameter 4 \& i $end
$scope module xN $end
$var wire 1 ! CLK $end
$var wire 64 ]& IN [63:0] $end
$var wire 1 ^& LOAD $end
$var parameter 32 _& SIZE $end
$var reg 64 `& OUT [63:0] $end
$upscope $end
$upscope $end
$scope begin genblk1[6] $end
$var parameter 4 a& i $end
$scope module xN $end
$var wire 1 ! CLK $end
$var wire 64 b& IN [63:0] $end
$var wire 1 c& LOAD $end
$var parameter 32 d& SIZE $end
$var reg 64 e& OUT [63:0] $end
$upscope $end
$upscope $end
$scope begin genblk1[7] $end
$var parameter 4 f& i $end
$scope module xN $end
$var wire 1 ! CLK $end
$var wire 64 g& IN [63:0] $end
$var wire 1 h& LOAD $end
$var parameter 32 i& SIZE $end
$var reg 64 j& OUT [63:0] $end
$upscope $end
$upscope $end
$scope begin genblk1[8] $end
$var parameter 5 k& i $end
$scope module xN $end
$var wire 1 ! CLK $end
$var wire 64 l& IN [63:0] $end
$var wire 1 m& LOAD $end
$var parameter 32 n& SIZE $end
$var reg 64 o& OUT [63:0] $end
$upscope $end
$upscope $end
$scope begin genblk1[9] $end
$var parameter 5 p& i $end
$scope module xN $end
$var wire 1 ! CLK $end
$var wire 64 q& IN [63:0] $end
$var wire 1 r& LOAD $end
$var parameter 32 s& SIZE $end
$var reg 64 t& OUT [63:0] $end
$upscope $end
$upscope $end
$scope begin genblk1[10] $end
$var parameter 5 u& i $end
$scope module xN $end
$var wire 1 ! CLK $end
$var wire 64 v& IN [63:0] $end
$var wire 1 w& LOAD $end
$var parameter 32 x& SIZE $end
$var reg 64 y& OUT [63:0] $end
$upscope $end
$upscope $end
$scope begin genblk1[11] $end
$var parameter 5 z& i $end
$scope module xN $end
$var wire 1 ! CLK $end
$var wire 64 {& IN [63:0] $end
$var wire 1 |& LOAD $end
$var parameter 32 }& SIZE $end
$var reg 64 ~& OUT [63:0] $end
$upscope $end
$upscope $end
$scope begin genblk1[12] $end
$var parameter 5 !' i $end
$scope module xN $end
$var wire 1 ! CLK $end
$var wire 64 "' IN [63:0] $end
$var wire 1 #' LOAD $end
$var parameter 32 $' SIZE $end
$var reg 64 %' OUT [63:0] $end
$upscope $end
$upscope $end
$scope begin genblk1[13] $end
$var parameter 5 &' i $end
$scope module xN $end
$var wire 1 ! CLK $end
$var wire 64 '' IN [63:0] $end
$var wire 1 (' LOAD $end
$var parameter 32 )' SIZE $end
$var reg 64 *' OUT [63:0] $end
$upscope $end
$upscope $end
$scope begin genblk1[14] $end
$var parameter 5 +' i $end
$scope module xN $end
$var wire 1 ! CLK $end
$var wire 64 ,' IN [63:0] $end
$var wire 1 -' LOAD $end
$var parameter 32 .' SIZE $end
$var reg 64 /' OUT [63:0] $end
$upscope $end
$upscope $end
$scope begin genblk1[15] $end
$var parameter 5 0' i $end
$scope module xN $end
$var wire 1 ! CLK $end
$var wire 64 1' IN [63:0] $end
$var wire 1 2' LOAD $end
$var parameter 32 3' SIZE $end
$var reg 64 4' OUT [63:0] $end
$upscope $end
$upscope $end
$scope begin genblk1[16] $end
$var parameter 6 5' i $end
$scope module xN $end
$var wire 1 ! CLK $end
$var wire 64 6' IN [63:0] $end
$var wire 1 7' LOAD $end
$var parameter 32 8' SIZE $end
$var reg 64 9' OUT [63:0] $end
$upscope $end
$upscope $end
$scope begin genblk1[17] $end
$var parameter 6 :' i $end
$scope module xN $end
$var wire 1 ! CLK $end
$var wire 64 ;' IN [63:0] $end
$var wire 1 <' LOAD $end
$var parameter 32 =' SIZE $end
$var reg 64 >' OUT [63:0] $end
$upscope $end
$upscope $end
$scope begin genblk1[18] $end
$var parameter 6 ?' i $end
$scope module xN $end
$var wire 1 ! CLK $end
$var wire 64 @' IN [63:0] $end
$var wire 1 A' LOAD $end
$var parameter 32 B' SIZE $end
$var reg 64 C' OUT [63:0] $end
$upscope $end
$upscope $end
$scope begin genblk1[19] $end
$var parameter 6 D' i $end
$scope module xN $end
$var wire 1 ! CLK $end
$var wire 64 E' IN [63:0] $end
$var wire 1 F' LOAD $end
$var parameter 32 G' SIZE $end
$var reg 64 H' OUT [63:0] $end
$upscope $end
$upscope $end
$scope begin genblk1[20] $end
$var parameter 6 I' i $end
$scope module xN $end
$var wire 1 ! CLK $end
$var wire 64 J' IN [63:0] $end
$var wire 1 K' LOAD $end
$var parameter 32 L' SIZE $end
$var reg 64 M' OUT [63:0] $end
$upscope $end
$upscope $end
$scope begin genblk1[21] $end
$var parameter 6 N' i $end
$scope module xN $end
$var wire 1 ! CLK $end
$var wire 64 O' IN [63:0] $end
$var wire 1 P' LOAD $end
$var parameter 32 Q' SIZE $end
$var reg 64 R' OUT [63:0] $end
$upscope $end
$upscope $end
$scope begin genblk1[22] $end
$var parameter 6 S' i $end
$scope module xN $end
$var wire 1 ! CLK $end
$var wire 64 T' IN [63:0] $end
$var wire 1 U' LOAD $end
$var parameter 32 V' SIZE $end
$var reg 64 W' OUT [63:0] $end
$upscope $end
$upscope $end
$scope begin genblk1[23] $end
$var parameter 6 X' i $end
$scope module xN $end
$var wire 1 ! CLK $end
$var wire 64 Y' IN [63:0] $end
$var wire 1 Z' LOAD $end
$var parameter 32 [' SIZE $end
$var reg 64 \' OUT [63:0] $end
$upscope $end
$upscope $end
$scope begin genblk1[24] $end
$var parameter 6 ]' i $end
$scope module xN $end
$var wire 1 ! CLK $end
$var wire 64 ^' IN [63:0] $end
$var wire 1 _' LOAD $end
$var parameter 32 `' SIZE $end
$var reg 64 a' OUT [63:0] $end
$upscope $end
$upscope $end
$scope begin genblk1[25] $end
$var parameter 6 b' i $end
$scope module xN $end
$var wire 1 ! CLK $end
$var wire 64 c' IN [63:0] $end
$var wire 1 d' LOAD $end
$var parameter 32 e' SIZE $end
$var reg 64 f' OUT [63:0] $end
$upscope $end
$upscope $end
$scope begin genblk1[26] $end
$var parameter 6 g' i $end
$scope module xN $end
$var wire 1 ! CLK $end
$var wire 64 h' IN [63:0] $end
$var wire 1 i' LOAD $end
$var parameter 32 j' SIZE $end
$var reg 64 k' OUT [63:0] $end
$upscope $end
$upscope $end
$scope begin genblk1[27] $end
$var parameter 6 l' i $end
$scope module xN $end
$var wire 1 ! CLK $end
$var wire 64 m' IN [63:0] $end
$var wire 1 n' LOAD $end
$var parameter 32 o' SIZE $end
$var reg 64 p' OUT [63:0] $end
$upscope $end
$upscope $end
$scope begin genblk1[28] $end
$var parameter 6 q' i $end
$scope module xN $end
$var wire 1 ! CLK $end
$var wire 64 r' IN [63:0] $end
$var wire 1 s' LOAD $end
$var parameter 32 t' SIZE $end
$var reg 64 u' OUT [63:0] $end
$upscope $end
$upscope $end
$scope begin genblk1[29] $end
$var parameter 6 v' i $end
$scope module xN $end
$var wire 1 ! CLK $end
$var wire 64 w' IN [63:0] $end
$var wire 1 x' LOAD $end
$var parameter 32 y' SIZE $end
$var reg 64 z' OUT [63:0] $end
$upscope $end
$upscope $end
$scope begin genblk1[30] $end
$var parameter 6 {' i $end
$scope module xN $end
$var wire 1 ! CLK $end
$var wire 64 |' IN [63:0] $end
$var wire 1 }' LOAD $end
$var parameter 32 ~' SIZE $end
$var reg 64 !( OUT [63:0] $end
$upscope $end
$upscope $end
$scope begin genblk1[31] $end
$var parameter 6 "( i $end
$scope module xN $end
$var wire 1 ! CLK $end
$var wire 64 #( IN [63:0] $end
$var wire 1 $( LOAD $end
$var parameter 32 %( SIZE $end
$var reg 64 &( OUT [63:0] $end
$upscope $end
$upscope $end
$scope module LOAD_DECODER $end
$var wire 1 % EN $end
$var wire 5 '( IN [4:0] $end
$var wire 32 (( OUT [31:0] $end
$var wire 4 )( EN1 [3:0] $end
$scope module DEC2_4 $end
$var wire 1 % EN $end
$var wire 2 *( IN [1:0] $end
$var wire 4 +( OUT [3:0] $end
$upscope $end
$scope module DEC3_8__1 $end
$var wire 1 ,( EN $end
$var wire 3 -( IN [2:0] $end
$var wire 8 .( OUT [7:0] $end
$upscope $end
$scope module DEC3_8__2 $end
$var wire 1 /( EN $end
$var wire 3 0( IN [2:0] $end
$var wire 8 1( OUT [7:0] $end
$upscope $end
$scope module DEC3_8__3 $end
$var wire 1 2( EN $end
$var wire 3 3( IN [2:0] $end
$var wire 8 4( OUT [7:0] $end
$upscope $end
$scope module DEC3_8__4 $end
$var wire 1 5( EN $end
$var wire 3 6( IN [2:0] $end
$var wire 8 7( OUT [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module ULA $end
$var wire 1 7 GT_SN $end
$var wire 1 4 LT_UN $end
$var wire 64 8( s1 [63:0] $end
$var wire 64 9( s2 [63:0] $end
$var wire 1 ' sub $end
$var wire 64 :( res [63:0] $end
$var wire 1 5 LT_SN $end
$var wire 1 6 GT_UN $end
$var wire 1 8 EQ $end
$var parameter 32 ;( SIZE $end
$scope module adder $end
$var wire 1 ' Cin $end
$var wire 64 <( X [63:0] $end
$var wire 64 =( Y [63:0] $end
$var wire 65 >( cins [64:0] $end
$var wire 64 ?( S [63:0] $end
$var wire 1 6 Cout $end
$var parameter 32 @( SIZE $end
$scope begin genblk1[0] $end
$var parameter 2 A( i $end
$scope module SOMA $end
$var wire 1 B( Cin $end
$var wire 1 C( Cout $end
$var wire 1 D( S $end
$var wire 1 E( X $end
$var wire 1 F( Y $end
$var wire 1 G( xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[1] $end
$var parameter 2 H( i $end
$scope module SOMA $end
$var wire 1 I( Cin $end
$var wire 1 J( Cout $end
$var wire 1 K( S $end
$var wire 1 L( X $end
$var wire 1 M( Y $end
$var wire 1 N( xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[2] $end
$var parameter 3 O( i $end
$scope module SOMA $end
$var wire 1 P( Cin $end
$var wire 1 Q( Cout $end
$var wire 1 R( S $end
$var wire 1 S( X $end
$var wire 1 T( Y $end
$var wire 1 U( xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[3] $end
$var parameter 3 V( i $end
$scope module SOMA $end
$var wire 1 W( Cin $end
$var wire 1 X( Cout $end
$var wire 1 Y( S $end
$var wire 1 Z( X $end
$var wire 1 [( Y $end
$var wire 1 \( xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[4] $end
$var parameter 4 ]( i $end
$scope module SOMA $end
$var wire 1 ^( Cin $end
$var wire 1 _( Cout $end
$var wire 1 `( S $end
$var wire 1 a( X $end
$var wire 1 b( Y $end
$var wire 1 c( xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[5] $end
$var parameter 4 d( i $end
$scope module SOMA $end
$var wire 1 e( Cin $end
$var wire 1 f( Cout $end
$var wire 1 g( S $end
$var wire 1 h( X $end
$var wire 1 i( Y $end
$var wire 1 j( xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[6] $end
$var parameter 4 k( i $end
$scope module SOMA $end
$var wire 1 l( Cin $end
$var wire 1 m( Cout $end
$var wire 1 n( S $end
$var wire 1 o( X $end
$var wire 1 p( Y $end
$var wire 1 q( xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[7] $end
$var parameter 4 r( i $end
$scope module SOMA $end
$var wire 1 s( Cin $end
$var wire 1 t( Cout $end
$var wire 1 u( S $end
$var wire 1 v( X $end
$var wire 1 w( Y $end
$var wire 1 x( xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[8] $end
$var parameter 5 y( i $end
$scope module SOMA $end
$var wire 1 z( Cin $end
$var wire 1 {( Cout $end
$var wire 1 |( S $end
$var wire 1 }( X $end
$var wire 1 ~( Y $end
$var wire 1 !) xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[9] $end
$var parameter 5 ") i $end
$scope module SOMA $end
$var wire 1 #) Cin $end
$var wire 1 $) Cout $end
$var wire 1 %) S $end
$var wire 1 &) X $end
$var wire 1 ') Y $end
$var wire 1 () xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[10] $end
$var parameter 5 )) i $end
$scope module SOMA $end
$var wire 1 *) Cin $end
$var wire 1 +) Cout $end
$var wire 1 ,) S $end
$var wire 1 -) X $end
$var wire 1 .) Y $end
$var wire 1 /) xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[11] $end
$var parameter 5 0) i $end
$scope module SOMA $end
$var wire 1 1) Cin $end
$var wire 1 2) Cout $end
$var wire 1 3) S $end
$var wire 1 4) X $end
$var wire 1 5) Y $end
$var wire 1 6) xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[12] $end
$var parameter 5 7) i $end
$scope module SOMA $end
$var wire 1 8) Cin $end
$var wire 1 9) Cout $end
$var wire 1 :) S $end
$var wire 1 ;) X $end
$var wire 1 <) Y $end
$var wire 1 =) xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[13] $end
$var parameter 5 >) i $end
$scope module SOMA $end
$var wire 1 ?) Cin $end
$var wire 1 @) Cout $end
$var wire 1 A) S $end
$var wire 1 B) X $end
$var wire 1 C) Y $end
$var wire 1 D) xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[14] $end
$var parameter 5 E) i $end
$scope module SOMA $end
$var wire 1 F) Cin $end
$var wire 1 G) Cout $end
$var wire 1 H) S $end
$var wire 1 I) X $end
$var wire 1 J) Y $end
$var wire 1 K) xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[15] $end
$var parameter 5 L) i $end
$scope module SOMA $end
$var wire 1 M) Cin $end
$var wire 1 N) Cout $end
$var wire 1 O) S $end
$var wire 1 P) X $end
$var wire 1 Q) Y $end
$var wire 1 R) xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[16] $end
$var parameter 6 S) i $end
$scope module SOMA $end
$var wire 1 T) Cin $end
$var wire 1 U) Cout $end
$var wire 1 V) S $end
$var wire 1 W) X $end
$var wire 1 X) Y $end
$var wire 1 Y) xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[17] $end
$var parameter 6 Z) i $end
$scope module SOMA $end
$var wire 1 [) Cin $end
$var wire 1 \) Cout $end
$var wire 1 ]) S $end
$var wire 1 ^) X $end
$var wire 1 _) Y $end
$var wire 1 `) xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[18] $end
$var parameter 6 a) i $end
$scope module SOMA $end
$var wire 1 b) Cin $end
$var wire 1 c) Cout $end
$var wire 1 d) S $end
$var wire 1 e) X $end
$var wire 1 f) Y $end
$var wire 1 g) xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[19] $end
$var parameter 6 h) i $end
$scope module SOMA $end
$var wire 1 i) Cin $end
$var wire 1 j) Cout $end
$var wire 1 k) S $end
$var wire 1 l) X $end
$var wire 1 m) Y $end
$var wire 1 n) xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[20] $end
$var parameter 6 o) i $end
$scope module SOMA $end
$var wire 1 p) Cin $end
$var wire 1 q) Cout $end
$var wire 1 r) S $end
$var wire 1 s) X $end
$var wire 1 t) Y $end
$var wire 1 u) xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[21] $end
$var parameter 6 v) i $end
$scope module SOMA $end
$var wire 1 w) Cin $end
$var wire 1 x) Cout $end
$var wire 1 y) S $end
$var wire 1 z) X $end
$var wire 1 {) Y $end
$var wire 1 |) xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[22] $end
$var parameter 6 }) i $end
$scope module SOMA $end
$var wire 1 ~) Cin $end
$var wire 1 !* Cout $end
$var wire 1 "* S $end
$var wire 1 #* X $end
$var wire 1 $* Y $end
$var wire 1 %* xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[23] $end
$var parameter 6 &* i $end
$scope module SOMA $end
$var wire 1 '* Cin $end
$var wire 1 (* Cout $end
$var wire 1 )* S $end
$var wire 1 ** X $end
$var wire 1 +* Y $end
$var wire 1 ,* xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[24] $end
$var parameter 6 -* i $end
$scope module SOMA $end
$var wire 1 .* Cin $end
$var wire 1 /* Cout $end
$var wire 1 0* S $end
$var wire 1 1* X $end
$var wire 1 2* Y $end
$var wire 1 3* xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[25] $end
$var parameter 6 4* i $end
$scope module SOMA $end
$var wire 1 5* Cin $end
$var wire 1 6* Cout $end
$var wire 1 7* S $end
$var wire 1 8* X $end
$var wire 1 9* Y $end
$var wire 1 :* xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[26] $end
$var parameter 6 ;* i $end
$scope module SOMA $end
$var wire 1 <* Cin $end
$var wire 1 =* Cout $end
$var wire 1 >* S $end
$var wire 1 ?* X $end
$var wire 1 @* Y $end
$var wire 1 A* xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[27] $end
$var parameter 6 B* i $end
$scope module SOMA $end
$var wire 1 C* Cin $end
$var wire 1 D* Cout $end
$var wire 1 E* S $end
$var wire 1 F* X $end
$var wire 1 G* Y $end
$var wire 1 H* xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[28] $end
$var parameter 6 I* i $end
$scope module SOMA $end
$var wire 1 J* Cin $end
$var wire 1 K* Cout $end
$var wire 1 L* S $end
$var wire 1 M* X $end
$var wire 1 N* Y $end
$var wire 1 O* xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[29] $end
$var parameter 6 P* i $end
$scope module SOMA $end
$var wire 1 Q* Cin $end
$var wire 1 R* Cout $end
$var wire 1 S* S $end
$var wire 1 T* X $end
$var wire 1 U* Y $end
$var wire 1 V* xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[30] $end
$var parameter 6 W* i $end
$scope module SOMA $end
$var wire 1 X* Cin $end
$var wire 1 Y* Cout $end
$var wire 1 Z* S $end
$var wire 1 [* X $end
$var wire 1 \* Y $end
$var wire 1 ]* xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[31] $end
$var parameter 6 ^* i $end
$scope module SOMA $end
$var wire 1 _* Cin $end
$var wire 1 `* Cout $end
$var wire 1 a* S $end
$var wire 1 b* X $end
$var wire 1 c* Y $end
$var wire 1 d* xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[32] $end
$var parameter 7 e* i $end
$scope module SOMA $end
$var wire 1 f* Cin $end
$var wire 1 g* Cout $end
$var wire 1 h* S $end
$var wire 1 i* X $end
$var wire 1 j* Y $end
$var wire 1 k* xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[33] $end
$var parameter 7 l* i $end
$scope module SOMA $end
$var wire 1 m* Cin $end
$var wire 1 n* Cout $end
$var wire 1 o* S $end
$var wire 1 p* X $end
$var wire 1 q* Y $end
$var wire 1 r* xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[34] $end
$var parameter 7 s* i $end
$scope module SOMA $end
$var wire 1 t* Cin $end
$var wire 1 u* Cout $end
$var wire 1 v* S $end
$var wire 1 w* X $end
$var wire 1 x* Y $end
$var wire 1 y* xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[35] $end
$var parameter 7 z* i $end
$scope module SOMA $end
$var wire 1 {* Cin $end
$var wire 1 |* Cout $end
$var wire 1 }* S $end
$var wire 1 ~* X $end
$var wire 1 !+ Y $end
$var wire 1 "+ xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[36] $end
$var parameter 7 #+ i $end
$scope module SOMA $end
$var wire 1 $+ Cin $end
$var wire 1 %+ Cout $end
$var wire 1 &+ S $end
$var wire 1 '+ X $end
$var wire 1 (+ Y $end
$var wire 1 )+ xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[37] $end
$var parameter 7 *+ i $end
$scope module SOMA $end
$var wire 1 ++ Cin $end
$var wire 1 ,+ Cout $end
$var wire 1 -+ S $end
$var wire 1 .+ X $end
$var wire 1 /+ Y $end
$var wire 1 0+ xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[38] $end
$var parameter 7 1+ i $end
$scope module SOMA $end
$var wire 1 2+ Cin $end
$var wire 1 3+ Cout $end
$var wire 1 4+ S $end
$var wire 1 5+ X $end
$var wire 1 6+ Y $end
$var wire 1 7+ xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[39] $end
$var parameter 7 8+ i $end
$scope module SOMA $end
$var wire 1 9+ Cin $end
$var wire 1 :+ Cout $end
$var wire 1 ;+ S $end
$var wire 1 <+ X $end
$var wire 1 =+ Y $end
$var wire 1 >+ xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[40] $end
$var parameter 7 ?+ i $end
$scope module SOMA $end
$var wire 1 @+ Cin $end
$var wire 1 A+ Cout $end
$var wire 1 B+ S $end
$var wire 1 C+ X $end
$var wire 1 D+ Y $end
$var wire 1 E+ xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[41] $end
$var parameter 7 F+ i $end
$scope module SOMA $end
$var wire 1 G+ Cin $end
$var wire 1 H+ Cout $end
$var wire 1 I+ S $end
$var wire 1 J+ X $end
$var wire 1 K+ Y $end
$var wire 1 L+ xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[42] $end
$var parameter 7 M+ i $end
$scope module SOMA $end
$var wire 1 N+ Cin $end
$var wire 1 O+ Cout $end
$var wire 1 P+ S $end
$var wire 1 Q+ X $end
$var wire 1 R+ Y $end
$var wire 1 S+ xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[43] $end
$var parameter 7 T+ i $end
$scope module SOMA $end
$var wire 1 U+ Cin $end
$var wire 1 V+ Cout $end
$var wire 1 W+ S $end
$var wire 1 X+ X $end
$var wire 1 Y+ Y $end
$var wire 1 Z+ xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[44] $end
$var parameter 7 [+ i $end
$scope module SOMA $end
$var wire 1 \+ Cin $end
$var wire 1 ]+ Cout $end
$var wire 1 ^+ S $end
$var wire 1 _+ X $end
$var wire 1 `+ Y $end
$var wire 1 a+ xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[45] $end
$var parameter 7 b+ i $end
$scope module SOMA $end
$var wire 1 c+ Cin $end
$var wire 1 d+ Cout $end
$var wire 1 e+ S $end
$var wire 1 f+ X $end
$var wire 1 g+ Y $end
$var wire 1 h+ xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[46] $end
$var parameter 7 i+ i $end
$scope module SOMA $end
$var wire 1 j+ Cin $end
$var wire 1 k+ Cout $end
$var wire 1 l+ S $end
$var wire 1 m+ X $end
$var wire 1 n+ Y $end
$var wire 1 o+ xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[47] $end
$var parameter 7 p+ i $end
$scope module SOMA $end
$var wire 1 q+ Cin $end
$var wire 1 r+ Cout $end
$var wire 1 s+ S $end
$var wire 1 t+ X $end
$var wire 1 u+ Y $end
$var wire 1 v+ xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[48] $end
$var parameter 7 w+ i $end
$scope module SOMA $end
$var wire 1 x+ Cin $end
$var wire 1 y+ Cout $end
$var wire 1 z+ S $end
$var wire 1 {+ X $end
$var wire 1 |+ Y $end
$var wire 1 }+ xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[49] $end
$var parameter 7 ~+ i $end
$scope module SOMA $end
$var wire 1 !, Cin $end
$var wire 1 ", Cout $end
$var wire 1 #, S $end
$var wire 1 $, X $end
$var wire 1 %, Y $end
$var wire 1 &, xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[50] $end
$var parameter 7 ', i $end
$scope module SOMA $end
$var wire 1 (, Cin $end
$var wire 1 ), Cout $end
$var wire 1 *, S $end
$var wire 1 +, X $end
$var wire 1 ,, Y $end
$var wire 1 -, xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[51] $end
$var parameter 7 ., i $end
$scope module SOMA $end
$var wire 1 /, Cin $end
$var wire 1 0, Cout $end
$var wire 1 1, S $end
$var wire 1 2, X $end
$var wire 1 3, Y $end
$var wire 1 4, xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[52] $end
$var parameter 7 5, i $end
$scope module SOMA $end
$var wire 1 6, Cin $end
$var wire 1 7, Cout $end
$var wire 1 8, S $end
$var wire 1 9, X $end
$var wire 1 :, Y $end
$var wire 1 ;, xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[53] $end
$var parameter 7 <, i $end
$scope module SOMA $end
$var wire 1 =, Cin $end
$var wire 1 >, Cout $end
$var wire 1 ?, S $end
$var wire 1 @, X $end
$var wire 1 A, Y $end
$var wire 1 B, xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[54] $end
$var parameter 7 C, i $end
$scope module SOMA $end
$var wire 1 D, Cin $end
$var wire 1 E, Cout $end
$var wire 1 F, S $end
$var wire 1 G, X $end
$var wire 1 H, Y $end
$var wire 1 I, xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[55] $end
$var parameter 7 J, i $end
$scope module SOMA $end
$var wire 1 K, Cin $end
$var wire 1 L, Cout $end
$var wire 1 M, S $end
$var wire 1 N, X $end
$var wire 1 O, Y $end
$var wire 1 P, xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[56] $end
$var parameter 7 Q, i $end
$scope module SOMA $end
$var wire 1 R, Cin $end
$var wire 1 S, Cout $end
$var wire 1 T, S $end
$var wire 1 U, X $end
$var wire 1 V, Y $end
$var wire 1 W, xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[57] $end
$var parameter 7 X, i $end
$scope module SOMA $end
$var wire 1 Y, Cin $end
$var wire 1 Z, Cout $end
$var wire 1 [, S $end
$var wire 1 \, X $end
$var wire 1 ], Y $end
$var wire 1 ^, xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[58] $end
$var parameter 7 _, i $end
$scope module SOMA $end
$var wire 1 `, Cin $end
$var wire 1 a, Cout $end
$var wire 1 b, S $end
$var wire 1 c, X $end
$var wire 1 d, Y $end
$var wire 1 e, xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[59] $end
$var parameter 7 f, i $end
$scope module SOMA $end
$var wire 1 g, Cin $end
$var wire 1 h, Cout $end
$var wire 1 i, S $end
$var wire 1 j, X $end
$var wire 1 k, Y $end
$var wire 1 l, xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[60] $end
$var parameter 7 m, i $end
$scope module SOMA $end
$var wire 1 n, Cin $end
$var wire 1 o, Cout $end
$var wire 1 p, S $end
$var wire 1 q, X $end
$var wire 1 r, Y $end
$var wire 1 s, xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[61] $end
$var parameter 7 t, i $end
$scope module SOMA $end
$var wire 1 u, Cin $end
$var wire 1 v, Cout $end
$var wire 1 w, S $end
$var wire 1 x, X $end
$var wire 1 y, Y $end
$var wire 1 z, xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[62] $end
$var parameter 7 {, i $end
$scope module SOMA $end
$var wire 1 |, Cin $end
$var wire 1 }, Cout $end
$var wire 1 ~, S $end
$var wire 1 !- X $end
$var wire 1 "- Y $end
$var wire 1 #- xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[63] $end
$var parameter 7 $- i $end
$scope module SOMA $end
$var wire 1 %- Cin $end
$var wire 1 &- Cout $end
$var wire 1 '- S $end
$var wire 1 (- X $end
$var wire 1 )- Y $end
$var wire 1 *- xor1 $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
b111111 $-
b111110 {,
b111101 t,
b111100 m,
b111011 f,
b111010 _,
b111001 X,
b111000 Q,
b110111 J,
b110110 C,
b110101 <,
b110100 5,
b110011 .,
b110010 ',
b110001 ~+
b110000 w+
b101111 p+
b101110 i+
b101101 b+
b101100 [+
b101011 T+
b101010 M+
b101001 F+
b101000 ?+
b100111 8+
b100110 1+
b100101 *+
b100100 #+
b100011 z*
b100010 s*
b100001 l*
b100000 e*
b11111 ^*
b11110 W*
b11101 P*
b11100 I*
b11011 B*
b11010 ;*
b11001 4*
b11000 -*
b10111 &*
b10110 })
b10101 v)
b10100 o)
b10011 h)
b10010 a)
b10001 Z)
b10000 S)
b1111 L)
b1110 E)
b1101 >)
b1100 7)
b1011 0)
b1010 ))
b1001 ")
b1000 y(
b111 r(
b110 k(
b101 d(
b100 ](
b11 V(
b10 O(
b1 H(
b0 A(
b1000000 @(
b1000000 ;(
b1000000 %(
b11111 "(
b1000000 ~'
b11110 {'
b1000000 y'
b11101 v'
b1000000 t'
b11100 q'
b1000000 o'
b11011 l'
b1000000 j'
b11010 g'
b1000000 e'
b11001 b'
b1000000 `'
b11000 ]'
b1000000 ['
b10111 X'
b1000000 V'
b10110 S'
b1000000 Q'
b10101 N'
b1000000 L'
b10100 I'
b1000000 G'
b10011 D'
b1000000 B'
b10010 ?'
b1000000 ='
b10001 :'
b1000000 8'
b10000 5'
b1000000 3'
b1111 0'
b1000000 .'
b1110 +'
b1000000 )'
b1101 &'
b1000000 $'
b1100 !'
b1000000 }&
b1011 z&
b1000000 x&
b1010 u&
b1000000 s&
b1001 p&
b1000000 n&
b1000 k&
b1000000 i&
b111 f&
b1000000 d&
b110 a&
b1000000 _&
b101 \&
b1000000 Z&
b100 W&
b1000000 U&
b11 R&
b1000000 P&
b10 M&
b1000000 K&
b1 H&
b1000000 G&
b111111 9&
b111110 2&
b111101 +&
b111100 $&
b111011 {%
b111010 t%
b111001 m%
b111000 f%
b110111 _%
b110110 X%
b110101 Q%
b110100 J%
b110011 C%
b110010 <%
b110001 5%
b110000 .%
b101111 '%
b101110 ~$
b101101 w$
b101100 p$
b101011 i$
b101010 b$
b101001 [$
b101000 T$
b100111 M$
b100110 F$
b100101 ?$
b100100 8$
b100011 1$
b100010 *$
b100001 #$
b100000 z#
b11111 s#
b11110 l#
b11101 e#
b11100 ^#
b11011 W#
b11010 P#
b11001 I#
b11000 B#
b10111 ;#
b10110 4#
b10101 -#
b10100 &#
b10011 }"
b10010 v"
b10001 o"
b10000 h"
b1111 a"
b1110 Z"
b1101 S"
b1100 L"
b1011 E"
b1010 >"
b1001 7"
b1000 0"
b111 )"
b110 ""
b101 y
b100 r
b11 k
b10 d
b1 ]
b0 V
b1000000 U
b1000000 M
b100000 E
b1000000 @
b100000 ?
$end
#0
$dumpvars
x*-
x)-
x(-
x'-
x&-
x%-
x#-
x"-
x!-
x~,
x},
x|,
xz,
xy,
xx,
xw,
xv,
xu,
xs,
xr,
xq,
xp,
xo,
xn,
xl,
xk,
xj,
xi,
xh,
xg,
xe,
xd,
xc,
xb,
xa,
x`,
x^,
x],
x\,
x[,
xZ,
xY,
xW,
xV,
xU,
xT,
xS,
xR,
xP,
xO,
xN,
xM,
xL,
xK,
xI,
xH,
xG,
xF,
xE,
xD,
xB,
xA,
x@,
x?,
x>,
x=,
x;,
x:,
x9,
x8,
x7,
x6,
x4,
x3,
x2,
x1,
x0,
x/,
x-,
x,,
x+,
x*,
x),
x(,
x&,
x%,
x$,
x#,
x",
x!,
x}+
x|+
x{+
xz+
xy+
xx+
xv+
xu+
xt+
xs+
xr+
xq+
xo+
xn+
xm+
xl+
xk+
xj+
xh+
xg+
xf+
xe+
xd+
xc+
xa+
x`+
x_+
x^+
x]+
x\+
xZ+
xY+
xX+
xW+
xV+
xU+
xS+
xR+
xQ+
xP+
xO+
xN+
xL+
xK+
xJ+
xI+
xH+
xG+
xE+
xD+
xC+
xB+
xA+
x@+
x>+
x=+
x<+
x;+
x:+
x9+
x7+
x6+
x5+
x4+
x3+
x2+
x0+
x/+
x.+
x-+
x,+
x++
x)+
x(+
x'+
x&+
x%+
x$+
x"+
x!+
x~*
x}*
x|*
x{*
xy*
xx*
xw*
xv*
xu*
xt*
xr*
xq*
xp*
xo*
xn*
xm*
xk*
xj*
xi*
xh*
xg*
xf*
xd*
xc*
xb*
xa*
x`*
x_*
x]*
x\*
x[*
xZ*
xY*
xX*
xV*
xU*
xT*
xS*
xR*
xQ*
xO*
xN*
xM*
xL*
xK*
xJ*
xH*
xG*
xF*
xE*
xD*
xC*
xA*
x@*
x?*
x>*
x=*
x<*
x:*
x9*
x8*
x7*
x6*
x5*
x3*
x2*
x1*
x0*
x/*
x.*
x,*
x+*
x**
x)*
x(*
x'*
x%*
x$*
x#*
x"*
x!*
x~)
x|)
x{)
xz)
xy)
xx)
xw)
xu)
xt)
xs)
xr)
xq)
xp)
xn)
xm)
xl)
xk)
xj)
xi)
xg)
xf)
xe)
xd)
xc)
xb)
x`)
x_)
x^)
x])
x\)
x[)
xY)
xX)
xW)
xV)
xU)
xT)
xR)
xQ)
xP)
xO)
xN)
xM)
xK)
xJ)
xI)
xH)
xG)
xF)
xD)
xC)
xB)
xA)
x@)
x?)
x=)
x<)
x;)
x:)
x9)
x8)
x6)
x5)
x4)
x3)
x2)
x1)
x/)
x.)
x-)
x,)
x+)
x*)
x()
x')
x&)
x%)
x$)
x#)
x!)
x~(
x}(
x|(
x{(
xz(
xx(
xw(
xv(
xu(
xt(
xs(
xq(
xp(
xo(
xn(
xm(
xl(
xj(
xi(
xh(
xg(
xf(
xe(
xc(
xb(
xa(
x`(
x_(
x^(
x\(
x[(
xZ(
xY(
xX(
xW(
xU(
xT(
xS(
xR(
xQ(
xP(
xN(
xM(
xL(
xK(
xJ(
xI(
xG(
xF(
xE(
xD(
xC(
xB(
bx ?(
bx >(
bx =(
bx <(
bx :(
bx 9(
bx 8(
bx 7(
bx 6(
x5(
bx 4(
bx 3(
x2(
bx 1(
bx 0(
x/(
bx .(
bx -(
x,(
bx +(
bx *(
bx )(
bx ((
bx '(
bx &(
x$(
bx #(
bx !(
x}'
bx |'
bx z'
xx'
bx w'
bx u'
xs'
bx r'
bx p'
xn'
bx m'
bx k'
xi'
bx h'
bx f'
xd'
bx c'
bx a'
x_'
bx ^'
bx \'
xZ'
bx Y'
bx W'
xU'
bx T'
bx R'
xP'
bx O'
bx M'
xK'
bx J'
bx H'
xF'
bx E'
bx C'
xA'
bx @'
bx >'
x<'
bx ;'
bx 9'
x7'
bx 6'
bx 4'
x2'
bx 1'
bx /'
x-'
bx ,'
bx *'
x('
bx ''
bx %'
x#'
bx "'
bx ~&
x|&
bx {&
bx y&
xw&
bx v&
bx t&
xr&
bx q&
bx o&
xm&
bx l&
bx j&
xh&
bx g&
bx e&
xc&
bx b&
bx `&
x^&
bx ]&
bx [&
xY&
bx X&
bx V&
xT&
bx S&
bx Q&
xO&
bx N&
bx L&
xJ&
bx I&
bx F&
bx E&
bx D&
bx C&
bx B&
bx A&
bx @&
0?&
0>&
0=&
0<&
0;&
0:&
08&
07&
06&
05&
04&
03&
01&
00&
0/&
0.&
0-&
0,&
0*&
0)&
0(&
0'&
0&&
0%&
0#&
0"&
0!&
0~%
0}%
0|%
0z%
0y%
0x%
0w%
0v%
0u%
0s%
0r%
0q%
0p%
0o%
0n%
0l%
0k%
0j%
0i%
0h%
0g%
0e%
0d%
0c%
0b%
0a%
0`%
0^%
0]%
0\%
0[%
0Z%
0Y%
0W%
0V%
0U%
0T%
0S%
0R%
0P%
0O%
0N%
0M%
0L%
0K%
0I%
0H%
0G%
0F%
0E%
0D%
0B%
0A%
0@%
0?%
0>%
0=%
0;%
0:%
09%
08%
07%
06%
04%
03%
02%
01%
00%
0/%
0-%
0,%
0+%
0*%
0)%
0(%
0&%
0%%
0$%
0#%
0"%
0!%
0}$
0|$
0{$
0z$
0y$
0x$
0v$
0u$
0t$
0s$
0r$
0q$
0o$
0n$
0m$
0l$
0k$
0j$
0h$
0g$
0f$
0e$
0d$
0c$
0a$
0`$
0_$
0^$
0]$
0\$
0Z$
0Y$
0X$
0W$
0V$
0U$
0S$
0R$
0Q$
0P$
0O$
0N$
0L$
0K$
0J$
0I$
0H$
0G$
0E$
0D$
0C$
0B$
0A$
0@$
0>$
0=$
0<$
0;$
0:$
09$
07$
06$
05$
04$
03$
02$
00$
0/$
0.$
0-$
0,$
0+$
0)$
0($
0'$
0&$
0%$
0$$
0"$
0!$
0~#
0}#
0|#
0{#
0y#
0x#
0w#
0v#
0u#
0t#
0r#
0q#
0p#
0o#
0n#
0m#
0k#
0j#
0i#
0h#
0g#
0f#
0d#
0c#
0b#
0a#
0`#
0_#
0]#
0\#
0[#
0Z#
0Y#
0X#
0V#
0U#
0T#
0S#
0R#
0Q#
0O#
0N#
0M#
0L#
0K#
0J#
0H#
0G#
0F#
0E#
0D#
0C#
0A#
0@#
0?#
0>#
0=#
0<#
0:#
09#
08#
07#
06#
05#
03#
02#
01#
00#
0/#
0.#
0,#
0+#
0*#
0)#
0(#
0'#
0%#
0$#
0##
0"#
0!#
0~"
0|"
0{"
0z"
0y"
0x"
0w"
0u"
0t"
0s"
0r"
0q"
0p"
0n"
0m"
0l"
0k"
0j"
0i"
0g"
0f"
0e"
0d"
0c"
0b"
0`"
0_"
0^"
0]"
0\"
0["
0Y"
0X"
0W"
0V"
0U"
0T"
0R"
0Q"
0P"
0O"
0N"
0M"
0K"
0J"
0I"
0H"
0G"
0F"
0D"
0C"
0B"
0A"
0@"
0?"
0="
0<"
0;"
0:"
09"
08"
06"
05"
04"
03"
02"
01"
0/"
0."
0-"
0,"
0+"
0*"
0("
0'"
0&"
0%"
0$"
0#"
0!"
0~
0}
0|
0{
0z
0x
0w
0v
0u
0t
0s
0q
0p
0o
0n
0m
0l
0j
0i
0h
0g
0f
0e
0c
0b
0a
0`
0_
0^
1\
1[
0Z
1Y
0X
0W
0T
b1 S
b0 R
b1 Q
b0 P
0O
b0 N
b1 L
b0 K
b1 J
0I
b1 H
bx G
bx F
1D
b1000000000010000010000011 C
b0 B
b1000000000010000010000011 A
bx >
bx =
bx <
bx ;
bx :
bx 9
x8
x7
x6
x5
x4
bx 3
bx 2
bx 1
b0 0
bx /
bx .
b1000000000010000010000011 -
bx ,
bx +
bx *
bx )
1(
x'
1&
x%
x$
x#
x"
0!
$end
#5
0<'
0r&
0d'
0x'
0P'
0('
0^&
0/(
0_'
0i'
0n'
0s'
0}'
0$(
07'
0A'
0F'
0K'
0U'
0Z'
0m&
0w&
0|&
0#'
0-'
02'
0O&
0T&
0Y&
0c&
0h&
02(
0,(
b0 .(
b0 1(
b0 4(
b0x0 F&
b0x0 ((
b0x0 7(
b0x )(
b0x +(
b10000 1
b10000 G
b0 *(
b1 -(
b1 0(
b1 3(
b1 6(
0E(
0L(
0S(
0Z(
0a(
0h(
0o(
0v(
0}(
0&)
0-)
04)
0;)
0B)
0I)
0P)
0W)
0^)
0e)
0l)
0s)
0z)
0#*
0**
01*
08*
0?*
0F*
0M*
0T*
0[*
0b*
0i*
0p*
0w*
0~*
0'+
0.+
05+
0<+
0C+
0J+
0Q+
0X+
0_+
0f+
0m+
0t+
0{+
0$,
0+,
02,
09,
0@,
0G,
0N,
0U,
0\,
0c,
0j,
0q,
0x,
0!-
0(-
b10000 /
b1 ,
b1 E&
b1 '(
b0 :
b0 @&
b0 8(
b0 <(
b0 +
b0 C&
b10000 *
b10000 D&
b1000000000010000010000011 .
b1000000000010000010000011 F
1!
#10
1`
1^
b10 J
b10 L
b10 S
0Y
b10 R
1X
0\
1Z
b1010100000010000100000011 -
b1010100000010000100000011 A
b1010100000010000100000011 C
b1 0
b1 B
b1 K
b1 N
b1 P
17
0g(
b1011011011 3
b1011011011 B&
b1011011011 I&
b1011011011 N&
b1011011011 S&
b1011011011 X&
b1011011011 ]&
b1011011011 b&
b1011011011 g&
b1011011011 l&
b1011011011 q&
b1011011011 v&
b1011011011 {&
b1011011011 "'
b1011011011 ''
b1011011011 ,'
b1011011011 1'
b1011011011 6'
b1011011011 ;'
b1011011011 @'
b1011011011 E'
b1011011011 J'
b1011011011 O'
b1011011011 T'
b1011011011 Y'
b1011011011 ^'
b1011011011 c'
b1011011011 h'
b1011011011 m'
b1011011011 r'
b1011011011 w'
b1011011011 |'
b1011011011 #(
0e(
05
b1011011011 ;
b1011011011 =
0_(
1J&
0R(
0Y(
08
1`(
0n(
0u(
0|(
0%)
0,)
03)
0:)
0A)
0H)
0O)
0V)
0])
0d)
0k)
0r)
0y)
0"*
0)*
00*
07*
0>*
0E*
0L*
0S*
0Z*
0a*
0h*
0o*
0v*
0}*
0&+
0-+
04+
0;+
0B+
0I+
0P+
0W+
0^+
0e+
0l+
0s+
0z+
0#,
0*,
01,
08,
0?,
0F,
0M,
0T,
0[,
0b,
0i,
0p,
0w,
0~,
0'-
14
b10 F&
b10 ((
b10 7(
0P(
0W(
0^(
0l(
0s(
0z(
0#)
0*)
01)
08)
0?)
0F)
0M)
0T)
0[)
0b)
0i)
0p)
0w)
0~)
0'*
0.*
05*
0<*
0C*
0J*
0Q*
0X*
0_*
0f*
0m*
0t*
0{*
0$+
0++
02+
09+
0@+
0G+
0N+
0U+
0\+
0c+
0j+
0q+
0x+
0!,
0(,
0/,
06,
0=,
0D,
0K,
0R,
0Y,
0`,
0g,
0n,
0u,
0|,
0%-
06
b10000 <
0J(
0Q(
0X(
0f(
0m(
0t(
0{(
0$)
0+)
02)
09)
0@)
0G)
0N)
0U)
0\)
0c)
0j)
0q)
0x)
0!*
0(*
0/*
06*
0=*
0D*
0K*
0R*
0Y*
0`*
0g*
0n*
0u*
0|*
0%+
0,+
03+
0:+
0A+
0H+
0O+
0V+
0]+
0d+
0k+
0r+
0y+
0",
0),
00,
07,
0>,
0E,
0L,
0S,
0Z,
0a,
0h,
0o,
0v,
0},
0&-
0D(
b10000 )
b10000 :(
b10000 ?(
0K(
0I(
15(
0G(
0N(
0U(
0\(
1c(
0j(
0q(
0x(
0!)
0()
0/)
06)
0=)
0D)
0K)
0R)
0Y)
0`)
0g)
0n)
0u)
0|)
0%*
0,*
03*
0:*
0A*
0H*
0O*
0V*
0]*
0d*
0k*
0r*
0y*
0"+
0)+
00+
07+
0>+
0E+
0L+
0S+
0Z+
0a+
0h+
0o+
0v+
0}+
0&,
0-,
04,
0;,
0B,
0I,
0P,
0W,
0^,
0e,
0l,
0s,
0z,
0#-
0*-
0C(
b1 )(
b1 +(
0F(
0M(
0T(
0[(
1b(
0i(
0p(
0w(
0~(
0')
0.)
05)
0<)
0C)
0J)
0Q)
0X)
0_)
0f)
0m)
0t)
0{)
0$*
0+*
02*
09*
0@*
0G*
0N*
0U*
0\*
0c*
0j*
0q*
0x*
0!+
0(+
0/+
06+
0=+
0D+
0K+
0R+
0Y+
0`+
0g+
0n+
0u+
0|+
0%,
0,,
03,
0:,
0A,
0H,
0O,
0V,
0],
0d,
0k,
0r,
0y,
0"-
0)-
b10000 =(
0B(
b10000 2
b10000 9(
0!
0$
1%
b0 >(
0'
0"
1#
0&
#15
b100111000 3
b100111000 B&
b100111000 I&
b100111000 N&
b100111000 S&
b100111000 X&
b100111000 ]&
b100111000 b&
b100111000 g&
b100111000 l&
b100111000 q&
b100111000 v&
b100111000 {&
b100111000 "'
b100111000 ''
b100111000 ,'
b100111000 1'
b100111000 6'
b100111000 ;'
b100111000 @'
b100111000 E'
b100111000 J'
b100111000 O'
b100111000 T'
b100111000 Y'
b100111000 ^'
b100111000 c'
b100111000 h'
b100111000 m'
b100111000 r'
b100111000 w'
b100111000 |'
b100111000 #(
b100111000 ;
b100111000 =
b10101 <
1D(
b10101 )
b10101 :(
b10101 ?(
1R(
1G(
1U(
1O&
1F(
1T(
0J&
b10101 =(
b100 F&
b100 ((
b100 7(
b10101 2
b10101 9(
b10101 1
b10101 G
b10 -(
b10 0(
b10 3(
b10 6(
b10101 /
b10 ,
b10 E&
b10 '(
b10101 *
b10101 D&
b1010100000010000100000011 .
b1010100000010000100000011 F
b1011011011 L&
1!
#20
0g
0e
0^
0_
1Y
b0 R
0X
b11 J
b11 L
b11 S
1`
1\
1c
0Z
1a
b1000001000000110110011 -
b1000001000000110110011 A
b1000001000000110110011 C
b10 0
b10 B
b10 K
b10 N
b10 P
0!
#25
1P(
1R(
1J(
0U(
0O&
bx 3
bx B&
bx I&
bx N&
bx S&
bx X&
bx ]&
bx b&
bx g&
bx l&
bx q&
bx v&
bx {&
bx "'
bx ''
bx ,'
bx 1'
bx 6'
bx ;'
bx @'
bx E'
bx J'
bx O'
bx T'
bx Y'
bx ^'
bx c'
bx h'
bx m'
bx r'
bx w'
bx |'
bx #(
0g(
0F(
1M(
0T(
0b(
1T&
0I(
bx ;
bx =
b11101 <
0e(
b10 =(
b1000 F&
b1000 ((
b1000 7(
1D(
0C(
0K(
1Y(
1`(
b100 >(
0_(
1n(
1u(
b1011011101 )
b1011011101 :(
b1011011101 ?(
1%)
b10 2
b10 9(
1G(
0N(
1\(
1c(
1q(
1x(
1()
b10 1
b10 G
b11 -(
b11 0(
b11 3(
b11 6(
1E(
1L(
1Z(
1a(
1o(
1v(
1&)
b10 /
b11 ,
b11 E&
b11 '(
b1011011011 :
b1011011011 @&
b1011011011 8(
b1011011011 <(
b1 +
b1 C&
b100111000 9
b100111000 >
b100111000 A&
b10 *
b10 D&
b100111000 Q&
b1000001000000110110011 .
b1000001000000110110011 F
1!
#30
1g
1e
1_
0`
1^
b100 J
b100 L
b100 S
0Y
b110 R
1X
0\
1Z
b1000000000100010000001000110011 -
b1000000000100010000001000110011 A
b1000000000100010000001000110011 C
b11 0
b11 B
b11 K
b11 N
b11 P
1,)
1*)
1$)
0%)
1#)
1{(
1z(
1t(
0u(
1s(
1m(
0n(
1l(
1f(
0R(
0P(
1^(
b10011 <
1e(
1K(
0J(
0Y(
1X(
1`(
b11111110000 >(
1_(
0g(
b10000010011 )
b10000010011 :(
b10000010011 ?(
0|(
1N(
0\(
0c(
1j(
1!)
0M(
1[(
1b(
1i(
1~(
b100111000 =(
b10000010011 3
b10000010011 B&
b10000010011 I&
b10000010011 N&
b10000010011 S&
b10000010011 X&
b10000010011 ]&
b10000010011 b&
b10000010011 g&
b10000010011 l&
b10000010011 q&
b10000010011 v&
b10000010011 {&
b10000010011 "'
b10000010011 ''
b10000010011 ,'
b10000010011 1'
b10000010011 6'
b10000010011 ;'
b10000010011 @'
b10000010011 E'
b10000010011 J'
b10000010011 O'
b10000010011 T'
b10000010011 Y'
b10000010011 ^'
b10000010011 c'
b10000010011 h'
b10000010011 m'
b10000010011 r'
b10000010011 w'
b10000010011 |'
b10000010011 #(
b100111000 2
b100111000 9(
0!
1"
0#
#35
1Y&
1,)
1l(
1s(
1z(
1#)
1*)
0T&
bx ;
bx =
b10011 <
1f(
1m(
1t(
1{(
b10000010011 3
b10000010011 B&
b10000010011 I&
b10000010011 N&
b10000010011 S&
b10000010011 X&
b10000010011 ]&
b10000010011 b&
b10000010011 g&
b10000010011 l&
b10000010011 q&
b10000010011 v&
b10000010011 {&
b10000010011 "'
b10000010011 ''
b10000010011 ,'
b10000010011 1'
b10000010011 6'
b10000010011 ;'
b10000010011 @'
b10000010011 E'
b10000010011 J'
b10000010011 O'
b10000010011 T'
b10000010011 Y'
b10000010011 ^'
b10000010011 c'
b10000010011 h'
b10000010011 m'
b10000010011 r'
b10000010011 w'
b10000010011 |'
b10000010011 #(
b11111110000 >(
1$)
b10000 F&
b10000 ((
b10000 7(
1D(
1K(
0g(
0n(
0u(
0|(
b10000010011 )
b10000010011 :(
b10000010011 ?(
0%)
1F(
1M(
0i(
1p(
1w(
0~(
1')
1G(
1N(
1j(
1q(
1x(
1!)
1()
b1011011011 =(
b10000000001 1
b10000000001 G
b100 -(
b100 0(
b100 3(
b100 6(
0E(
0L(
1h(
0o(
0v(
1}(
0&)
b1011011011 2
b1011011011 9(
b10000000001 /
b100 ,
b100 E&
b100 '(
b100111000 :
b100111000 @&
b100111000 8(
b100111000 <(
b10 +
b10 C&
b1011011011 9
b1011011011 >
b1011011011 A&
b1 *
b1 D&
b1000000000100010000001000110011 .
b1000000000100010000001000110011 F
b10000010011 V&
1!
#40
0n
0e
0l
0^
0_
0f
1Y
b0 R
0X
0`
b101 J
b101 L
b101 S
1g
1\
0c
1j
0Z
0a
1h
b10000000010100100100011 -
b10000000010100100100011 A
b10000000010100100100011 C
b100 0
b100 B
b100 K
b100 N
b100 P
14
06
0&-
0%-
0},
0|,
0v,
0u,
0o,
0n,
0h,
0g,
0a,
0`,
0Z,
0Y,
0S,
0R,
0L,
0K,
0E,
0D,
0>,
0=,
07,
06,
00,
0/,
0),
0(,
0",
0!,
0y+
0x+
0r+
0q+
0k+
0j+
0d+
0c+
0]+
0\+
0V+
0U+
0O+
0N+
0H+
0G+
0A+
0@+
0:+
09+
03+
02+
0,+
0++
0%+
0$+
0|*
0{*
0u*
0t*
0n*
0m*
0g*
0f*
0`*
0_*
0Y*
0X*
0R*
0Q*
0K*
0J*
0D*
0C*
0=*
0<*
06*
05*
0/*
0.*
0(*
0'*
0!*
0~)
0x)
0w)
0q)
0p)
0j)
0i)
0c)
0b)
0\)
0[)
0U)
0T)
0N)
0M)
0G)
0F)
0@)
0?)
09)
08)
02)
07
0K(
0s(
0z(
0*)
01)
15
0^(
0e(
0m(
0t(
0$)
0+)
1R(
1Y(
0X(
1`(
0_(
0g(
1n(
0u(
0|(
1%)
1,)
13)
1:)
1A)
1H)
1O)
1V)
1])
1d)
1k)
1r)
1y)
1"*
1)*
10*
17*
1>*
1E*
1L*
1S*
1Z*
1a*
1h*
1o*
1v*
1}*
1&+
1-+
14+
1;+
1B+
1I+
1P+
1W+
1^+
1e+
1l+
1s+
1z+
1#,
1*,
11,
18,
1?,
1F,
1M,
1T,
1[,
1b,
1i,
1p,
1w,
1~,
1'-
0I(
0G(
0N(
1U(
1\(
1c(
0j(
0q(
0x(
0!)
0()
1/)
16)
1=)
1D)
1K)
1R)
1Y)
1`)
1g)
1n)
1u)
1|)
1%*
1,*
13*
1:*
1A*
1H*
1O*
1V*
1]*
1d*
1k*
1r*
1y*
1"+
1)+
10+
17+
1>+
1E+
1L+
1S+
1Z+
1a+
1h+
1o+
1v+
1}+
1&,
1-,
14,
1;,
1B,
1I,
1P,
1W,
1^,
1e,
1l,
1s,
1z,
1#-
1*-
b11101 <
b1111111111111111111111111111111111111111111111111111111001011101 3
b1111111111111111111111111111111111111111111111111111111001011101 B&
b1111111111111111111111111111111111111111111111111111111001011101 I&
b1111111111111111111111111111111111111111111111111111111001011101 N&
b1111111111111111111111111111111111111111111111111111111001011101 S&
b1111111111111111111111111111111111111111111111111111111001011101 X&
b1111111111111111111111111111111111111111111111111111111001011101 ]&
b1111111111111111111111111111111111111111111111111111111001011101 b&
b1111111111111111111111111111111111111111111111111111111001011101 g&
b1111111111111111111111111111111111111111111111111111111001011101 l&
b1111111111111111111111111111111111111111111111111111111001011101 q&
b1111111111111111111111111111111111111111111111111111111001011101 v&
b1111111111111111111111111111111111111111111111111111111001011101 {&
b1111111111111111111111111111111111111111111111111111111001011101 "'
b1111111111111111111111111111111111111111111111111111111001011101 ''
b1111111111111111111111111111111111111111111111111111111001011101 ,'
b1111111111111111111111111111111111111111111111111111111001011101 1'
b1111111111111111111111111111111111111111111111111111111001011101 6'
b1111111111111111111111111111111111111111111111111111111001011101 ;'
b1111111111111111111111111111111111111111111111111111111001011101 @'
b1111111111111111111111111111111111111111111111111111111001011101 E'
b1111111111111111111111111111111111111111111111111111111001011101 J'
b1111111111111111111111111111111111111111111111111111111001011101 O'
b1111111111111111111111111111111111111111111111111111111001011101 T'
b1111111111111111111111111111111111111111111111111111111001011101 Y'
b1111111111111111111111111111111111111111111111111111111001011101 ^'
b1111111111111111111111111111111111111111111111111111111001011101 c'
b1111111111111111111111111111111111111111111111111111111001011101 h'
b1111111111111111111111111111111111111111111111111111111001011101 m'
b1111111111111111111111111111111111111111111111111111111001011101 r'
b1111111111111111111111111111111111111111111111111111111001011101 w'
b1111111111111111111111111111111111111111111111111111111001011101 |'
b1111111111111111111111111111111111111111111111111111111001011101 #(
0C(
0F(
0M(
1T(
0[(
0b(
1i(
0p(
0w(
1~(
0')
1.)
15)
1<)
1C)
1J)
1Q)
1X)
1_)
1f)
1m)
1t)
1{)
1$*
1+*
12*
19*
1@*
1G*
1N*
1U*
1\*
1c*
1j*
1q*
1x*
1!+
1(+
1/+
16+
1=+
1D+
1K+
1R+
1Y+
1`+
1g+
1n+
1u+
1|+
1%,
1,,
13,
1:,
1A,
1H,
1O,
1V,
1],
1d,
1k,
1r,
1y,
1"-
1)-
b1111111111111111111111111111111111111111111111111111111001011101 )
b1111111111111111111111111111111111111111111111111111111001011101 :(
b1111111111111111111111111111111111111111111111111111111001011101 ?(
1D(
b1111111111111111111111111111111111111111111111111111110100100100 =(
1B(
0!
b1001000001 >(
1'
#45
1A'
b100 1(
0O&
05(
0Y&
17
1/(
0c&
0n(
0%)
1K(
0R(
1u(
0,)
03)
0:)
0A)
0H)
0O)
0V)
0])
0d)
0k)
0r)
0y)
0"*
0)*
00*
07*
0>*
0E*
0L*
0S*
0Z*
0a*
0h*
0o*
0v*
0}*
0&+
0-+
04+
0;+
0B+
0I+
0P+
0W+
0^+
0e+
0l+
0s+
0z+
0#,
0*,
01,
08,
0?,
0F,
0M,
0T,
0[,
0b,
0i,
0p,
0w,
0~,
0'-
b100 )(
b100 +(
b1000000000000000000 F&
b1000000000000000000 ((
b0 7(
b11 <
0l(
b110100011 3
b110100011 B&
b110100011 I&
b110100011 N&
b110100011 S&
b110100011 X&
b110100011 ]&
b110100011 b&
b110100011 g&
b110100011 l&
b110100011 q&
b110100011 v&
b110100011 {&
b110100011 "'
b110100011 ''
b110100011 ,'
b110100011 1'
b110100011 6'
b110100011 ;'
b110100011 @'
b110100011 E'
b110100011 J'
b110100011 O'
b110100011 T'
b110100011 Y'
b110100011 ^'
b110100011 c'
b110100011 h'
b110100011 m'
b110100011 r'
b110100011 w'
b110100011 |'
b110100011 #(
0#)
1N(
0U(
1x(
0/)
06)
0=)
0D)
0K)
0R)
0Y)
0`)
0g)
0n)
0u)
0|)
0%*
0,*
03*
0:*
0A*
0H*
0O*
0V*
0]*
0d*
0k*
0r*
0y*
0"+
0)+
00+
07+
0>+
0E+
0L+
0S+
0Z+
0a+
0h+
0o+
0v+
0}+
0&,
0-,
04,
0;,
0B,
0I,
0P,
0W,
0^,
0e,
0l,
0s,
0z,
0#-
0*-
05
0Y(
0`(
1g(
0f(
b110100011 )
b110100011 :(
b110100011 ?(
1|(
b1 >(
0{(
1M(
0T(
1w(
0.)
05)
0<)
0C)
0J)
0Q)
0X)
0_)
0f)
0m)
0t)
0{)
0$*
0+*
02*
09*
0@*
0G*
0N*
0U*
0\*
0c*
0j*
0q*
0x*
0!+
0(+
0/+
06+
0=+
0D+
0K+
0R+
0Y+
0`+
0g+
0n+
0u+
0|+
0%,
0,,
03,
0:,
0A,
0H,
0O,
0V,
0],
0d,
0k,
0r,
0y,
0"-
0)-
0\(
0c(
1j(
1!)
b110100010 =(
b10010 1
b10010 G
b10 *(
b10 -(
b10 0(
b10 3(
b10 6(
0Z(
0a(
0h(
0}(
b1111111111111111111111111111111111111111111111111111111001011101 2
b1111111111111111111111111111111111111111111111111111111001011101 9(
b10010 /
b10010 ,
b10010 E&
b10010 '(
b0 :
b0 @&
b0 8(
b0 <(
b0 +
b0 C&
b1111111111111111111111111111111111111111111111111111111001011101 9
b1111111111111111111111111111111111111111111111111111111001011101 >
b1111111111111111111111111111111111111111111111111111111001011101 A&
b100 *
b100 D&
b1111111111111111111111111111111111111111111111111111111001011101 [&
b10000000010100100100011 .
b10000000010100100100011 F
1!
#50
1`
1^
b110 J
b110 L
b110 S
0Y
b10 R
1X
0\
1Z
b11001000100000001010010011 -
b11001000100000001010010011 A
b11001000100000001010010011 C
b101 0
b101 B
b101 K
b101 N
b101 P
0A'
b0 F&
b0 ((
b0 1(
1`(
0g(
0u(
0|(
0/(
1c(
0j(
0x(
0!)
b10010 <
b0 )(
b0 +(
1b(
0i(
0w(
0~(
b10010 )
b10010 :(
b10010 ?(
0D(
b10010 =(
0B(
bx 3
bx B&
bx I&
bx N&
bx S&
bx X&
bx ]&
bx b&
bx g&
bx l&
bx q&
bx v&
bx {&
bx "'
bx ''
bx ,'
bx 1'
bx 6'
bx ;'
bx @'
bx E'
bx J'
bx O'
bx T'
bx Y'
bx ^'
bx c'
bx h'
bx m'
bx r'
bx w'
bx |'
bx #(
b10010 2
b10010 9(
0!
1$
0%
b0 >(
0'
0"
1#
#55
1u(
1s(
1m(
1l(
1f(
1j(
07
0g(
1i(
b1111 <
1e(
b110010 =(
15
1D(
1R(
1Y(
0`(
b11100000 >(
1_(
0n(
1%)
1,)
13)
1:)
1A)
1H)
1O)
1V)
1])
1d)
1k)
1r)
1y)
1"*
1)*
10*
17*
1>*
1E*
1L*
1S*
1Z*
1a*
1h*
1o*
1v*
1}*
1&+
1-+
14+
1;+
1B+
1I+
1P+
1W+
1^+
1e+
1l+
1s+
1z+
1#,
1*,
11,
18,
1?,
1F,
1M,
1T,
1[,
1b,
1i,
1p,
1w,
1~,
b1111111111111111111111111111111111111111111111111111111010001111 )
b1111111111111111111111111111111111111111111111111111111010001111 :(
b1111111111111111111111111111111111111111111111111111111010001111 ?(
1'-
b110010 2
b110010 9(
1G(
1U(
1\(
0c(
1q(
1()
1/)
16)
1=)
1D)
1K)
1R)
1Y)
1`)
1g)
1n)
1u)
1|)
1%*
1,*
13*
1:*
1A*
1H*
1O*
1V*
1]*
1d*
1k*
1r*
1y*
1"+
1)+
10+
17+
1>+
1E+
1L+
1S+
1Z+
1a+
1h+
1o+
1v+
1}+
1&,
1-,
14,
1;,
1B,
1I,
1P,
1W,
1^,
1e,
1l,
1s,
1z,
1#-
1*-
b110010 1
b110010 G
b0 *(
b101 -(
b101 0(
b101 3(
b101 6(
1E(
1S(
1Z(
1a(
1o(
1&)
1-)
14)
1;)
1B)
1I)
1P)
1W)
1^)
1e)
1l)
1s)
1z)
1#*
1**
11*
18*
1?*
1F*
1M*
1T*
1[*
1b*
1i*
1p*
1w*
1~*
1'+
1.+
15+
1<+
1C+
1J+
1Q+
1X+
1_+
1f+
1m+
1t+
1{+
1$,
1+,
12,
19,
1@,
1G,
1N,
1U,
1\,
1c,
1j,
1q,
1x,
1!-
1(-
b110010 /
b101 ,
b101 E&
b101 '(
b1111111111111111111111111111111111111111111111111111111001011101 :
b1111111111111111111111111111111111111111111111111111111001011101 @&
b1111111111111111111111111111111111111111111111111111111001011101 8(
b1111111111111111111111111111111111111111111111111111111001011101 <(
b100 +
b100 C&
bx 9
bx >
bx A&
b10010 *
b10010 D&
bx 3
bx B&
bx I&
bx N&
bx S&
bx X&
bx ]&
bx b&
bx g&
bx l&
bx q&
bx v&
bx {&
bx "'
bx ''
bx ,'
bx 1'
bx 6'
bx ;'
bx @'
bx E'
bx J'
bx O'
bx T'
bx Y'
bx ^'
bx c'
bx h'
bx m'
bx r'
bx w'
bx |'
bx #(
b11001000100000001010010011 .
b11001000100000001010010011 F
bx ;
bx =
1!
#60
0n
0l
0f
1g
0e
0^
0_
1Y
b0 R
0X
b111 J
b111 L
b111 S
1`
1\
1c
0Z
1a
b1001000000010001100000011 -
b1001000000010001100000011 A
b1001000000010001100000011 C
b110 0
b110 B
b110 K
b110 N
b110 P
1^&
b100000 F&
b100000 ((
b100000 7(
15(
b1 )(
b1 +(
b1111111111111111111111111111111111111111111111111111111010001111 3
b1111111111111111111111111111111111111111111111111111111010001111 B&
b1111111111111111111111111111111111111111111111111111111010001111 I&
b1111111111111111111111111111111111111111111111111111111010001111 N&
b1111111111111111111111111111111111111111111111111111111010001111 S&
b1111111111111111111111111111111111111111111111111111111010001111 X&
b1111111111111111111111111111111111111111111111111111111010001111 ]&
b1111111111111111111111111111111111111111111111111111111010001111 b&
b1111111111111111111111111111111111111111111111111111111010001111 g&
b1111111111111111111111111111111111111111111111111111111010001111 l&
b1111111111111111111111111111111111111111111111111111111010001111 q&
b1111111111111111111111111111111111111111111111111111111010001111 v&
b1111111111111111111111111111111111111111111111111111111010001111 {&
b1111111111111111111111111111111111111111111111111111111010001111 "'
b1111111111111111111111111111111111111111111111111111111010001111 ''
b1111111111111111111111111111111111111111111111111111111010001111 ,'
b1111111111111111111111111111111111111111111111111111111010001111 1'
b1111111111111111111111111111111111111111111111111111111010001111 6'
b1111111111111111111111111111111111111111111111111111111010001111 ;'
b1111111111111111111111111111111111111111111111111111111010001111 @'
b1111111111111111111111111111111111111111111111111111111010001111 E'
b1111111111111111111111111111111111111111111111111111111010001111 J'
b1111111111111111111111111111111111111111111111111111111010001111 O'
b1111111111111111111111111111111111111111111111111111111010001111 T'
b1111111111111111111111111111111111111111111111111111111010001111 Y'
b1111111111111111111111111111111111111111111111111111111010001111 ^'
b1111111111111111111111111111111111111111111111111111111010001111 c'
b1111111111111111111111111111111111111111111111111111111010001111 h'
b1111111111111111111111111111111111111111111111111111111010001111 m'
b1111111111111111111111111111111111111111111111111111111010001111 r'
b1111111111111111111111111111111111111111111111111111111010001111 w'
b1111111111111111111111111111111111111111111111111111111010001111 |'
b1111111111111111111111111111111111111111111111111111111010001111 #(
0!
0$
1%
1"
#65
0l(
0f(
0u(
0j(
0Y&
1c&
0g(
0s(
0i(
0^&
17
b1111111111111111111111111111111111111111111111111111111001011101 ;
b1111111111111111111111111111111111111111111111111111111001011101 =
b10010 <
0e(
0m(
b10010 3
b10010 B&
b10010 I&
b10010 N&
b10010 S&
b10010 X&
b10010 ]&
b10010 b&
b10010 g&
b10010 l&
b10010 q&
b10010 v&
b10010 {&
b10010 "'
b10010 ''
b10010 ,'
b10010 1'
b10010 6'
b10010 ;'
b10010 @'
b10010 E'
b10010 J'
b10010 O'
b10010 T'
b10010 Y'
b10010 ^'
b10010 c'
b10010 h'
b10010 m'
b10010 r'
b10010 w'
b10010 |'
b10010 #(
b10010 =(
b1000000 F&
b1000000 ((
b1000000 7(
0D(
0R(
0Y(
1`(
b0 >(
0_(
0n(
0%)
0,)
03)
0:)
0A)
0H)
0O)
0V)
0])
0d)
0k)
0r)
0y)
0"*
0)*
00*
07*
0>*
0E*
0L*
0S*
0Z*
0a*
0h*
0o*
0v*
0}*
0&+
0-+
04+
0;+
0B+
0I+
0P+
0W+
0^+
0e+
0l+
0s+
0z+
0#,
0*,
01,
08,
0?,
0F,
0M,
0T,
0[,
0b,
0i,
0p,
0w,
0~,
b10010 )
b10010 :(
b10010 ?(
0'-
b10010 2
b10010 9(
05
0G(
0U(
0\(
1c(
0q(
0()
0/)
06)
0=)
0D)
0K)
0R)
0Y)
0`)
0g)
0n)
0u)
0|)
0%*
0,*
03*
0:*
0A*
0H*
0O*
0V*
0]*
0d*
0k*
0r*
0y*
0"+
0)+
00+
07+
0>+
0E+
0L+
0S+
0Z+
0a+
0h+
0o+
0v+
0}+
0&,
0-,
04,
0;,
0B,
0I,
0P,
0W,
0^,
0e,
0l,
0s,
0z,
0#-
0*-
b10010 1
b10010 G
b110 -(
b110 0(
b110 3(
b110 6(
0E(
0S(
0Z(
0a(
0o(
0&)
0-)
04)
0;)
0B)
0I)
0P)
0W)
0^)
0e)
0l)
0s)
0z)
0#*
0**
01*
08*
0?*
0F*
0M*
0T*
0[*
0b*
0i*
0p*
0w*
0~*
0'+
0.+
05+
0<+
0C+
0J+
0Q+
0X+
0_+
0f+
0m+
0t+
0{+
0$,
0+,
02,
09,
0@,
0G,
0N,
0U,
0\,
0c,
0j,
0q,
0x,
0!-
0(-
b10010 /
b110 ,
b110 E&
b110 '(
b0 :
b0 @&
b0 8(
b0 <(
b0 +
b0 C&
b1111111111111111111111111111111111111111111111111111111010001111 `&
b1001000000010001100000011 .
b1001000000010001100000011 F
1!
#70
1n
1l
1f
0g
1e
1_
0`
1^
b1000 J
b1000 L
b1000 S
0Y
b1110 R
1X
0\
1Z
bx -
bx A
bx C
b111 0
b111 B
b111 K
b111 N
b111 P
b1111111111111111111111111111111111111111111111111111111001011101 3
b1111111111111111111111111111111111111111111111111111111001011101 B&
b1111111111111111111111111111111111111111111111111111111001011101 I&
b1111111111111111111111111111111111111111111111111111111001011101 N&
b1111111111111111111111111111111111111111111111111111111001011101 S&
b1111111111111111111111111111111111111111111111111111111001011101 X&
b1111111111111111111111111111111111111111111111111111111001011101 ]&
b1111111111111111111111111111111111111111111111111111111001011101 b&
b1111111111111111111111111111111111111111111111111111111001011101 g&
b1111111111111111111111111111111111111111111111111111111001011101 l&
b1111111111111111111111111111111111111111111111111111111001011101 q&
b1111111111111111111111111111111111111111111111111111111001011101 v&
b1111111111111111111111111111111111111111111111111111111001011101 {&
b1111111111111111111111111111111111111111111111111111111001011101 "'
b1111111111111111111111111111111111111111111111111111111001011101 ''
b1111111111111111111111111111111111111111111111111111111001011101 ,'
b1111111111111111111111111111111111111111111111111111111001011101 1'
b1111111111111111111111111111111111111111111111111111111001011101 6'
b1111111111111111111111111111111111111111111111111111111001011101 ;'
b1111111111111111111111111111111111111111111111111111111001011101 @'
b1111111111111111111111111111111111111111111111111111111001011101 E'
b1111111111111111111111111111111111111111111111111111111001011101 J'
b1111111111111111111111111111111111111111111111111111111001011101 O'
b1111111111111111111111111111111111111111111111111111111001011101 T'
b1111111111111111111111111111111111111111111111111111111001011101 Y'
b1111111111111111111111111111111111111111111111111111111001011101 ^'
b1111111111111111111111111111111111111111111111111111111001011101 c'
b1111111111111111111111111111111111111111111111111111111001011101 h'
b1111111111111111111111111111111111111111111111111111111001011101 m'
b1111111111111111111111111111111111111111111111111111111001011101 r'
b1111111111111111111111111111111111111111111111111111111001011101 w'
b1111111111111111111111111111111111111111111111111111111001011101 |'
b1111111111111111111111111111111111111111111111111111111001011101 #(
0!
0"
#75
x4
x6
x&-
x%-
x},
x|,
xv,
xu,
xo,
xn,
xh,
xg,
xa,
x`,
xZ,
xY,
xS,
xR,
xL,
xK,
xE,
xD,
x>,
x=,
x7,
x6,
x0,
x/,
x),
x(,
x",
x!,
xy+
xx+
xr+
xq+
xk+
xj+
xd+
xc+
x]+
x\+
xV+
xU+
xO+
xN+
xH+
xG+
xA+
x@+
x:+
x9+
x3+
x2+
x,+
x++
x%+
x$+
x|*
x{*
xu*
xt*
xn*
xm*
xg*
xf*
x`*
x_*
xY*
xX*
xR*
xQ*
xK*
xJ*
xD*
xC*
x=*
x<*
x6*
x5*
x/*
x.*
x(*
x'*
x!*
x~)
xx)
xw)
xq)
xp)
xj)
xi)
xc)
xb)
x\)
x[)
xU)
xT)
xN)
xM)
xG)
xF)
x@)
x?)
x9)
x7'
x<'
xA'
xF'
xK'
xP'
xU'
xZ'
x_'
xd'
xi'
xn'
xs'
xx'
x}'
x$(
xm&
xr&
xw&
x|&
x#'
x('
x-'
x2'
bx 1(
bx .(
xI(
x^(
xs(
xz(
x#)
x*)
x1)
x8)
bx 4(
xJ&
xO&
xT&
xW(
xl(
xC(
xX(
xm(
xt(
x{(
x$)
x+)
x2)
xY&
x^&
xQ(
xf(
x5(
x/(
x,(
xc&
x7
bx 3
bx B&
bx I&
bx N&
bx S&
bx X&
bx ]&
bx b&
bx g&
bx l&
bx q&
bx v&
bx {&
bx "'
bx ''
bx ,'
bx 1'
bx 6'
bx ;'
bx @'
bx E'
bx J'
bx O'
bx T'
bx Y'
bx ^'
bx c'
bx h'
bx m'
bx r'
bx w'
bx |'
bx #(
xF(
xM(
xT(
x[(
xb(
xi(
xp(
xw(
x~(
x')
x.)
x5)
x2(
xh&
xP(
bx ;
bx =
bx <
xe(
b0xxxxxxxxxxxx =(
bx )(
bx +(
bx F&
bx ((
bx 7(
x5
xD(
x8
xK(
xJ(
xR(
xY(
x`(
bx0 >(
x_(
xg(
xn(
xu(
x|(
x%)
x,)
x3)
x:)
xA)
xH)
xO)
xV)
x])
xd)
xk)
xr)
xy)
x"*
x)*
x0*
x7*
x>*
xE*
xL*
xS*
xZ*
xa*
xh*
xo*
xv*
x}*
x&+
x-+
x4+
x;+
xB+
xI+
xP+
xW+
x^+
xe+
xl+
xs+
xz+
x#,
x*,
x1,
x8,
x?,
xF,
xM,
xT,
x[,
xb,
xi,
xp,
xw,
x~,
bx )
bx :(
bx ?(
x'-
b0xxxxxxxxxxxx 2
b0xxxxxxxxxxxx 9(
xG(
xN(
xU(
x\(
xc(
xj(
xq(
xx(
x!)
x()
x/)
x6)
x=)
xD)
xK)
xR)
xY)
x`)
xg)
xn)
xu)
x|)
x%*
x,*
x3*
x:*
xA*
xH*
xO*
xV*
x]*
xd*
xk*
xr*
xy*
x"+
x)+
x0+
x7+
x>+
xE+
xL+
xS+
xZ+
xa+
xh+
xo+
xv+
x}+
x&,
x-,
x4,
x;,
xB,
xI,
xP,
xW,
x^,
xe,
xl,
xs,
xz,
x#-
x*-
bx 1
bx G
bx *(
bx -(
bx 0(
bx 3(
bx 6(
xE(
xL(
xS(
xZ(
xa(
xh(
xo(
xv(
x}(
x&)
x-)
x4)
x;)
xB)
xI)
xP)
xW)
x^)
xe)
xl)
xs)
xz)
x#*
x**
x1*
x8*
x?*
xF*
xM*
xT*
x[*
xb*
xi*
xp*
xw*
x~*
x'+
x.+
x5+
x<+
xC+
xJ+
xQ+
xX+
x_+
xf+
xm+
xt+
x{+
x$,
x+,
x2,
x9,
x@,
xG,
xN,
xU,
x\,
xc,
xj,
xq,
xx,
x!-
x(-
bx /
bx ,
bx E&
bx '(
bx :
bx @&
bx 8(
bx <(
bx +
bx C&
bx *
bx D&
bx .
bx F
b1111111111111111111111111111111111111111111111111111111001011101 e&
1!
#80
0u
0e
0l
0s
0^
0_
0f
0m
1Y
b0 R
0X
0`
0g
b1001 J
b1001 L
b1001 S
1n
1\
0c
0j
1q
0Z
0a
0h
1o
b1000 0
b1000 B
b1000 K
b1000 N
b1000 P
0!
