$date
	Mon May 08 19:53:40 2023
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module datapath_with_instructions_tb $end
$var reg 1 ! CLK $end
$var reg 1 " RF_din_sel $end
$var reg 1 # ULA_din2_sel $end
$var reg 1 $ WE_MEM $end
$var reg 1 % WE_RF $end
$var reg 1 & reset_pc $end
$var reg 1 ' sub $end
$scope module UUT $end
$var wire 1 ! CLK $end
$var wire 1 " RF_din_sel $end
$var wire 1 # ULA_din2_sel $end
$var wire 1 $ WE_MEM $end
$var wire 1 % WE_RF $end
$var wire 1 ( load_pc $end
$var wire 1 & reset_pc $end
$var wire 1 ' sub $end
$var wire 5 ) rs2 [4:0] $end
$var wire 5 * rs1 [4:0] $end
$var wire 5 + rd [4:0] $end
$var wire 32 , instruction_mem [31:0] $end
$var wire 32 - instruction [31:0] $end
$var wire 12 . imm [11:0] $end
$var wire 64 / im_addr [63:0] $end
$var wire 12 0 extended_imm [11:0] $end
$scope module DP $end
$var wire 1 ! CLK $end
$var wire 1 " RF_din_sel $end
$var wire 1 # ULA_din2_sel $end
$var wire 1 $ WE_MEM $end
$var wire 1 % WE_RF $end
$var wire 12 1 immediate [11:0] $end
$var wire 5 2 rd [4:0] $end
$var wire 5 3 rs1 [4:0] $end
$var wire 5 4 rs2 [4:0] $end
$var wire 1 ' sub $end
$var wire 64 5 ula [63:0] $end
$var wire 64 6 ULA_Din2 [63:0] $end
$var wire 64 7 RF_Din [63:0] $end
$var wire 64 8 Dout_rs2 [63:0] $end
$var wire 64 9 Dout_rs1 [63:0] $end
$var wire 64 : DM_out [63:0] $end
$scope module ULA $end
$var wire 64 ; s2 [63:0] $end
$var wire 1 ' sub $end
$var wire 64 < s1 [63:0] $end
$var wire 64 = res [63:0] $end
$var parameter 32 > SIZE $end
$scope module adder $end
$var wire 1 ' Cin $end
$var wire 1 ? Cout $end
$var wire 64 @ Y [63:0] $end
$var wire 1 A cout $end
$var wire 65 B cins [64:0] $end
$var wire 64 C X [63:0] $end
$var wire 64 D S [63:0] $end
$var parameter 32 E SIZE $end
$scope begin genblk1[0] $end
$var parameter 2 F i $end
$scope module SOMA $end
$var wire 1 G Cin $end
$var wire 1 H Cout $end
$var wire 1 I S $end
$var wire 1 J X $end
$var wire 1 K Y $end
$var wire 1 L xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[1] $end
$var parameter 2 M i $end
$scope module SOMA $end
$var wire 1 N Cin $end
$var wire 1 O Cout $end
$var wire 1 P S $end
$var wire 1 Q X $end
$var wire 1 R Y $end
$var wire 1 S xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[2] $end
$var parameter 3 T i $end
$scope module SOMA $end
$var wire 1 U Cin $end
$var wire 1 V Cout $end
$var wire 1 W S $end
$var wire 1 X X $end
$var wire 1 Y Y $end
$var wire 1 Z xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[3] $end
$var parameter 3 [ i $end
$scope module SOMA $end
$var wire 1 \ Cin $end
$var wire 1 ] Cout $end
$var wire 1 ^ S $end
$var wire 1 _ X $end
$var wire 1 ` Y $end
$var wire 1 a xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[4] $end
$var parameter 4 b i $end
$scope module SOMA $end
$var wire 1 c Cin $end
$var wire 1 d Cout $end
$var wire 1 e S $end
$var wire 1 f X $end
$var wire 1 g Y $end
$var wire 1 h xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[5] $end
$var parameter 4 i i $end
$scope module SOMA $end
$var wire 1 j Cin $end
$var wire 1 k Cout $end
$var wire 1 l S $end
$var wire 1 m X $end
$var wire 1 n Y $end
$var wire 1 o xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[6] $end
$var parameter 4 p i $end
$scope module SOMA $end
$var wire 1 q Cin $end
$var wire 1 r Cout $end
$var wire 1 s S $end
$var wire 1 t X $end
$var wire 1 u Y $end
$var wire 1 v xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[7] $end
$var parameter 4 w i $end
$scope module SOMA $end
$var wire 1 x Cin $end
$var wire 1 y Cout $end
$var wire 1 z S $end
$var wire 1 { X $end
$var wire 1 | Y $end
$var wire 1 } xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[8] $end
$var parameter 5 ~ i $end
$scope module SOMA $end
$var wire 1 !" Cin $end
$var wire 1 "" Cout $end
$var wire 1 #" S $end
$var wire 1 $" X $end
$var wire 1 %" Y $end
$var wire 1 &" xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[9] $end
$var parameter 5 '" i $end
$scope module SOMA $end
$var wire 1 (" Cin $end
$var wire 1 )" Cout $end
$var wire 1 *" S $end
$var wire 1 +" X $end
$var wire 1 ," Y $end
$var wire 1 -" xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[10] $end
$var parameter 5 ." i $end
$scope module SOMA $end
$var wire 1 /" Cin $end
$var wire 1 0" Cout $end
$var wire 1 1" S $end
$var wire 1 2" X $end
$var wire 1 3" Y $end
$var wire 1 4" xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[11] $end
$var parameter 5 5" i $end
$scope module SOMA $end
$var wire 1 6" Cin $end
$var wire 1 7" Cout $end
$var wire 1 8" S $end
$var wire 1 9" X $end
$var wire 1 :" Y $end
$var wire 1 ;" xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[12] $end
$var parameter 5 <" i $end
$scope module SOMA $end
$var wire 1 =" Cin $end
$var wire 1 >" Cout $end
$var wire 1 ?" S $end
$var wire 1 @" X $end
$var wire 1 A" Y $end
$var wire 1 B" xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[13] $end
$var parameter 5 C" i $end
$scope module SOMA $end
$var wire 1 D" Cin $end
$var wire 1 E" Cout $end
$var wire 1 F" S $end
$var wire 1 G" X $end
$var wire 1 H" Y $end
$var wire 1 I" xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[14] $end
$var parameter 5 J" i $end
$scope module SOMA $end
$var wire 1 K" Cin $end
$var wire 1 L" Cout $end
$var wire 1 M" S $end
$var wire 1 N" X $end
$var wire 1 O" Y $end
$var wire 1 P" xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[15] $end
$var parameter 5 Q" i $end
$scope module SOMA $end
$var wire 1 R" Cin $end
$var wire 1 S" Cout $end
$var wire 1 T" S $end
$var wire 1 U" X $end
$var wire 1 V" Y $end
$var wire 1 W" xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[16] $end
$var parameter 6 X" i $end
$scope module SOMA $end
$var wire 1 Y" Cin $end
$var wire 1 Z" Cout $end
$var wire 1 [" S $end
$var wire 1 \" X $end
$var wire 1 ]" Y $end
$var wire 1 ^" xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[17] $end
$var parameter 6 _" i $end
$scope module SOMA $end
$var wire 1 `" Cin $end
$var wire 1 a" Cout $end
$var wire 1 b" S $end
$var wire 1 c" X $end
$var wire 1 d" Y $end
$var wire 1 e" xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[18] $end
$var parameter 6 f" i $end
$scope module SOMA $end
$var wire 1 g" Cin $end
$var wire 1 h" Cout $end
$var wire 1 i" S $end
$var wire 1 j" X $end
$var wire 1 k" Y $end
$var wire 1 l" xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[19] $end
$var parameter 6 m" i $end
$scope module SOMA $end
$var wire 1 n" Cin $end
$var wire 1 o" Cout $end
$var wire 1 p" S $end
$var wire 1 q" X $end
$var wire 1 r" Y $end
$var wire 1 s" xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[20] $end
$var parameter 6 t" i $end
$scope module SOMA $end
$var wire 1 u" Cin $end
$var wire 1 v" Cout $end
$var wire 1 w" S $end
$var wire 1 x" X $end
$var wire 1 y" Y $end
$var wire 1 z" xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[21] $end
$var parameter 6 {" i $end
$scope module SOMA $end
$var wire 1 |" Cin $end
$var wire 1 }" Cout $end
$var wire 1 ~" S $end
$var wire 1 !# X $end
$var wire 1 "# Y $end
$var wire 1 ## xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[22] $end
$var parameter 6 $# i $end
$scope module SOMA $end
$var wire 1 %# Cin $end
$var wire 1 &# Cout $end
$var wire 1 '# S $end
$var wire 1 (# X $end
$var wire 1 )# Y $end
$var wire 1 *# xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[23] $end
$var parameter 6 +# i $end
$scope module SOMA $end
$var wire 1 ,# Cin $end
$var wire 1 -# Cout $end
$var wire 1 .# S $end
$var wire 1 /# X $end
$var wire 1 0# Y $end
$var wire 1 1# xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[24] $end
$var parameter 6 2# i $end
$scope module SOMA $end
$var wire 1 3# Cin $end
$var wire 1 4# Cout $end
$var wire 1 5# S $end
$var wire 1 6# X $end
$var wire 1 7# Y $end
$var wire 1 8# xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[25] $end
$var parameter 6 9# i $end
$scope module SOMA $end
$var wire 1 :# Cin $end
$var wire 1 ;# Cout $end
$var wire 1 <# S $end
$var wire 1 =# X $end
$var wire 1 ># Y $end
$var wire 1 ?# xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[26] $end
$var parameter 6 @# i $end
$scope module SOMA $end
$var wire 1 A# Cin $end
$var wire 1 B# Cout $end
$var wire 1 C# S $end
$var wire 1 D# X $end
$var wire 1 E# Y $end
$var wire 1 F# xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[27] $end
$var parameter 6 G# i $end
$scope module SOMA $end
$var wire 1 H# Cin $end
$var wire 1 I# Cout $end
$var wire 1 J# S $end
$var wire 1 K# X $end
$var wire 1 L# Y $end
$var wire 1 M# xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[28] $end
$var parameter 6 N# i $end
$scope module SOMA $end
$var wire 1 O# Cin $end
$var wire 1 P# Cout $end
$var wire 1 Q# S $end
$var wire 1 R# X $end
$var wire 1 S# Y $end
$var wire 1 T# xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[29] $end
$var parameter 6 U# i $end
$scope module SOMA $end
$var wire 1 V# Cin $end
$var wire 1 W# Cout $end
$var wire 1 X# S $end
$var wire 1 Y# X $end
$var wire 1 Z# Y $end
$var wire 1 [# xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[30] $end
$var parameter 6 \# i $end
$scope module SOMA $end
$var wire 1 ]# Cin $end
$var wire 1 ^# Cout $end
$var wire 1 _# S $end
$var wire 1 `# X $end
$var wire 1 a# Y $end
$var wire 1 b# xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[31] $end
$var parameter 6 c# i $end
$scope module SOMA $end
$var wire 1 d# Cin $end
$var wire 1 e# Cout $end
$var wire 1 f# S $end
$var wire 1 g# X $end
$var wire 1 h# Y $end
$var wire 1 i# xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[32] $end
$var parameter 7 j# i $end
$scope module SOMA $end
$var wire 1 k# Cin $end
$var wire 1 l# Cout $end
$var wire 1 m# S $end
$var wire 1 n# X $end
$var wire 1 o# Y $end
$var wire 1 p# xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[33] $end
$var parameter 7 q# i $end
$scope module SOMA $end
$var wire 1 r# Cin $end
$var wire 1 s# Cout $end
$var wire 1 t# S $end
$var wire 1 u# X $end
$var wire 1 v# Y $end
$var wire 1 w# xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[34] $end
$var parameter 7 x# i $end
$scope module SOMA $end
$var wire 1 y# Cin $end
$var wire 1 z# Cout $end
$var wire 1 {# S $end
$var wire 1 |# X $end
$var wire 1 }# Y $end
$var wire 1 ~# xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[35] $end
$var parameter 7 !$ i $end
$scope module SOMA $end
$var wire 1 "$ Cin $end
$var wire 1 #$ Cout $end
$var wire 1 $$ S $end
$var wire 1 %$ X $end
$var wire 1 &$ Y $end
$var wire 1 '$ xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[36] $end
$var parameter 7 ($ i $end
$scope module SOMA $end
$var wire 1 )$ Cin $end
$var wire 1 *$ Cout $end
$var wire 1 +$ S $end
$var wire 1 ,$ X $end
$var wire 1 -$ Y $end
$var wire 1 .$ xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[37] $end
$var parameter 7 /$ i $end
$scope module SOMA $end
$var wire 1 0$ Cin $end
$var wire 1 1$ Cout $end
$var wire 1 2$ S $end
$var wire 1 3$ X $end
$var wire 1 4$ Y $end
$var wire 1 5$ xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[38] $end
$var parameter 7 6$ i $end
$scope module SOMA $end
$var wire 1 7$ Cin $end
$var wire 1 8$ Cout $end
$var wire 1 9$ S $end
$var wire 1 :$ X $end
$var wire 1 ;$ Y $end
$var wire 1 <$ xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[39] $end
$var parameter 7 =$ i $end
$scope module SOMA $end
$var wire 1 >$ Cin $end
$var wire 1 ?$ Cout $end
$var wire 1 @$ S $end
$var wire 1 A$ X $end
$var wire 1 B$ Y $end
$var wire 1 C$ xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[40] $end
$var parameter 7 D$ i $end
$scope module SOMA $end
$var wire 1 E$ Cin $end
$var wire 1 F$ Cout $end
$var wire 1 G$ S $end
$var wire 1 H$ X $end
$var wire 1 I$ Y $end
$var wire 1 J$ xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[41] $end
$var parameter 7 K$ i $end
$scope module SOMA $end
$var wire 1 L$ Cin $end
$var wire 1 M$ Cout $end
$var wire 1 N$ S $end
$var wire 1 O$ X $end
$var wire 1 P$ Y $end
$var wire 1 Q$ xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[42] $end
$var parameter 7 R$ i $end
$scope module SOMA $end
$var wire 1 S$ Cin $end
$var wire 1 T$ Cout $end
$var wire 1 U$ S $end
$var wire 1 V$ X $end
$var wire 1 W$ Y $end
$var wire 1 X$ xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[43] $end
$var parameter 7 Y$ i $end
$scope module SOMA $end
$var wire 1 Z$ Cin $end
$var wire 1 [$ Cout $end
$var wire 1 \$ S $end
$var wire 1 ]$ X $end
$var wire 1 ^$ Y $end
$var wire 1 _$ xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[44] $end
$var parameter 7 `$ i $end
$scope module SOMA $end
$var wire 1 a$ Cin $end
$var wire 1 b$ Cout $end
$var wire 1 c$ S $end
$var wire 1 d$ X $end
$var wire 1 e$ Y $end
$var wire 1 f$ xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[45] $end
$var parameter 7 g$ i $end
$scope module SOMA $end
$var wire 1 h$ Cin $end
$var wire 1 i$ Cout $end
$var wire 1 j$ S $end
$var wire 1 k$ X $end
$var wire 1 l$ Y $end
$var wire 1 m$ xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[46] $end
$var parameter 7 n$ i $end
$scope module SOMA $end
$var wire 1 o$ Cin $end
$var wire 1 p$ Cout $end
$var wire 1 q$ S $end
$var wire 1 r$ X $end
$var wire 1 s$ Y $end
$var wire 1 t$ xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[47] $end
$var parameter 7 u$ i $end
$scope module SOMA $end
$var wire 1 v$ Cin $end
$var wire 1 w$ Cout $end
$var wire 1 x$ S $end
$var wire 1 y$ X $end
$var wire 1 z$ Y $end
$var wire 1 {$ xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[48] $end
$var parameter 7 |$ i $end
$scope module SOMA $end
$var wire 1 }$ Cin $end
$var wire 1 ~$ Cout $end
$var wire 1 !% S $end
$var wire 1 "% X $end
$var wire 1 #% Y $end
$var wire 1 $% xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[49] $end
$var parameter 7 %% i $end
$scope module SOMA $end
$var wire 1 &% Cin $end
$var wire 1 '% Cout $end
$var wire 1 (% S $end
$var wire 1 )% X $end
$var wire 1 *% Y $end
$var wire 1 +% xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[50] $end
$var parameter 7 ,% i $end
$scope module SOMA $end
$var wire 1 -% Cin $end
$var wire 1 .% Cout $end
$var wire 1 /% S $end
$var wire 1 0% X $end
$var wire 1 1% Y $end
$var wire 1 2% xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[51] $end
$var parameter 7 3% i $end
$scope module SOMA $end
$var wire 1 4% Cin $end
$var wire 1 5% Cout $end
$var wire 1 6% S $end
$var wire 1 7% X $end
$var wire 1 8% Y $end
$var wire 1 9% xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[52] $end
$var parameter 7 :% i $end
$scope module SOMA $end
$var wire 1 ;% Cin $end
$var wire 1 <% Cout $end
$var wire 1 =% S $end
$var wire 1 >% X $end
$var wire 1 ?% Y $end
$var wire 1 @% xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[53] $end
$var parameter 7 A% i $end
$scope module SOMA $end
$var wire 1 B% Cin $end
$var wire 1 C% Cout $end
$var wire 1 D% S $end
$var wire 1 E% X $end
$var wire 1 F% Y $end
$var wire 1 G% xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[54] $end
$var parameter 7 H% i $end
$scope module SOMA $end
$var wire 1 I% Cin $end
$var wire 1 J% Cout $end
$var wire 1 K% S $end
$var wire 1 L% X $end
$var wire 1 M% Y $end
$var wire 1 N% xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[55] $end
$var parameter 7 O% i $end
$scope module SOMA $end
$var wire 1 P% Cin $end
$var wire 1 Q% Cout $end
$var wire 1 R% S $end
$var wire 1 S% X $end
$var wire 1 T% Y $end
$var wire 1 U% xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[56] $end
$var parameter 7 V% i $end
$scope module SOMA $end
$var wire 1 W% Cin $end
$var wire 1 X% Cout $end
$var wire 1 Y% S $end
$var wire 1 Z% X $end
$var wire 1 [% Y $end
$var wire 1 \% xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[57] $end
$var parameter 7 ]% i $end
$scope module SOMA $end
$var wire 1 ^% Cin $end
$var wire 1 _% Cout $end
$var wire 1 `% S $end
$var wire 1 a% X $end
$var wire 1 b% Y $end
$var wire 1 c% xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[58] $end
$var parameter 7 d% i $end
$scope module SOMA $end
$var wire 1 e% Cin $end
$var wire 1 f% Cout $end
$var wire 1 g% S $end
$var wire 1 h% X $end
$var wire 1 i% Y $end
$var wire 1 j% xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[59] $end
$var parameter 7 k% i $end
$scope module SOMA $end
$var wire 1 l% Cin $end
$var wire 1 m% Cout $end
$var wire 1 n% S $end
$var wire 1 o% X $end
$var wire 1 p% Y $end
$var wire 1 q% xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[60] $end
$var parameter 7 r% i $end
$scope module SOMA $end
$var wire 1 s% Cin $end
$var wire 1 t% Cout $end
$var wire 1 u% S $end
$var wire 1 v% X $end
$var wire 1 w% Y $end
$var wire 1 x% xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[61] $end
$var parameter 7 y% i $end
$scope module SOMA $end
$var wire 1 z% Cin $end
$var wire 1 {% Cout $end
$var wire 1 |% S $end
$var wire 1 }% X $end
$var wire 1 ~% Y $end
$var wire 1 !& xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[62] $end
$var parameter 7 "& i $end
$scope module SOMA $end
$var wire 1 #& Cin $end
$var wire 1 $& Cout $end
$var wire 1 %& S $end
$var wire 1 && X $end
$var wire 1 '& Y $end
$var wire 1 (& xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[63] $end
$var parameter 7 )& i $end
$scope module SOMA $end
$var wire 1 *& Cin $end
$var wire 1 +& Cout $end
$var wire 1 ,& S $end
$var wire 1 -& X $end
$var wire 1 .& Y $end
$var wire 1 /& xor1 $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope module mem $end
$var wire 5 0& ADDR [4:0] $end
$var wire 1 ! CLK $end
$var wire 64 1& D_out [63:0] $end
$var wire 1 $ WE $end
$var wire 64 2& D_in [63:0] $end
$var parameter 32 3& N $end
$var parameter 32 4& SIZE $end
$upscope $end
$scope module regfile $end
$var wire 1 ! CLK $end
$var wire 64 5& Da [63:0] $end
$var wire 64 6& Db [63:0] $end
$var wire 64 7& Din [63:0] $end
$var wire 5 8& Ra [4:0] $end
$var wire 5 9& Rb [4:0] $end
$var wire 5 :& Rw [4:0] $end
$var wire 1 % WE $end
$var wire 32 ;& loaders [31:0] $end
$var parameter 32 <& SIZE $end
$scope begin genblk1[1] $end
$var parameter 2 =& i $end
$scope module xN $end
$var wire 1 ! CLK $end
$var wire 64 >& IN [63:0] $end
$var wire 1 ?& LOAD $end
$var parameter 32 @& SIZE $end
$var reg 64 A& OUT [63:0] $end
$upscope $end
$upscope $end
$scope begin genblk1[2] $end
$var parameter 3 B& i $end
$scope module xN $end
$var wire 1 ! CLK $end
$var wire 64 C& IN [63:0] $end
$var wire 1 D& LOAD $end
$var parameter 32 E& SIZE $end
$var reg 64 F& OUT [63:0] $end
$upscope $end
$upscope $end
$scope begin genblk1[3] $end
$var parameter 3 G& i $end
$scope module xN $end
$var wire 1 ! CLK $end
$var wire 64 H& IN [63:0] $end
$var wire 1 I& LOAD $end
$var parameter 32 J& SIZE $end
$var reg 64 K& OUT [63:0] $end
$upscope $end
$upscope $end
$scope begin genblk1[4] $end
$var parameter 4 L& i $end
$scope module xN $end
$var wire 1 ! CLK $end
$var wire 64 M& IN [63:0] $end
$var wire 1 N& LOAD $end
$var parameter 32 O& SIZE $end
$var reg 64 P& OUT [63:0] $end
$upscope $end
$upscope $end
$scope begin genblk1[5] $end
$var parameter 4 Q& i $end
$scope module xN $end
$var wire 1 ! CLK $end
$var wire 64 R& IN [63:0] $end
$var wire 1 S& LOAD $end
$var parameter 32 T& SIZE $end
$var reg 64 U& OUT [63:0] $end
$upscope $end
$upscope $end
$scope begin genblk1[6] $end
$var parameter 4 V& i $end
$scope module xN $end
$var wire 1 ! CLK $end
$var wire 64 W& IN [63:0] $end
$var wire 1 X& LOAD $end
$var parameter 32 Y& SIZE $end
$var reg 64 Z& OUT [63:0] $end
$upscope $end
$upscope $end
$scope begin genblk1[7] $end
$var parameter 4 [& i $end
$scope module xN $end
$var wire 1 ! CLK $end
$var wire 64 \& IN [63:0] $end
$var wire 1 ]& LOAD $end
$var parameter 32 ^& SIZE $end
$var reg 64 _& OUT [63:0] $end
$upscope $end
$upscope $end
$scope begin genblk1[8] $end
$var parameter 5 `& i $end
$scope module xN $end
$var wire 1 ! CLK $end
$var wire 64 a& IN [63:0] $end
$var wire 1 b& LOAD $end
$var parameter 32 c& SIZE $end
$var reg 64 d& OUT [63:0] $end
$upscope $end
$upscope $end
$scope begin genblk1[9] $end
$var parameter 5 e& i $end
$scope module xN $end
$var wire 1 ! CLK $end
$var wire 64 f& IN [63:0] $end
$var wire 1 g& LOAD $end
$var parameter 32 h& SIZE $end
$var reg 64 i& OUT [63:0] $end
$upscope $end
$upscope $end
$scope begin genblk1[10] $end
$var parameter 5 j& i $end
$scope module xN $end
$var wire 1 ! CLK $end
$var wire 64 k& IN [63:0] $end
$var wire 1 l& LOAD $end
$var parameter 32 m& SIZE $end
$var reg 64 n& OUT [63:0] $end
$upscope $end
$upscope $end
$scope begin genblk1[11] $end
$var parameter 5 o& i $end
$scope module xN $end
$var wire 1 ! CLK $end
$var wire 64 p& IN [63:0] $end
$var wire 1 q& LOAD $end
$var parameter 32 r& SIZE $end
$var reg 64 s& OUT [63:0] $end
$upscope $end
$upscope $end
$scope begin genblk1[12] $end
$var parameter 5 t& i $end
$scope module xN $end
$var wire 1 ! CLK $end
$var wire 64 u& IN [63:0] $end
$var wire 1 v& LOAD $end
$var parameter 32 w& SIZE $end
$var reg 64 x& OUT [63:0] $end
$upscope $end
$upscope $end
$scope begin genblk1[13] $end
$var parameter 5 y& i $end
$scope module xN $end
$var wire 1 ! CLK $end
$var wire 64 z& IN [63:0] $end
$var wire 1 {& LOAD $end
$var parameter 32 |& SIZE $end
$var reg 64 }& OUT [63:0] $end
$upscope $end
$upscope $end
$scope begin genblk1[14] $end
$var parameter 5 ~& i $end
$scope module xN $end
$var wire 1 ! CLK $end
$var wire 64 !' IN [63:0] $end
$var wire 1 "' LOAD $end
$var parameter 32 #' SIZE $end
$var reg 64 $' OUT [63:0] $end
$upscope $end
$upscope $end
$scope begin genblk1[15] $end
$var parameter 5 %' i $end
$scope module xN $end
$var wire 1 ! CLK $end
$var wire 64 &' IN [63:0] $end
$var wire 1 '' LOAD $end
$var parameter 32 (' SIZE $end
$var reg 64 )' OUT [63:0] $end
$upscope $end
$upscope $end
$scope begin genblk1[16] $end
$var parameter 6 *' i $end
$scope module xN $end
$var wire 1 ! CLK $end
$var wire 64 +' IN [63:0] $end
$var wire 1 ,' LOAD $end
$var parameter 32 -' SIZE $end
$var reg 64 .' OUT [63:0] $end
$upscope $end
$upscope $end
$scope begin genblk1[17] $end
$var parameter 6 /' i $end
$scope module xN $end
$var wire 1 ! CLK $end
$var wire 64 0' IN [63:0] $end
$var wire 1 1' LOAD $end
$var parameter 32 2' SIZE $end
$var reg 64 3' OUT [63:0] $end
$upscope $end
$upscope $end
$scope begin genblk1[18] $end
$var parameter 6 4' i $end
$scope module xN $end
$var wire 1 ! CLK $end
$var wire 64 5' IN [63:0] $end
$var wire 1 6' LOAD $end
$var parameter 32 7' SIZE $end
$var reg 64 8' OUT [63:0] $end
$upscope $end
$upscope $end
$scope begin genblk1[19] $end
$var parameter 6 9' i $end
$scope module xN $end
$var wire 1 ! CLK $end
$var wire 64 :' IN [63:0] $end
$var wire 1 ;' LOAD $end
$var parameter 32 <' SIZE $end
$var reg 64 =' OUT [63:0] $end
$upscope $end
$upscope $end
$scope begin genblk1[20] $end
$var parameter 6 >' i $end
$scope module xN $end
$var wire 1 ! CLK $end
$var wire 64 ?' IN [63:0] $end
$var wire 1 @' LOAD $end
$var parameter 32 A' SIZE $end
$var reg 64 B' OUT [63:0] $end
$upscope $end
$upscope $end
$scope begin genblk1[21] $end
$var parameter 6 C' i $end
$scope module xN $end
$var wire 1 ! CLK $end
$var wire 64 D' IN [63:0] $end
$var wire 1 E' LOAD $end
$var parameter 32 F' SIZE $end
$var reg 64 G' OUT [63:0] $end
$upscope $end
$upscope $end
$scope begin genblk1[22] $end
$var parameter 6 H' i $end
$scope module xN $end
$var wire 1 ! CLK $end
$var wire 64 I' IN [63:0] $end
$var wire 1 J' LOAD $end
$var parameter 32 K' SIZE $end
$var reg 64 L' OUT [63:0] $end
$upscope $end
$upscope $end
$scope begin genblk1[23] $end
$var parameter 6 M' i $end
$scope module xN $end
$var wire 1 ! CLK $end
$var wire 64 N' IN [63:0] $end
$var wire 1 O' LOAD $end
$var parameter 32 P' SIZE $end
$var reg 64 Q' OUT [63:0] $end
$upscope $end
$upscope $end
$scope begin genblk1[24] $end
$var parameter 6 R' i $end
$scope module xN $end
$var wire 1 ! CLK $end
$var wire 64 S' IN [63:0] $end
$var wire 1 T' LOAD $end
$var parameter 32 U' SIZE $end
$var reg 64 V' OUT [63:0] $end
$upscope $end
$upscope $end
$scope begin genblk1[25] $end
$var parameter 6 W' i $end
$scope module xN $end
$var wire 1 ! CLK $end
$var wire 64 X' IN [63:0] $end
$var wire 1 Y' LOAD $end
$var parameter 32 Z' SIZE $end
$var reg 64 [' OUT [63:0] $end
$upscope $end
$upscope $end
$scope begin genblk1[26] $end
$var parameter 6 \' i $end
$scope module xN $end
$var wire 1 ! CLK $end
$var wire 64 ]' IN [63:0] $end
$var wire 1 ^' LOAD $end
$var parameter 32 _' SIZE $end
$var reg 64 `' OUT [63:0] $end
$upscope $end
$upscope $end
$scope begin genblk1[27] $end
$var parameter 6 a' i $end
$scope module xN $end
$var wire 1 ! CLK $end
$var wire 64 b' IN [63:0] $end
$var wire 1 c' LOAD $end
$var parameter 32 d' SIZE $end
$var reg 64 e' OUT [63:0] $end
$upscope $end
$upscope $end
$scope begin genblk1[28] $end
$var parameter 6 f' i $end
$scope module xN $end
$var wire 1 ! CLK $end
$var wire 64 g' IN [63:0] $end
$var wire 1 h' LOAD $end
$var parameter 32 i' SIZE $end
$var reg 64 j' OUT [63:0] $end
$upscope $end
$upscope $end
$scope begin genblk1[29] $end
$var parameter 6 k' i $end
$scope module xN $end
$var wire 1 ! CLK $end
$var wire 64 l' IN [63:0] $end
$var wire 1 m' LOAD $end
$var parameter 32 n' SIZE $end
$var reg 64 o' OUT [63:0] $end
$upscope $end
$upscope $end
$scope begin genblk1[30] $end
$var parameter 6 p' i $end
$scope module xN $end
$var wire 1 ! CLK $end
$var wire 64 q' IN [63:0] $end
$var wire 1 r' LOAD $end
$var parameter 32 s' SIZE $end
$var reg 64 t' OUT [63:0] $end
$upscope $end
$upscope $end
$scope begin genblk1[31] $end
$var parameter 6 u' i $end
$scope module xN $end
$var wire 1 ! CLK $end
$var wire 64 v' IN [63:0] $end
$var wire 1 w' LOAD $end
$var parameter 32 x' SIZE $end
$var reg 64 y' OUT [63:0] $end
$upscope $end
$upscope $end
$scope module LOAD_DECODER $end
$var wire 1 % EN $end
$var wire 5 z' IN [4:0] $end
$var wire 32 {' OUT [31:0] $end
$var wire 4 |' EN1 [3:0] $end
$scope module DEC2_4 $end
$var wire 1 % EN $end
$var wire 2 }' IN [1:0] $end
$var wire 4 ~' OUT [3:0] $end
$upscope $end
$scope module DEC3_8__1 $end
$var wire 1 !( EN $end
$var wire 3 "( IN [2:0] $end
$var wire 8 #( OUT [7:0] $end
$upscope $end
$scope module DEC3_8__2 $end
$var wire 1 $( EN $end
$var wire 3 %( IN [2:0] $end
$var wire 8 &( OUT [7:0] $end
$upscope $end
$scope module DEC3_8__3 $end
$var wire 1 '( EN $end
$var wire 3 (( IN [2:0] $end
$var wire 8 )( OUT [7:0] $end
$upscope $end
$scope module DEC3_8__4 $end
$var wire 1 *( EN $end
$var wire 3 +( IN [2:0] $end
$var wire 8 ,( OUT [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope module IM $end
$var wire 32 -( OUTPUT [31:0] $end
$var wire 64 .( ADDR [63:0] $end
$upscope $end
$scope module IR $end
$var wire 1 ! CLK $end
$var wire 32 /( IN [31:0] $end
$var wire 1 0( LOAD $end
$var parameter 32 1( SIZE $end
$var reg 32 2( OUT [31:0] $end
$upscope $end
$scope module PC $end
$var wire 1 ! CLK $end
$var wire 1 ( LOAD $end
$var wire 1 & RST $end
$var wire 12 3( immediate [11:0] $end
$var wire 64 4( pc_next [63:0] $end
$var wire 1 5( pc_next_sel $end
$var wire 64 6( next [63:0] $end
$var wire 64 7( addr [63:0] $end
$scope module PC $end
$var wire 1 ! CLK $end
$var wire 1 ( LOAD $end
$var wire 1 & RST $end
$var wire 64 8( IN [63:0] $end
$var parameter 32 9( SIZE $end
$var reg 64 :( OUT [63:0] $end
$upscope $end
$scope module adder $end
$var wire 1 ;( Cin $end
$var wire 1 <( Cout $end
$var wire 64 =( X [63:0] $end
$var wire 64 >( Y [63:0] $end
$var wire 1 ?( cout $end
$var wire 65 @( cins [64:0] $end
$var wire 64 A( S [63:0] $end
$var parameter 32 B( SIZE $end
$scope begin genblk1[0] $end
$var parameter 2 C( i $end
$scope module SOMA $end
$var wire 1 D( Cin $end
$var wire 1 E( Cout $end
$var wire 1 F( S $end
$var wire 1 G( X $end
$var wire 1 H( Y $end
$var wire 1 I( xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[1] $end
$var parameter 2 J( i $end
$scope module SOMA $end
$var wire 1 K( Cin $end
$var wire 1 L( Cout $end
$var wire 1 M( S $end
$var wire 1 N( X $end
$var wire 1 O( Y $end
$var wire 1 P( xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[2] $end
$var parameter 3 Q( i $end
$scope module SOMA $end
$var wire 1 R( Cin $end
$var wire 1 S( Cout $end
$var wire 1 T( S $end
$var wire 1 U( X $end
$var wire 1 V( Y $end
$var wire 1 W( xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[3] $end
$var parameter 3 X( i $end
$scope module SOMA $end
$var wire 1 Y( Cin $end
$var wire 1 Z( Cout $end
$var wire 1 [( S $end
$var wire 1 \( X $end
$var wire 1 ]( Y $end
$var wire 1 ^( xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[4] $end
$var parameter 4 _( i $end
$scope module SOMA $end
$var wire 1 `( Cin $end
$var wire 1 a( Cout $end
$var wire 1 b( S $end
$var wire 1 c( X $end
$var wire 1 d( Y $end
$var wire 1 e( xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[5] $end
$var parameter 4 f( i $end
$scope module SOMA $end
$var wire 1 g( Cin $end
$var wire 1 h( Cout $end
$var wire 1 i( S $end
$var wire 1 j( X $end
$var wire 1 k( Y $end
$var wire 1 l( xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[6] $end
$var parameter 4 m( i $end
$scope module SOMA $end
$var wire 1 n( Cin $end
$var wire 1 o( Cout $end
$var wire 1 p( S $end
$var wire 1 q( X $end
$var wire 1 r( Y $end
$var wire 1 s( xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[7] $end
$var parameter 4 t( i $end
$scope module SOMA $end
$var wire 1 u( Cin $end
$var wire 1 v( Cout $end
$var wire 1 w( S $end
$var wire 1 x( X $end
$var wire 1 y( Y $end
$var wire 1 z( xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[8] $end
$var parameter 5 {( i $end
$scope module SOMA $end
$var wire 1 |( Cin $end
$var wire 1 }( Cout $end
$var wire 1 ~( S $end
$var wire 1 !) X $end
$var wire 1 ") Y $end
$var wire 1 #) xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[9] $end
$var parameter 5 $) i $end
$scope module SOMA $end
$var wire 1 %) Cin $end
$var wire 1 &) Cout $end
$var wire 1 ') S $end
$var wire 1 () X $end
$var wire 1 )) Y $end
$var wire 1 *) xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[10] $end
$var parameter 5 +) i $end
$scope module SOMA $end
$var wire 1 ,) Cin $end
$var wire 1 -) Cout $end
$var wire 1 .) S $end
$var wire 1 /) X $end
$var wire 1 0) Y $end
$var wire 1 1) xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[11] $end
$var parameter 5 2) i $end
$scope module SOMA $end
$var wire 1 3) Cin $end
$var wire 1 4) Cout $end
$var wire 1 5) S $end
$var wire 1 6) X $end
$var wire 1 7) Y $end
$var wire 1 8) xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[12] $end
$var parameter 5 9) i $end
$scope module SOMA $end
$var wire 1 :) Cin $end
$var wire 1 ;) Cout $end
$var wire 1 <) S $end
$var wire 1 =) X $end
$var wire 1 >) Y $end
$var wire 1 ?) xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[13] $end
$var parameter 5 @) i $end
$scope module SOMA $end
$var wire 1 A) Cin $end
$var wire 1 B) Cout $end
$var wire 1 C) S $end
$var wire 1 D) X $end
$var wire 1 E) Y $end
$var wire 1 F) xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[14] $end
$var parameter 5 G) i $end
$scope module SOMA $end
$var wire 1 H) Cin $end
$var wire 1 I) Cout $end
$var wire 1 J) S $end
$var wire 1 K) X $end
$var wire 1 L) Y $end
$var wire 1 M) xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[15] $end
$var parameter 5 N) i $end
$scope module SOMA $end
$var wire 1 O) Cin $end
$var wire 1 P) Cout $end
$var wire 1 Q) S $end
$var wire 1 R) X $end
$var wire 1 S) Y $end
$var wire 1 T) xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[16] $end
$var parameter 6 U) i $end
$scope module SOMA $end
$var wire 1 V) Cin $end
$var wire 1 W) Cout $end
$var wire 1 X) S $end
$var wire 1 Y) X $end
$var wire 1 Z) Y $end
$var wire 1 [) xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[17] $end
$var parameter 6 \) i $end
$scope module SOMA $end
$var wire 1 ]) Cin $end
$var wire 1 ^) Cout $end
$var wire 1 _) S $end
$var wire 1 `) X $end
$var wire 1 a) Y $end
$var wire 1 b) xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[18] $end
$var parameter 6 c) i $end
$scope module SOMA $end
$var wire 1 d) Cin $end
$var wire 1 e) Cout $end
$var wire 1 f) S $end
$var wire 1 g) X $end
$var wire 1 h) Y $end
$var wire 1 i) xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[19] $end
$var parameter 6 j) i $end
$scope module SOMA $end
$var wire 1 k) Cin $end
$var wire 1 l) Cout $end
$var wire 1 m) S $end
$var wire 1 n) X $end
$var wire 1 o) Y $end
$var wire 1 p) xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[20] $end
$var parameter 6 q) i $end
$scope module SOMA $end
$var wire 1 r) Cin $end
$var wire 1 s) Cout $end
$var wire 1 t) S $end
$var wire 1 u) X $end
$var wire 1 v) Y $end
$var wire 1 w) xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[21] $end
$var parameter 6 x) i $end
$scope module SOMA $end
$var wire 1 y) Cin $end
$var wire 1 z) Cout $end
$var wire 1 {) S $end
$var wire 1 |) X $end
$var wire 1 }) Y $end
$var wire 1 ~) xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[22] $end
$var parameter 6 !* i $end
$scope module SOMA $end
$var wire 1 "* Cin $end
$var wire 1 #* Cout $end
$var wire 1 $* S $end
$var wire 1 %* X $end
$var wire 1 &* Y $end
$var wire 1 '* xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[23] $end
$var parameter 6 (* i $end
$scope module SOMA $end
$var wire 1 )* Cin $end
$var wire 1 ** Cout $end
$var wire 1 +* S $end
$var wire 1 ,* X $end
$var wire 1 -* Y $end
$var wire 1 .* xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[24] $end
$var parameter 6 /* i $end
$scope module SOMA $end
$var wire 1 0* Cin $end
$var wire 1 1* Cout $end
$var wire 1 2* S $end
$var wire 1 3* X $end
$var wire 1 4* Y $end
$var wire 1 5* xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[25] $end
$var parameter 6 6* i $end
$scope module SOMA $end
$var wire 1 7* Cin $end
$var wire 1 8* Cout $end
$var wire 1 9* S $end
$var wire 1 :* X $end
$var wire 1 ;* Y $end
$var wire 1 <* xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[26] $end
$var parameter 6 =* i $end
$scope module SOMA $end
$var wire 1 >* Cin $end
$var wire 1 ?* Cout $end
$var wire 1 @* S $end
$var wire 1 A* X $end
$var wire 1 B* Y $end
$var wire 1 C* xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[27] $end
$var parameter 6 D* i $end
$scope module SOMA $end
$var wire 1 E* Cin $end
$var wire 1 F* Cout $end
$var wire 1 G* S $end
$var wire 1 H* X $end
$var wire 1 I* Y $end
$var wire 1 J* xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[28] $end
$var parameter 6 K* i $end
$scope module SOMA $end
$var wire 1 L* Cin $end
$var wire 1 M* Cout $end
$var wire 1 N* S $end
$var wire 1 O* X $end
$var wire 1 P* Y $end
$var wire 1 Q* xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[29] $end
$var parameter 6 R* i $end
$scope module SOMA $end
$var wire 1 S* Cin $end
$var wire 1 T* Cout $end
$var wire 1 U* S $end
$var wire 1 V* X $end
$var wire 1 W* Y $end
$var wire 1 X* xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[30] $end
$var parameter 6 Y* i $end
$scope module SOMA $end
$var wire 1 Z* Cin $end
$var wire 1 [* Cout $end
$var wire 1 \* S $end
$var wire 1 ]* X $end
$var wire 1 ^* Y $end
$var wire 1 _* xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[31] $end
$var parameter 6 `* i $end
$scope module SOMA $end
$var wire 1 a* Cin $end
$var wire 1 b* Cout $end
$var wire 1 c* S $end
$var wire 1 d* X $end
$var wire 1 e* Y $end
$var wire 1 f* xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[32] $end
$var parameter 7 g* i $end
$scope module SOMA $end
$var wire 1 h* Cin $end
$var wire 1 i* Cout $end
$var wire 1 j* S $end
$var wire 1 k* X $end
$var wire 1 l* Y $end
$var wire 1 m* xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[33] $end
$var parameter 7 n* i $end
$scope module SOMA $end
$var wire 1 o* Cin $end
$var wire 1 p* Cout $end
$var wire 1 q* S $end
$var wire 1 r* X $end
$var wire 1 s* Y $end
$var wire 1 t* xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[34] $end
$var parameter 7 u* i $end
$scope module SOMA $end
$var wire 1 v* Cin $end
$var wire 1 w* Cout $end
$var wire 1 x* S $end
$var wire 1 y* X $end
$var wire 1 z* Y $end
$var wire 1 {* xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[35] $end
$var parameter 7 |* i $end
$scope module SOMA $end
$var wire 1 }* Cin $end
$var wire 1 ~* Cout $end
$var wire 1 !+ S $end
$var wire 1 "+ X $end
$var wire 1 #+ Y $end
$var wire 1 $+ xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[36] $end
$var parameter 7 %+ i $end
$scope module SOMA $end
$var wire 1 &+ Cin $end
$var wire 1 '+ Cout $end
$var wire 1 (+ S $end
$var wire 1 )+ X $end
$var wire 1 *+ Y $end
$var wire 1 ++ xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[37] $end
$var parameter 7 ,+ i $end
$scope module SOMA $end
$var wire 1 -+ Cin $end
$var wire 1 .+ Cout $end
$var wire 1 /+ S $end
$var wire 1 0+ X $end
$var wire 1 1+ Y $end
$var wire 1 2+ xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[38] $end
$var parameter 7 3+ i $end
$scope module SOMA $end
$var wire 1 4+ Cin $end
$var wire 1 5+ Cout $end
$var wire 1 6+ S $end
$var wire 1 7+ X $end
$var wire 1 8+ Y $end
$var wire 1 9+ xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[39] $end
$var parameter 7 :+ i $end
$scope module SOMA $end
$var wire 1 ;+ Cin $end
$var wire 1 <+ Cout $end
$var wire 1 =+ S $end
$var wire 1 >+ X $end
$var wire 1 ?+ Y $end
$var wire 1 @+ xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[40] $end
$var parameter 7 A+ i $end
$scope module SOMA $end
$var wire 1 B+ Cin $end
$var wire 1 C+ Cout $end
$var wire 1 D+ S $end
$var wire 1 E+ X $end
$var wire 1 F+ Y $end
$var wire 1 G+ xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[41] $end
$var parameter 7 H+ i $end
$scope module SOMA $end
$var wire 1 I+ Cin $end
$var wire 1 J+ Cout $end
$var wire 1 K+ S $end
$var wire 1 L+ X $end
$var wire 1 M+ Y $end
$var wire 1 N+ xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[42] $end
$var parameter 7 O+ i $end
$scope module SOMA $end
$var wire 1 P+ Cin $end
$var wire 1 Q+ Cout $end
$var wire 1 R+ S $end
$var wire 1 S+ X $end
$var wire 1 T+ Y $end
$var wire 1 U+ xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[43] $end
$var parameter 7 V+ i $end
$scope module SOMA $end
$var wire 1 W+ Cin $end
$var wire 1 X+ Cout $end
$var wire 1 Y+ S $end
$var wire 1 Z+ X $end
$var wire 1 [+ Y $end
$var wire 1 \+ xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[44] $end
$var parameter 7 ]+ i $end
$scope module SOMA $end
$var wire 1 ^+ Cin $end
$var wire 1 _+ Cout $end
$var wire 1 `+ S $end
$var wire 1 a+ X $end
$var wire 1 b+ Y $end
$var wire 1 c+ xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[45] $end
$var parameter 7 d+ i $end
$scope module SOMA $end
$var wire 1 e+ Cin $end
$var wire 1 f+ Cout $end
$var wire 1 g+ S $end
$var wire 1 h+ X $end
$var wire 1 i+ Y $end
$var wire 1 j+ xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[46] $end
$var parameter 7 k+ i $end
$scope module SOMA $end
$var wire 1 l+ Cin $end
$var wire 1 m+ Cout $end
$var wire 1 n+ S $end
$var wire 1 o+ X $end
$var wire 1 p+ Y $end
$var wire 1 q+ xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[47] $end
$var parameter 7 r+ i $end
$scope module SOMA $end
$var wire 1 s+ Cin $end
$var wire 1 t+ Cout $end
$var wire 1 u+ S $end
$var wire 1 v+ X $end
$var wire 1 w+ Y $end
$var wire 1 x+ xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[48] $end
$var parameter 7 y+ i $end
$scope module SOMA $end
$var wire 1 z+ Cin $end
$var wire 1 {+ Cout $end
$var wire 1 |+ S $end
$var wire 1 }+ X $end
$var wire 1 ~+ Y $end
$var wire 1 !, xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[49] $end
$var parameter 7 ", i $end
$scope module SOMA $end
$var wire 1 #, Cin $end
$var wire 1 $, Cout $end
$var wire 1 %, S $end
$var wire 1 &, X $end
$var wire 1 ', Y $end
$var wire 1 (, xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[50] $end
$var parameter 7 ), i $end
$scope module SOMA $end
$var wire 1 *, Cin $end
$var wire 1 +, Cout $end
$var wire 1 ,, S $end
$var wire 1 -, X $end
$var wire 1 ., Y $end
$var wire 1 /, xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[51] $end
$var parameter 7 0, i $end
$scope module SOMA $end
$var wire 1 1, Cin $end
$var wire 1 2, Cout $end
$var wire 1 3, S $end
$var wire 1 4, X $end
$var wire 1 5, Y $end
$var wire 1 6, xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[52] $end
$var parameter 7 7, i $end
$scope module SOMA $end
$var wire 1 8, Cin $end
$var wire 1 9, Cout $end
$var wire 1 :, S $end
$var wire 1 ;, X $end
$var wire 1 <, Y $end
$var wire 1 =, xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[53] $end
$var parameter 7 >, i $end
$scope module SOMA $end
$var wire 1 ?, Cin $end
$var wire 1 @, Cout $end
$var wire 1 A, S $end
$var wire 1 B, X $end
$var wire 1 C, Y $end
$var wire 1 D, xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[54] $end
$var parameter 7 E, i $end
$scope module SOMA $end
$var wire 1 F, Cin $end
$var wire 1 G, Cout $end
$var wire 1 H, S $end
$var wire 1 I, X $end
$var wire 1 J, Y $end
$var wire 1 K, xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[55] $end
$var parameter 7 L, i $end
$scope module SOMA $end
$var wire 1 M, Cin $end
$var wire 1 N, Cout $end
$var wire 1 O, S $end
$var wire 1 P, X $end
$var wire 1 Q, Y $end
$var wire 1 R, xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[56] $end
$var parameter 7 S, i $end
$scope module SOMA $end
$var wire 1 T, Cin $end
$var wire 1 U, Cout $end
$var wire 1 V, S $end
$var wire 1 W, X $end
$var wire 1 X, Y $end
$var wire 1 Y, xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[57] $end
$var parameter 7 Z, i $end
$scope module SOMA $end
$var wire 1 [, Cin $end
$var wire 1 \, Cout $end
$var wire 1 ], S $end
$var wire 1 ^, X $end
$var wire 1 _, Y $end
$var wire 1 `, xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[58] $end
$var parameter 7 a, i $end
$scope module SOMA $end
$var wire 1 b, Cin $end
$var wire 1 c, Cout $end
$var wire 1 d, S $end
$var wire 1 e, X $end
$var wire 1 f, Y $end
$var wire 1 g, xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[59] $end
$var parameter 7 h, i $end
$scope module SOMA $end
$var wire 1 i, Cin $end
$var wire 1 j, Cout $end
$var wire 1 k, S $end
$var wire 1 l, X $end
$var wire 1 m, Y $end
$var wire 1 n, xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[60] $end
$var parameter 7 o, i $end
$scope module SOMA $end
$var wire 1 p, Cin $end
$var wire 1 q, Cout $end
$var wire 1 r, S $end
$var wire 1 s, X $end
$var wire 1 t, Y $end
$var wire 1 u, xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[61] $end
$var parameter 7 v, i $end
$scope module SOMA $end
$var wire 1 w, Cin $end
$var wire 1 x, Cout $end
$var wire 1 y, S $end
$var wire 1 z, X $end
$var wire 1 {, Y $end
$var wire 1 |, xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[62] $end
$var parameter 7 }, i $end
$scope module SOMA $end
$var wire 1 ~, Cin $end
$var wire 1 !- Cout $end
$var wire 1 "- S $end
$var wire 1 #- X $end
$var wire 1 $- Y $end
$var wire 1 %- xor1 $end
$upscope $end
$upscope $end
$scope begin genblk1[63] $end
$var parameter 7 &- i $end
$scope module SOMA $end
$var wire 1 '- Cin $end
$var wire 1 (- Cout $end
$var wire 1 )- S $end
$var wire 1 *- X $end
$var wire 1 +- Y $end
$var wire 1 ,- xor1 $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
b111111 &-
b111110 },
b111101 v,
b111100 o,
b111011 h,
b111010 a,
b111001 Z,
b111000 S,
b110111 L,
b110110 E,
b110101 >,
b110100 7,
b110011 0,
b110010 ),
b110001 ",
b110000 y+
b101111 r+
b101110 k+
b101101 d+
b101100 ]+
b101011 V+
b101010 O+
b101001 H+
b101000 A+
b100111 :+
b100110 3+
b100101 ,+
b100100 %+
b100011 |*
b100010 u*
b100001 n*
b100000 g*
b11111 `*
b11110 Y*
b11101 R*
b11100 K*
b11011 D*
b11010 =*
b11001 6*
b11000 /*
b10111 (*
b10110 !*
b10101 x)
b10100 q)
b10011 j)
b10010 c)
b10001 \)
b10000 U)
b1111 N)
b1110 G)
b1101 @)
b1100 9)
b1011 2)
b1010 +)
b1001 $)
b1000 {(
b111 t(
b110 m(
b101 f(
b100 _(
b11 X(
b10 Q(
b1 J(
b0 C(
b1000000 B(
b1000000 9(
b100000 1(
b1000000 x'
b11111 u'
b1000000 s'
b11110 p'
b1000000 n'
b11101 k'
b1000000 i'
b11100 f'
b1000000 d'
b11011 a'
b1000000 _'
b11010 \'
b1000000 Z'
b11001 W'
b1000000 U'
b11000 R'
b1000000 P'
b10111 M'
b1000000 K'
b10110 H'
b1000000 F'
b10101 C'
b1000000 A'
b10100 >'
b1000000 <'
b10011 9'
b1000000 7'
b10010 4'
b1000000 2'
b10001 /'
b1000000 -'
b10000 *'
b1000000 ('
b1111 %'
b1000000 #'
b1110 ~&
b1000000 |&
b1101 y&
b1000000 w&
b1100 t&
b1000000 r&
b1011 o&
b1000000 m&
b1010 j&
b1000000 h&
b1001 e&
b1000000 c&
b1000 `&
b1000000 ^&
b111 [&
b1000000 Y&
b110 V&
b1000000 T&
b101 Q&
b1000000 O&
b100 L&
b1000000 J&
b11 G&
b1000000 E&
b10 B&
b1000000 @&
b1 =&
b1000000 <&
b1000000 4&
b100000 3&
b111111 )&
b111110 "&
b111101 y%
b111100 r%
b111011 k%
b111010 d%
b111001 ]%
b111000 V%
b110111 O%
b110110 H%
b110101 A%
b110100 :%
b110011 3%
b110010 ,%
b110001 %%
b110000 |$
b101111 u$
b101110 n$
b101101 g$
b101100 `$
b101011 Y$
b101010 R$
b101001 K$
b101000 D$
b100111 =$
b100110 6$
b100101 /$
b100100 ($
b100011 !$
b100010 x#
b100001 q#
b100000 j#
b11111 c#
b11110 \#
b11101 U#
b11100 N#
b11011 G#
b11010 @#
b11001 9#
b11000 2#
b10111 +#
b10110 $#
b10101 {"
b10100 t"
b10011 m"
b10010 f"
b10001 _"
b10000 X"
b1111 Q"
b1110 J"
b1101 C"
b1100 <"
b1011 5"
b1010 ."
b1001 '"
b1000 ~
b111 w
b110 p
b101 i
b100 b
b11 [
b10 T
b1 M
b0 F
b1000000 E
b1000000 >
$end
#0
$dumpvars
0,-
0+-
0*-
0)-
0(-
0'-
0%-
0$-
0#-
0"-
0!-
0~,
0|,
0{,
0z,
0y,
0x,
0w,
0u,
0t,
0s,
0r,
0q,
0p,
0n,
0m,
0l,
0k,
0j,
0i,
0g,
0f,
0e,
0d,
0c,
0b,
0`,
0_,
0^,
0],
0\,
0[,
0Y,
0X,
0W,
0V,
0U,
0T,
0R,
0Q,
0P,
0O,
0N,
0M,
0K,
0J,
0I,
0H,
0G,
0F,
0D,
0C,
0B,
0A,
0@,
0?,
0=,
0<,
0;,
0:,
09,
08,
06,
05,
04,
03,
02,
01,
0/,
0.,
0-,
0,,
0+,
0*,
0(,
0',
0&,
0%,
0$,
0#,
0!,
0~+
0}+
0|+
0{+
0z+
0x+
0w+
0v+
0u+
0t+
0s+
0q+
0p+
0o+
0n+
0m+
0l+
0j+
0i+
0h+
0g+
0f+
0e+
0c+
0b+
0a+
0`+
0_+
0^+
0\+
0[+
0Z+
0Y+
0X+
0W+
0U+
0T+
0S+
0R+
0Q+
0P+
0N+
0M+
0L+
0K+
0J+
0I+
0G+
0F+
0E+
0D+
0C+
0B+
0@+
0?+
0>+
0=+
0<+
0;+
09+
08+
07+
06+
05+
04+
02+
01+
00+
0/+
0.+
0-+
0++
0*+
0)+
0(+
0'+
0&+
0$+
0#+
0"+
0!+
0~*
0}*
0{*
0z*
0y*
0x*
0w*
0v*
0t*
0s*
0r*
0q*
0p*
0o*
0m*
0l*
0k*
0j*
0i*
0h*
0f*
0e*
0d*
0c*
0b*
0a*
0_*
0^*
0]*
0\*
0[*
0Z*
0X*
0W*
0V*
0U*
0T*
0S*
0Q*
0P*
0O*
0N*
0M*
0L*
0J*
0I*
0H*
0G*
0F*
0E*
0C*
0B*
0A*
0@*
0?*
0>*
0<*
0;*
0:*
09*
08*
07*
05*
04*
03*
02*
01*
00*
0.*
0-*
0,*
0+*
0**
0)*
0'*
0&*
0%*
0$*
0#*
0"*
0~)
0})
0|)
0{)
0z)
0y)
0w)
0v)
0u)
0t)
0s)
0r)
0p)
0o)
0n)
0m)
0l)
0k)
0i)
0h)
0g)
0f)
0e)
0d)
0b)
0a)
0`)
0_)
0^)
0])
0[)
0Z)
0Y)
0X)
0W)
0V)
0T)
0S)
0R)
0Q)
0P)
0O)
0M)
0L)
0K)
0J)
0I)
0H)
0F)
0E)
0D)
0C)
0B)
0A)
0?)
0>)
0=)
0<)
0;)
0:)
08)
07)
06)
05)
04)
03)
01)
00)
0/)
0.)
0-)
0,)
0*)
0))
0()
0')
0&)
0%)
0#)
0")
0!)
0~(
0}(
0|(
0z(
0y(
0x(
0w(
0v(
0u(
0s(
0r(
0q(
0p(
0o(
0n(
0l(
0k(
0j(
0i(
0h(
0g(
0e(
0d(
0c(
0b(
0a(
0`(
0^(
0](
0\(
0[(
0Z(
0Y(
0W(
0V(
0U(
0T(
0S(
0R(
0P(
0O(
0N(
0M(
0L(
0K(
1I(
1H(
0G(
1F(
0E(
0D(
b1 A(
b0 @(
0?(
b1 >(
b0 =(
z<(
0;(
b0 :(
b1 8(
b0 7(
b1 6(
05(
b1 4(
bx 3(
bx 2(
10(
b1000000000010000010000011 /(
b0 .(
b1000000000010000010000011 -(
bx ,(
bx +(
x*(
bx )(
bx ((
x'(
bx &(
bx %(
x$(
bx #(
bx "(
x!(
bx ~'
bx }'
bx |'
bx {'
bx z'
bx y'
xw'
bx v'
bx t'
xr'
bx q'
bx o'
xm'
bx l'
bx j'
xh'
bx g'
bx e'
xc'
bx b'
bx `'
x^'
bx ]'
bx ['
xY'
bx X'
bx V'
xT'
bx S'
bx Q'
xO'
bx N'
bx L'
xJ'
bx I'
bx G'
xE'
bx D'
bx B'
x@'
bx ?'
bx ='
x;'
bx :'
bx 8'
x6'
bx 5'
bx 3'
x1'
bx 0'
bx .'
x,'
bx +'
bx )'
x''
bx &'
bx $'
x"'
bx !'
bx }&
x{&
bx z&
bx x&
xv&
bx u&
bx s&
xq&
bx p&
bx n&
xl&
bx k&
bx i&
xg&
bx f&
bx d&
xb&
bx a&
bx _&
x]&
bx \&
bx Z&
xX&
bx W&
bx U&
xS&
bx R&
bx P&
xN&
bx M&
bx K&
xI&
bx H&
bx F&
xD&
bx C&
bx A&
x?&
bx >&
bx ;&
bx :&
bx 9&
bx 8&
bx 7&
bx 6&
bx 5&
bx 2&
bx 1&
bx 0&
x/&
x.&
x-&
x,&
x+&
x*&
x(&
x'&
x&&
x%&
x$&
x#&
x!&
x~%
x}%
x|%
x{%
xz%
xx%
xw%
xv%
xu%
xt%
xs%
xq%
xp%
xo%
xn%
xm%
xl%
xj%
xi%
xh%
xg%
xf%
xe%
xc%
xb%
xa%
x`%
x_%
x^%
x\%
x[%
xZ%
xY%
xX%
xW%
xU%
xT%
xS%
xR%
xQ%
xP%
xN%
xM%
xL%
xK%
xJ%
xI%
xG%
xF%
xE%
xD%
xC%
xB%
x@%
x?%
x>%
x=%
x<%
x;%
x9%
x8%
x7%
x6%
x5%
x4%
x2%
x1%
x0%
x/%
x.%
x-%
x+%
x*%
x)%
x(%
x'%
x&%
x$%
x#%
x"%
x!%
x~$
x}$
x{$
xz$
xy$
xx$
xw$
xv$
xt$
xs$
xr$
xq$
xp$
xo$
xm$
xl$
xk$
xj$
xi$
xh$
xf$
xe$
xd$
xc$
xb$
xa$
x_$
x^$
x]$
x\$
x[$
xZ$
xX$
xW$
xV$
xU$
xT$
xS$
xQ$
xP$
xO$
xN$
xM$
xL$
xJ$
xI$
xH$
xG$
xF$
xE$
xC$
xB$
xA$
x@$
x?$
x>$
x<$
x;$
x:$
x9$
x8$
x7$
x5$
x4$
x3$
x2$
x1$
x0$
x.$
x-$
x,$
x+$
x*$
x)$
x'$
x&$
x%$
x$$
x#$
x"$
x~#
x}#
x|#
x{#
xz#
xy#
xw#
xv#
xu#
xt#
xs#
xr#
xp#
xo#
xn#
xm#
xl#
xk#
xi#
xh#
xg#
xf#
xe#
xd#
xb#
xa#
x`#
x_#
x^#
x]#
x[#
xZ#
xY#
xX#
xW#
xV#
xT#
xS#
xR#
xQ#
xP#
xO#
xM#
xL#
xK#
xJ#
xI#
xH#
xF#
xE#
xD#
xC#
xB#
xA#
x?#
x>#
x=#
x<#
x;#
x:#
x8#
x7#
x6#
x5#
x4#
x3#
x1#
x0#
x/#
x.#
x-#
x,#
x*#
x)#
x(#
x'#
x&#
x%#
x##
x"#
x!#
x~"
x}"
x|"
xz"
xy"
xx"
xw"
xv"
xu"
xs"
xr"
xq"
xp"
xo"
xn"
xl"
xk"
xj"
xi"
xh"
xg"
xe"
xd"
xc"
xb"
xa"
x`"
x^"
x]"
x\"
x["
xZ"
xY"
xW"
xV"
xU"
xT"
xS"
xR"
xP"
xO"
xN"
xM"
xL"
xK"
xI"
xH"
xG"
xF"
xE"
xD"
xB"
xA"
x@"
x?"
x>"
x="
x;"
x:"
x9"
x8"
x7"
x6"
x4"
x3"
x2"
x1"
x0"
x/"
x-"
x,"
x+"
x*"
x)"
x("
x&"
x%"
x$"
x#"
x""
x!"
x}
x|
x{
xz
xy
xx
xv
xu
xt
xs
xr
xq
xo
xn
xm
xl
xk
xj
xh
xg
xf
xe
xd
xc
xa
x`
x_
x^
x]
x\
xZ
xY
xX
xW
xV
xU
xS
xR
xQ
xP
xO
xN
xL
xK
xJ
xI
xH
xG
bx D
bx C
bx B
xA
bx @
z?
bx =
bx <
bx ;
bx :
bx 9
bx 8
bx 7
bx 6
bx 5
bx 4
bx 3
bx 2
bx 1
bx 0
b0 /
bx .
bx -
b1000000000010000010000011 ,
bx +
bx *
bx )
1(
x'
1&
x%
x$
x#
x"
0!
$end
#5
01'
0g&
0Y'
0m'
0E'
0{&
0S&
0$(
0T'
0^'
0c'
0h'
0r'
0w'
0,'
06'
0;'
0@'
0J'
0O'
0b&
0l&
0q&
0v&
0"'
0''
0D&
0I&
0N&
0X&
0]&
0'(
0!(
b0 #(
b0 &(
b0 )(
b0x0 ;&
b0x0 {'
b0x0 ,(
b0x |'
b0x ~'
b10000 0
b10000 1
b10000 3(
b0 }'
b1 "(
b1 %(
b1 ((
b1 +(
0-&
0&&
0}%
0v%
0o%
0h%
0a%
0Z%
0S%
0L%
0E%
0>%
07%
00%
0)%
0"%
0y$
0r$
0k$
0d$
0]$
0V$
0O$
0H$
0A$
0:$
03$
0,$
0%$
0|#
0u#
0n#
0g#
0`#
0Y#
0R#
0K#
0D#
0=#
06#
0/#
0(#
0!#
0x"
0q"
0j"
0c"
0\"
0U"
0N"
0G"
0@"
09"
02"
0+"
0$"
0{
0t
0m
0f
0_
0X
0Q
0J
b10000 .
b1 +
b1 2
b1 :&
b1 z'
b0 9
b0 <
b0 C
b0 5&
b0 *
b0 3
b0 8&
b10000 )
b10000 4
b10000 9&
b1000000000010000010000011 -
b1000000000010000010000011 2(
1!
#10
1M(
1K(
b10 6(
b10 8(
b10 A(
0F(
b10 @(
1E(
0I(
1G(
b1010100000010000100000011 ,
b1010100000010000100000011 -(
b1010100000010000100000011 /(
b1 /
b1 .(
b1 7(
b1 :(
b1 =(
0l
b1011011011 7
b1011011011 7&
b1011011011 >&
b1011011011 C&
b1011011011 H&
b1011011011 M&
b1011011011 R&
b1011011011 W&
b1011011011 \&
b1011011011 a&
b1011011011 f&
b1011011011 k&
b1011011011 p&
b1011011011 u&
b1011011011 z&
b1011011011 !'
b1011011011 &'
b1011011011 +'
b1011011011 0'
b1011011011 5'
b1011011011 :'
b1011011011 ?'
b1011011011 D'
b1011011011 I'
b1011011011 N'
b1011011011 S'
b1011011011 X'
b1011011011 ]'
b1011011011 b'
b1011011011 g'
b1011011011 l'
b1011011011 q'
b1011011011 v'
0j
b1011011011 :
b1011011011 1&
0d
1?&
0W
0^
1e
0s
0z
0#"
0*"
01"
08"
0?"
0F"
0M"
0T"
0["
0b"
0i"
0p"
0w"
0~"
0'#
0.#
05#
0<#
0C#
0J#
0Q#
0X#
0_#
0f#
0m#
0t#
0{#
0$$
0+$
02$
09$
0@$
0G$
0N$
0U$
0\$
0c$
0j$
0q$
0x$
0!%
0(%
0/%
06%
0=%
0D%
0K%
0R%
0Y%
0`%
0g%
0n%
0u%
0|%
0%&
0,&
b10 ;&
b10 {'
b10 ,(
0U
0\
0c
0q
0x
0!"
0("
0/"
06"
0="
0D"
0K"
0R"
0Y"
0`"
0g"
0n"
0u"
0|"
0%#
0,#
03#
0:#
0A#
0H#
0O#
0V#
0]#
0d#
0k#
0r#
0y#
0"$
0)$
00$
07$
0>$
0E$
0L$
0S$
0Z$
0a$
0h$
0o$
0v$
0}$
0&%
0-%
04%
0;%
0B%
0I%
0P%
0W%
0^%
0e%
0l%
0s%
0z%
0#&
0*&
0A
b10000 0&
0O
0V
0]
0k
0r
0y
0""
0)"
00"
07"
0>"
0E"
0L"
0S"
0Z"
0a"
0h"
0o"
0v"
0}"
0&#
0-#
04#
0;#
0B#
0I#
0P#
0W#
0^#
0e#
0l#
0s#
0z#
0#$
0*$
01$
08$
0?$
0F$
0M$
0T$
0[$
0b$
0i$
0p$
0w$
0~$
0'%
0.%
05%
0<%
0C%
0J%
0Q%
0X%
0_%
0f%
0m%
0t%
0{%
0$&
0+&
0I
b10000 5
b10000 =
b10000 D
0P
0N
1*(
0L
0S
0Z
0a
1h
0o
0v
0}
0&"
0-"
04"
0;"
0B"
0I"
0P"
0W"
0^"
0e"
0l"
0s"
0z"
0##
0*#
01#
08#
0?#
0F#
0M#
0T#
0[#
0b#
0i#
0p#
0w#
0~#
0'$
0.$
05$
0<$
0C$
0J$
0Q$
0X$
0_$
0f$
0m$
0t$
0{$
0$%
0+%
02%
09%
0@%
0G%
0N%
0U%
0\%
0c%
0j%
0q%
0x%
0!&
0(&
0/&
0H
b1 |'
b1 ~'
0K
0R
0Y
0`
1g
0n
0u
0|
0%"
0,"
03"
0:"
0A"
0H"
0O"
0V"
0]"
0d"
0k"
0r"
0y"
0"#
0)#
00#
07#
0>#
0E#
0L#
0S#
0Z#
0a#
0h#
0o#
0v#
0}#
0&$
0-$
04$
0;$
0B$
0I$
0P$
0W$
0^$
0e$
0l$
0s$
0z$
0#%
0*%
01%
08%
0?%
0F%
0M%
0T%
0[%
0b%
0i%
0p%
0w%
0~%
0'&
0.&
b10000 @
0G
b10000 6
b10000 ;
0!
0$
1%
b0 B
0'
0"
1#
0&
#15
b100111000 7
b100111000 7&
b100111000 >&
b100111000 C&
b100111000 H&
b100111000 M&
b100111000 R&
b100111000 W&
b100111000 \&
b100111000 a&
b100111000 f&
b100111000 k&
b100111000 p&
b100111000 u&
b100111000 z&
b100111000 !'
b100111000 &'
b100111000 +'
b100111000 0'
b100111000 5'
b100111000 :'
b100111000 ?'
b100111000 D'
b100111000 I'
b100111000 N'
b100111000 S'
b100111000 X'
b100111000 ]'
b100111000 b'
b100111000 g'
b100111000 l'
b100111000 q'
b100111000 v'
b100111000 :
b100111000 1&
b10101 0&
1I
b10101 5
b10101 =
b10101 D
1W
1L
1Z
1D&
1K
1Y
0?&
b10101 @
b100 ;&
b100 {'
b100 ,(
b10101 6
b10101 ;
b10101 0
b10101 1
b10101 3(
b10 "(
b10 %(
b10 ((
b10 +(
b10101 .
b10 +
b10 2
b10 :&
b10 z'
b10101 )
b10101 4
b10101 9&
b1010100000010000100000011 -
b1010100000010000100000011 2(
b1011011011 A&
1!
#20
0T(
0R(
0K(
0L(
1F(
b0 @(
0E(
b11 6(
b11 8(
b11 A(
1M(
1I(
1P(
0G(
1N(
b1000001000000110110011 ,
b1000001000000110110011 -(
b1000001000000110110011 /(
b10 /
b10 .(
b10 7(
b10 :(
b10 =(
0!
#25
1U
1W
1O
0Z
0D&
0l
bx 7
bx 7&
bx >&
bx C&
bx H&
bx M&
bx R&
bx W&
bx \&
bx a&
bx f&
bx k&
bx p&
bx u&
bx z&
bx !'
bx &'
bx +'
bx 0'
bx 5'
bx :'
bx ?'
bx D'
bx I'
bx N'
bx S'
bx X'
bx ]'
bx b'
bx g'
bx l'
bx q'
bx v'
0K
1R
0Y
0g
1I&
0j
bx :
bx 1&
b11101 0&
0N
b10 @
b1000 ;&
b1000 {'
b1000 ,(
1*"
1z
1s
1e
0d
1^
0P
b1011011101 5
b1011011101 =
b1011011101 D
1I
b100 B
0H
b10 6
b10 ;
1-"
1}
1v
1h
1a
0S
1L
b10 0
b10 1
b10 3(
b11 "(
b11 %(
b11 ((
b11 +(
1+"
1{
1t
1f
1_
1Q
1J
b10 .
b11 +
b11 2
b11 :&
b11 z'
b1011011011 9
b1011011011 <
b1011011011 C
b1011011011 5&
b1 *
b1 3
b1 8&
b100111000 8
b100111000 2&
b100111000 6&
b10 )
b10 4
b10 9&
b100111000 F&
b1000001000000110110011 -
b1000001000000110110011 2(
1!
#30
1T(
1R(
1L(
0M(
1K(
b100 6(
b100 8(
b100 A(
0F(
b110 @(
1E(
0I(
1G(
b1000000000100010000001000110011 ,
b1000000000100010000001000110011 -(
b1000000000100010000001000110011 /(
b11 /
b11 .(
b11 7(
b11 :(
b11 =(
11"
1/"
1)"
0*"
1("
1""
1!"
1y
0z
1x
1r
0s
1q
1k
0W
0U
1c
b10011 0&
1j
1P
0O
0^
1]
1e
b11111110000 B
1d
0l
b10000010011 5
b10000010011 =
b10000010011 D
0#"
1S
0a
0h
1o
1&"
0R
1`
1g
1n
1%"
b100111000 @
b10000010011 7
b10000010011 7&
b10000010011 >&
b10000010011 C&
b10000010011 H&
b10000010011 M&
b10000010011 R&
b10000010011 W&
b10000010011 \&
b10000010011 a&
b10000010011 f&
b10000010011 k&
b10000010011 p&
b10000010011 u&
b10000010011 z&
b10000010011 !'
b10000010011 &'
b10000010011 +'
b10000010011 0'
b10000010011 5'
b10000010011 :'
b10000010011 ?'
b10000010011 D'
b10000010011 I'
b10000010011 N'
b10000010011 S'
b10000010011 X'
b10000010011 ]'
b10000010011 b'
b10000010011 g'
b10000010011 l'
b10000010011 q'
b10000010011 v'
b100111000 6
b100111000 ;
0!
1"
0#
#35
1N&
11"
1/"
1("
1!"
1x
1q
0I&
1)"
1""
1y
1r
b11111110000 B
1k
bx :
bx 1&
b10011 0&
b10000010011 7
b10000010011 7&
b10000010011 >&
b10000010011 C&
b10000010011 H&
b10000010011 M&
b10000010011 R&
b10000010011 W&
b10000010011 \&
b10000010011 a&
b10000010011 f&
b10000010011 k&
b10000010011 p&
b10000010011 u&
b10000010011 z&
b10000010011 !'
b10000010011 &'
b10000010011 +'
b10000010011 0'
b10000010011 5'
b10000010011 :'
b10000010011 ?'
b10000010011 D'
b10000010011 I'
b10000010011 N'
b10000010011 S'
b10000010011 X'
b10000010011 ]'
b10000010011 b'
b10000010011 g'
b10000010011 l'
b10000010011 q'
b10000010011 v'
b10000 ;&
b10000 {'
b10000 ,(
0*"
0#"
0z
0s
0l
1P
b10000010011 5
b10000010011 =
b10000010011 D
1I
1K
1R
0n
1u
1|
0%"
1,"
1-"
1&"
1}
1v
1o
1S
1L
b1011011011 @
b10000000001 0
b10000000001 1
b10000000001 3(
b100 "(
b100 %(
b100 ((
b100 +(
0+"
1$"
0{
0t
1m
0Q
0J
b1011011011 6
b1011011011 ;
b10000000001 .
b100 +
b100 2
b100 :&
b100 z'
b100111000 9
b100111000 <
b100111000 C
b100111000 5&
b10 *
b10 3
b10 8&
b1011011011 8
b1011011011 2&
b1011011011 6&
b1 )
b1 4
b1 9&
b1000000000100010000001000110011 -
b1000000000100010000001000110011 2(
b10000010011 K&
1!
#40
0[(
0R(
0Y(
0K(
0L(
0S(
1F(
b0 @(
0E(
0M(
b101 6(
b101 8(
b101 A(
1T(
1I(
0P(
1W(
0G(
0N(
1U(
b10000000010100100100011 ,
b10000000010100100100011 -(
b10000000010100100100011 /(
b100 /
b100 .(
b100 7(
b100 :(
b100 =(
0A
0+&
0*&
0$&
0#&
0{%
0z%
0t%
0s%
0m%
0l%
0f%
0e%
0_%
0^%
0X%
0W%
0Q%
0P%
0J%
0I%
0C%
0B%
0<%
0;%
05%
04%
0.%
0-%
0'%
0&%
0~$
0}$
0w$
0v$
0p$
0o$
0i$
0h$
0b$
0a$
0[$
0Z$
0T$
0S$
0M$
0L$
0F$
0E$
0?$
0>$
08$
07$
01$
00$
0*$
0)$
0#$
0"$
0z#
0y#
0s#
0r#
0l#
0k#
0e#
0d#
0^#
0]#
0W#
0V#
0P#
0O#
0I#
0H#
0B#
0A#
0;#
0:#
04#
03#
0-#
0,#
0&#
0%#
0}"
0|"
0v"
0u"
0o"
0n"
0h"
0g"
0a"
0`"
0Z"
0Y"
0S"
0R"
0L"
0K"
0E"
0D"
0>"
0="
07"
0P
0x
0!"
0/"
06"
0c
0j
0r
0y
0)"
00"
1W
1^
0]
1e
0d
0l
1s
0z
0#"
1*"
11"
18"
1?"
1F"
1M"
1T"
1["
1b"
1i"
1p"
1w"
1~"
1'#
1.#
15#
1<#
1C#
1J#
1Q#
1X#
1_#
1f#
1m#
1t#
1{#
1$$
1+$
12$
19$
1@$
1G$
1N$
1U$
1\$
1c$
1j$
1q$
1x$
1!%
1(%
1/%
16%
1=%
1D%
1K%
1R%
1Y%
1`%
1g%
1n%
1u%
1|%
1%&
1,&
0N
0L
0S
1Z
1a
1h
0o
0v
0}
0&"
0-"
14"
1;"
1B"
1I"
1P"
1W"
1^"
1e"
1l"
1s"
1z"
1##
1*#
11#
18#
1?#
1F#
1M#
1T#
1[#
1b#
1i#
1p#
1w#
1~#
1'$
1.$
15$
1<$
1C$
1J$
1Q$
1X$
1_$
1f$
1m$
1t$
1{$
1$%
1+%
12%
19%
1@%
1G%
1N%
1U%
1\%
1c%
1j%
1q%
1x%
1!&
1(&
1/&
b11101 0&
b1111111111111111111111111111111111111111111111111111111001011101 7
b1111111111111111111111111111111111111111111111111111111001011101 7&
b1111111111111111111111111111111111111111111111111111111001011101 >&
b1111111111111111111111111111111111111111111111111111111001011101 C&
b1111111111111111111111111111111111111111111111111111111001011101 H&
b1111111111111111111111111111111111111111111111111111111001011101 M&
b1111111111111111111111111111111111111111111111111111111001011101 R&
b1111111111111111111111111111111111111111111111111111111001011101 W&
b1111111111111111111111111111111111111111111111111111111001011101 \&
b1111111111111111111111111111111111111111111111111111111001011101 a&
b1111111111111111111111111111111111111111111111111111111001011101 f&
b1111111111111111111111111111111111111111111111111111111001011101 k&
b1111111111111111111111111111111111111111111111111111111001011101 p&
b1111111111111111111111111111111111111111111111111111111001011101 u&
b1111111111111111111111111111111111111111111111111111111001011101 z&
b1111111111111111111111111111111111111111111111111111111001011101 !'
b1111111111111111111111111111111111111111111111111111111001011101 &'
b1111111111111111111111111111111111111111111111111111111001011101 +'
b1111111111111111111111111111111111111111111111111111111001011101 0'
b1111111111111111111111111111111111111111111111111111111001011101 5'
b1111111111111111111111111111111111111111111111111111111001011101 :'
b1111111111111111111111111111111111111111111111111111111001011101 ?'
b1111111111111111111111111111111111111111111111111111111001011101 D'
b1111111111111111111111111111111111111111111111111111111001011101 I'
b1111111111111111111111111111111111111111111111111111111001011101 N'
b1111111111111111111111111111111111111111111111111111111001011101 S'
b1111111111111111111111111111111111111111111111111111111001011101 X'
b1111111111111111111111111111111111111111111111111111111001011101 ]'
b1111111111111111111111111111111111111111111111111111111001011101 b'
b1111111111111111111111111111111111111111111111111111111001011101 g'
b1111111111111111111111111111111111111111111111111111111001011101 l'
b1111111111111111111111111111111111111111111111111111111001011101 q'
b1111111111111111111111111111111111111111111111111111111001011101 v'
0H
0K
0R
1Y
0`
0g
1n
0u
0|
1%"
0,"
13"
1:"
1A"
1H"
1O"
1V"
1]"
1d"
1k"
1r"
1y"
1"#
1)#
10#
17#
1>#
1E#
1L#
1S#
1Z#
1a#
1h#
1o#
1v#
1}#
1&$
1-$
14$
1;$
1B$
1I$
1P$
1W$
1^$
1e$
1l$
1s$
1z$
1#%
1*%
11%
18%
1?%
1F%
1M%
1T%
1[%
1b%
1i%
1p%
1w%
1~%
1'&
1.&
b1111111111111111111111111111111111111111111111111111111001011101 5
b1111111111111111111111111111111111111111111111111111111001011101 =
b1111111111111111111111111111111111111111111111111111111001011101 D
1I
b1111111111111111111111111111111111111111111111111111110100100100 @
1G
0!
b1001000001 B
1'
#45
16'
b100 &(
0D&
0*(
0N&
1$(
0X&
0*"
0s
1P
0W
1z
01"
08"
0?"
0F"
0M"
0T"
0["
0b"
0i"
0p"
0w"
0~"
0'#
0.#
05#
0<#
0C#
0J#
0Q#
0X#
0_#
0f#
0m#
0t#
0{#
0$$
0+$
02$
09$
0@$
0G$
0N$
0U$
0\$
0c$
0j$
0q$
0x$
0!%
0(%
0/%
06%
0=%
0D%
0K%
0R%
0Y%
0`%
0g%
0n%
0u%
0|%
0%&
0,&
b100 |'
b100 ~'
b1000000000000000000 ;&
b1000000000000000000 {'
b0 ,(
0("
0q
b11 0&
b110100011 7
b110100011 7&
b110100011 >&
b110100011 C&
b110100011 H&
b110100011 M&
b110100011 R&
b110100011 W&
b110100011 \&
b110100011 a&
b110100011 f&
b110100011 k&
b110100011 p&
b110100011 u&
b110100011 z&
b110100011 !'
b110100011 &'
b110100011 +'
b110100011 0'
b110100011 5'
b110100011 :'
b110100011 ?'
b110100011 D'
b110100011 I'
b110100011 N'
b110100011 S'
b110100011 X'
b110100011 ]'
b110100011 b'
b110100011 g'
b110100011 l'
b110100011 q'
b110100011 v'
1S
0Z
1}
04"
0;"
0B"
0I"
0P"
0W"
0^"
0e"
0l"
0s"
0z"
0##
0*#
01#
08#
0?#
0F#
0M#
0T#
0[#
0b#
0i#
0p#
0w#
0~#
0'$
0.$
05$
0<$
0C$
0J$
0Q$
0X$
0_$
0f$
0m$
0t$
0{$
0$%
0+%
02%
09%
0@%
0G%
0N%
0U%
0\%
0c%
0j%
0q%
0x%
0!&
0(&
0/&
1#"
0""
1l
b1 B
0k
0e
b110100011 5
b110100011 =
b110100011 D
0^
1R
0Y
1|
03"
0:"
0A"
0H"
0O"
0V"
0]"
0d"
0k"
0r"
0y"
0"#
0)#
00#
07#
0>#
0E#
0L#
0S#
0Z#
0a#
0h#
0o#
0v#
0}#
0&$
0-$
04$
0;$
0B$
0I$
0P$
0W$
0^$
0e$
0l$
0s$
0z$
0#%
0*%
01%
08%
0?%
0F%
0M%
0T%
0[%
0b%
0i%
0p%
0w%
0~%
0'&
0.&
1&"
1o
0h
0a
b110100010 @
b10010 0
b10010 1
b10010 3(
b10 }'
b10 "(
b10 %(
b10 ((
b10 +(
0$"
0m
0f
0_
b1111111111111111111111111111111111111111111111111111111001011101 6
b1111111111111111111111111111111111111111111111111111111001011101 ;
b10010 .
b10010 +
b10010 2
b10010 :&
b10010 z'
b0 9
b0 <
b0 C
b0 5&
b0 *
b0 3
b0 8&
b1111111111111111111111111111111111111111111111111111111001011101 8
b1111111111111111111111111111111111111111111111111111111001011101 2&
b1111111111111111111111111111111111111111111111111111111001011101 6&
b100 )
b100 4
b100 9&
b1111111111111111111111111111111111111111111111111111111001011101 P&
b10000000010100100100011 -
b10000000010100100100011 2(
1!
#50
1M(
1K(
b110 6(
b110 8(
b110 A(
0F(
b10 @(
1E(
0I(
1G(
b11001000100000001010010011 ,
b11001000100000001010010011 -(
b11001000100000001010010011 /(
b101 /
b101 .(
b101 7(
b101 :(
b101 =(
06'
b0 ;&
b0 {'
b0 &(
1e
0l
0z
0#"
0$(
1h
0o
0}
0&"
b10010 0&
b0 |'
b0 ~'
1g
0n
0|
0%"
b10010 5
b10010 =
b10010 D
0I
b10010 @
0G
bx 7
bx 7&
bx >&
bx C&
bx H&
bx M&
bx R&
bx W&
bx \&
bx a&
bx f&
bx k&
bx p&
bx u&
bx z&
bx !'
bx &'
bx +'
bx 0'
bx 5'
bx :'
bx ?'
bx D'
bx I'
bx N'
bx S'
bx X'
bx ]'
bx b'
bx g'
bx l'
bx q'
bx v'
b10010 6
b10010 ;
0!
1$
0%
b0 B
0'
0"
1#
#55
1z
1x
1r
1q
1k
1o
0l
1n
1j
b1111 0&
b110010 @
1,&
1%&
1|%
1u%
1n%
1g%
1`%
1Y%
1R%
1K%
1D%
1=%
16%
1/%
1(%
1!%
1x$
1q$
1j$
1c$
1\$
1U$
1N$
1G$
1@$
19$
12$
1+$
1$$
1{#
1t#
1m#
1f#
1_#
1X#
1Q#
1J#
1C#
1<#
15#
1.#
1'#
1~"
1w"
1p"
1i"
1b"
1["
1T"
1M"
1F"
1?"
18"
11"
1*"
0s
0e
b11100000 B
1d
1^
1W
b1111111111111111111111111111111111111111111111111111111010001111 5
b1111111111111111111111111111111111111111111111111111111010001111 =
b1111111111111111111111111111111111111111111111111111111010001111 D
1I
b110010 6
b110010 ;
1/&
1(&
1!&
1x%
1q%
1j%
1c%
1\%
1U%
1N%
1G%
1@%
19%
12%
1+%
1$%
1{$
1t$
1m$
1f$
1_$
1X$
1Q$
1J$
1C$
1<$
15$
1.$
1'$
1~#
1w#
1p#
1i#
1b#
1[#
1T#
1M#
1F#
1?#
18#
11#
1*#
1##
1z"
1s"
1l"
1e"
1^"
1W"
1P"
1I"
1B"
1;"
14"
1-"
1v
0h
1a
1Z
1L
b110010 0
b110010 1
b110010 3(
b0 }'
b101 "(
b101 %(
b101 ((
b101 +(
1-&
1&&
1}%
1v%
1o%
1h%
1a%
1Z%
1S%
1L%
1E%
1>%
17%
10%
1)%
1"%
1y$
1r$
1k$
1d$
1]$
1V$
1O$
1H$
1A$
1:$
13$
1,$
1%$
1|#
1u#
1n#
1g#
1`#
1Y#
1R#
1K#
1D#
1=#
16#
1/#
1(#
1!#
1x"
1q"
1j"
1c"
1\"
1U"
1N"
1G"
1@"
19"
12"
1+"
1t
1f
1_
1X
1J
b110010 .
b101 +
b101 2
b101 :&
b101 z'
b1111111111111111111111111111111111111111111111111111111001011101 9
b1111111111111111111111111111111111111111111111111111111001011101 <
b1111111111111111111111111111111111111111111111111111111001011101 C
b1111111111111111111111111111111111111111111111111111111001011101 5&
b100 *
b100 3
b100 8&
bx 8
bx 2&
bx 6&
b10010 )
b10010 4
b10010 9&
bx 7
bx 7&
bx >&
bx C&
bx H&
bx M&
bx R&
bx W&
bx \&
bx a&
bx f&
bx k&
bx p&
bx u&
bx z&
bx !'
bx &'
bx +'
bx 0'
bx 5'
bx :'
bx ?'
bx D'
bx I'
bx N'
bx S'
bx X'
bx ]'
bx b'
bx g'
bx l'
bx q'
bx v'
b11001000100000001010010011 -
b11001000100000001010010011 2(
bx :
bx 1&
1!
#60
0[(
0Y(
0S(
1T(
0R(
0K(
0L(
1F(
b0 @(
0E(
b111 6(
b111 8(
b111 A(
1M(
1I(
1P(
0G(
1N(
b1001000000010001100000011 ,
b1001000000010001100000011 -(
b1001000000010001100000011 /(
b110 /
b110 .(
b110 7(
b110 :(
b110 =(
1S&
b100000 ;&
b100000 {'
b100000 ,(
1*(
b1 |'
b1 ~'
b1111111111111111111111111111111111111111111111111111111010001111 7
b1111111111111111111111111111111111111111111111111111111010001111 7&
b1111111111111111111111111111111111111111111111111111111010001111 >&
b1111111111111111111111111111111111111111111111111111111010001111 C&
b1111111111111111111111111111111111111111111111111111111010001111 H&
b1111111111111111111111111111111111111111111111111111111010001111 M&
b1111111111111111111111111111111111111111111111111111111010001111 R&
b1111111111111111111111111111111111111111111111111111111010001111 W&
b1111111111111111111111111111111111111111111111111111111010001111 \&
b1111111111111111111111111111111111111111111111111111111010001111 a&
b1111111111111111111111111111111111111111111111111111111010001111 f&
b1111111111111111111111111111111111111111111111111111111010001111 k&
b1111111111111111111111111111111111111111111111111111111010001111 p&
b1111111111111111111111111111111111111111111111111111111010001111 u&
b1111111111111111111111111111111111111111111111111111111010001111 z&
b1111111111111111111111111111111111111111111111111111111010001111 !'
b1111111111111111111111111111111111111111111111111111111010001111 &'
b1111111111111111111111111111111111111111111111111111111010001111 +'
b1111111111111111111111111111111111111111111111111111111010001111 0'
b1111111111111111111111111111111111111111111111111111111010001111 5'
b1111111111111111111111111111111111111111111111111111111010001111 :'
b1111111111111111111111111111111111111111111111111111111010001111 ?'
b1111111111111111111111111111111111111111111111111111111010001111 D'
b1111111111111111111111111111111111111111111111111111111010001111 I'
b1111111111111111111111111111111111111111111111111111111010001111 N'
b1111111111111111111111111111111111111111111111111111111010001111 S'
b1111111111111111111111111111111111111111111111111111111010001111 X'
b1111111111111111111111111111111111111111111111111111111010001111 ]'
b1111111111111111111111111111111111111111111111111111111010001111 b'
b1111111111111111111111111111111111111111111111111111111010001111 g'
b1111111111111111111111111111111111111111111111111111111010001111 l'
b1111111111111111111111111111111111111111111111111111111010001111 q'
b1111111111111111111111111111111111111111111111111111111010001111 v'
0!
0$
1%
1"
#65
0q
0z
0k
0o
0N&
1X&
0x
0l
0n
0S&
0r
0j
b1111111111111111111111111111111111111111111111111111111001011101 :
b1111111111111111111111111111111111111111111111111111111001011101 1&
b10010 0&
b10010 7
b10010 7&
b10010 >&
b10010 C&
b10010 H&
b10010 M&
b10010 R&
b10010 W&
b10010 \&
b10010 a&
b10010 f&
b10010 k&
b10010 p&
b10010 u&
b10010 z&
b10010 !'
b10010 &'
b10010 +'
b10010 0'
b10010 5'
b10010 :'
b10010 ?'
b10010 D'
b10010 I'
b10010 N'
b10010 S'
b10010 X'
b10010 ]'
b10010 b'
b10010 g'
b10010 l'
b10010 q'
b10010 v'
b10010 @
b1000000 ;&
b1000000 {'
b1000000 ,(
0,&
0%&
0|%
0u%
0n%
0g%
0`%
0Y%
0R%
0K%
0D%
0=%
06%
0/%
0(%
0!%
0x$
0q$
0j$
0c$
0\$
0U$
0N$
0G$
0@$
09$
02$
0+$
0$$
0{#
0t#
0m#
0f#
0_#
0X#
0Q#
0J#
0C#
0<#
05#
0.#
0'#
0~"
0w"
0p"
0i"
0b"
0["
0T"
0M"
0F"
0?"
08"
01"
0*"
0s
1e
b0 B
0d
0^
0W
b10010 5
b10010 =
b10010 D
0I
b10010 6
b10010 ;
0/&
0(&
0!&
0x%
0q%
0j%
0c%
0\%
0U%
0N%
0G%
0@%
09%
02%
0+%
0$%
0{$
0t$
0m$
0f$
0_$
0X$
0Q$
0J$
0C$
0<$
05$
0.$
0'$
0~#
0w#
0p#
0i#
0b#
0[#
0T#
0M#
0F#
0?#
08#
01#
0*#
0##
0z"
0s"
0l"
0e"
0^"
0W"
0P"
0I"
0B"
0;"
04"
0-"
0v
1h
0a
0Z
0L
b10010 0
b10010 1
b10010 3(
b110 "(
b110 %(
b110 ((
b110 +(
0-&
0&&
0}%
0v%
0o%
0h%
0a%
0Z%
0S%
0L%
0E%
0>%
07%
00%
0)%
0"%
0y$
0r$
0k$
0d$
0]$
0V$
0O$
0H$
0A$
0:$
03$
0,$
0%$
0|#
0u#
0n#
0g#
0`#
0Y#
0R#
0K#
0D#
0=#
06#
0/#
0(#
0!#
0x"
0q"
0j"
0c"
0\"
0U"
0N"
0G"
0@"
09"
02"
0+"
0t
0f
0_
0X
0J
b10010 .
b110 +
b110 2
b110 :&
b110 z'
b0 9
b0 <
b0 C
b0 5&
b0 *
b0 3
b0 8&
b1111111111111111111111111111111111111111111111111111111010001111 U&
b1001000000010001100000011 -
b1001000000010001100000011 2(
1!
#70
1[(
1Y(
1S(
0T(
1R(
1L(
0M(
1K(
b1000 6(
b1000 8(
b1000 A(
0F(
b1110 @(
1E(
0I(
1G(
bx ,
bx -(
bx /(
b111 /
b111 .(
b111 7(
b111 :(
b111 =(
b1111111111111111111111111111111111111111111111111111111001011101 7
b1111111111111111111111111111111111111111111111111111111001011101 7&
b1111111111111111111111111111111111111111111111111111111001011101 >&
b1111111111111111111111111111111111111111111111111111111001011101 C&
b1111111111111111111111111111111111111111111111111111111001011101 H&
b1111111111111111111111111111111111111111111111111111111001011101 M&
b1111111111111111111111111111111111111111111111111111111001011101 R&
b1111111111111111111111111111111111111111111111111111111001011101 W&
b1111111111111111111111111111111111111111111111111111111001011101 \&
b1111111111111111111111111111111111111111111111111111111001011101 a&
b1111111111111111111111111111111111111111111111111111111001011101 f&
b1111111111111111111111111111111111111111111111111111111001011101 k&
b1111111111111111111111111111111111111111111111111111111001011101 p&
b1111111111111111111111111111111111111111111111111111111001011101 u&
b1111111111111111111111111111111111111111111111111111111001011101 z&
b1111111111111111111111111111111111111111111111111111111001011101 !'
b1111111111111111111111111111111111111111111111111111111001011101 &'
b1111111111111111111111111111111111111111111111111111111001011101 +'
b1111111111111111111111111111111111111111111111111111111001011101 0'
b1111111111111111111111111111111111111111111111111111111001011101 5'
b1111111111111111111111111111111111111111111111111111111001011101 :'
b1111111111111111111111111111111111111111111111111111111001011101 ?'
b1111111111111111111111111111111111111111111111111111111001011101 D'
b1111111111111111111111111111111111111111111111111111111001011101 I'
b1111111111111111111111111111111111111111111111111111111001011101 N'
b1111111111111111111111111111111111111111111111111111111001011101 S'
b1111111111111111111111111111111111111111111111111111111001011101 X'
b1111111111111111111111111111111111111111111111111111111001011101 ]'
b1111111111111111111111111111111111111111111111111111111001011101 b'
b1111111111111111111111111111111111111111111111111111111001011101 g'
b1111111111111111111111111111111111111111111111111111111001011101 l'
b1111111111111111111111111111111111111111111111111111111001011101 q'
b1111111111111111111111111111111111111111111111111111111001011101 v'
0!
0"
#75
xA
x+&
x*&
x$&
x#&
x{%
xz%
xt%
xs%
xm%
xl%
xf%
xe%
x_%
x^%
xX%
xW%
xQ%
xP%
xJ%
xI%
xC%
xB%
x<%
x;%
x5%
x4%
x.%
x-%
x'%
x&%
x~$
x}$
xw$
xv$
xp$
xo$
xi$
xh$
xb$
xa$
x[$
xZ$
xT$
xS$
xM$
xL$
xF$
xE$
x?$
x>$
x8$
x7$
x1$
x0$
x*$
x)$
x#$
x"$
xz#
xy#
xs#
xr#
xl#
xk#
xe#
xd#
x^#
x]#
xW#
xV#
xP#
xO#
xI#
xH#
xB#
xA#
x;#
x:#
x4#
x3#
x-#
x,#
x&#
x%#
x}"
x|"
xv"
xu"
xo"
xn"
xh"
xg"
xa"
x`"
xZ"
xY"
xS"
xR"
xL"
xK"
xE"
xD"
x>"
x,'
x1'
x6'
x;'
x@'
xE'
xJ'
xO'
xT'
xY'
x^'
xc'
xh'
xm'
xr'
xw'
xb&
xg&
xl&
xq&
xv&
x{&
x"'
x''
bx &(
bx #(
xN
xc
xx
x!"
x("
x/"
x6"
x="
bx )(
x?&
xD&
xI&
xq
x\
xH
x]
xr
xy
x""
x)"
x0"
x7"
xN&
xS&
xk
xV
x*(
x$(
x!(
xX&
bx 7
bx 7&
bx >&
bx C&
bx H&
bx M&
bx R&
bx W&
bx \&
bx a&
bx f&
bx k&
bx p&
bx u&
bx z&
bx !'
bx &'
bx +'
bx 0'
bx 5'
bx :'
bx ?'
bx D'
bx I'
bx N'
bx S'
bx X'
bx ]'
bx b'
bx g'
bx l'
bx q'
bx v'
xK
xR
xY
x`
xg
xn
xu
x|
x%"
x,"
x3"
x:"
x'(
x]&
xj
xU
bx :
bx 1&
bx 0&
b0xxxxxxxxxxxx @
bx |'
bx ~'
bx ;&
bx {'
bx ,(
x,&
x%&
x|%
xu%
xn%
xg%
x`%
xY%
xR%
xK%
xD%
x=%
x6%
x/%
x(%
x!%
xx$
xq$
xj$
xc$
x\$
xU$
xN$
xG$
x@$
x9$
x2$
x+$
x$$
x{#
xt#
xm#
xf#
x_#
xX#
xQ#
xJ#
xC#
x<#
x5#
x.#
x'#
x~"
xw"
xp"
xi"
xb"
x["
xT"
xM"
xF"
x?"
x8"
x1"
x*"
x#"
xz
xs
xl
xe
xd
x^
xW
xP
bx0 B
xO
bx 5
bx =
bx D
xI
b0xxxxxxxxxxxx 6
b0xxxxxxxxxxxx ;
x/&
x(&
x!&
xx%
xq%
xj%
xc%
x\%
xU%
xN%
xG%
x@%
x9%
x2%
x+%
x$%
x{$
xt$
xm$
xf$
x_$
xX$
xQ$
xJ$
xC$
x<$
x5$
x.$
x'$
x~#
xw#
xp#
xi#
xb#
x[#
xT#
xM#
xF#
x?#
x8#
x1#
x*#
x##
xz"
xs"
xl"
xe"
x^"
xW"
xP"
xI"
xB"
x;"
x4"
x-"
x&"
x}
xv
xo
xh
xa
xZ
xS
xL
bx 0
bx 1
bx 3(
bx }'
bx "(
bx %(
bx ((
bx +(
x-&
x&&
x}%
xv%
xo%
xh%
xa%
xZ%
xS%
xL%
xE%
x>%
x7%
x0%
x)%
x"%
xy$
xr$
xk$
xd$
x]$
xV$
xO$
xH$
xA$
x:$
x3$
x,$
x%$
x|#
xu#
xn#
xg#
x`#
xY#
xR#
xK#
xD#
x=#
x6#
x/#
x(#
x!#
xx"
xq"
xj"
xc"
x\"
xU"
xN"
xG"
x@"
x9"
x2"
x+"
x$"
x{
xt
xm
xf
x_
xX
xQ
xJ
bx .
bx +
bx 2
bx :&
bx z'
bx 9
bx <
bx C
bx 5&
bx *
bx 3
bx 8&
bx )
bx 4
bx 9&
bx -
bx 2(
b1111111111111111111111111111111111111111111111111111111001011101 Z&
1!
#80
0b(
0R(
0Y(
0`(
0K(
0L(
0S(
0Z(
1F(
b0 @(
0E(
0M(
0T(
b1001 6(
b1001 8(
b1001 A(
1[(
1I(
0P(
0W(
1^(
0G(
0N(
0U(
1\(
b1000 /
b1000 .(
b1000 7(
b1000 :(
b1000 =(
0!
